<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-01-01T17:29:12+00:00</updated><id>/feed.xml</id><title type="html">Spark NLP</title><subtitle>High Performance NLP with Apache Spark
</subtitle><author><name>{&quot;type&quot;=&gt;nil, &quot;name&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;googleplus&quot;=&gt;nil, &quot;telegram&quot;=&gt;nil, &quot;medium&quot;=&gt;nil, &quot;zhihu&quot;=&gt;nil, &quot;douban&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;npm&quot;=&gt;nil}</name></author><entry><title type="html">English action_model DistilBertForSequenceClassification from SergeyTW</title><link href="/2024/01/01/action_model_en.html" rel="alternate" type="text/html" title="English action_model DistilBertForSequenceClassification from SergeyTW" /><published>2024-01-01T00:00:00+00:00</published><updated>2024-01-01T00:00:00+00:00</updated><id>/2024/01/01/action_model_en</id><content type="html" xml:base="/2024/01/01/action_model_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`action_model` is a English model originally trained by SergeyTW.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/action_model_en_5.2.2_3.0_1704070543545.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/action_model_en_5.2.2_3.0_1704070543545.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;action_model&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;action_model&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|action_model|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.5 MB|

## References

https://huggingface.co/SergeyTW/action_model</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.action_model is a English model originally trained by SergeyTW. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;action_model&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;action_model&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: action_model Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.5 MB References https://huggingface.co/SergeyTW/action_model</summary></entry><entry><title type="html">English ad_distilbert0 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/01/ad_distilbert0_en.html" rel="alternate" type="text/html" title="English ad_distilbert0 DistilBertForSequenceClassification from tombellens" /><published>2024-01-01T00:00:00+00:00</published><updated>2024-01-01T00:00:00+00:00</updated><id>/2024/01/01/ad_distilbert0_en</id><content type="html" xml:base="/2024/01/01/ad_distilbert0_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert0` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert0_en_5.2.2_3.0_1704082685858.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert0_en_5.2.2_3.0_1704082685858.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert0&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert0&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert0|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.5 MB|

## References

https://huggingface.co/tombellens/AD-distilBert0</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert0 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert0&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert0&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert0 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.5 MB References https://huggingface.co/tombellens/AD-distilBert0</summary></entry><entry><title type="html">English ad_distilbert18 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/01/ad_distilbert18_en.html" rel="alternate" type="text/html" title="English ad_distilbert18 DistilBertForSequenceClassification from tombellens" /><published>2024-01-01T00:00:00+00:00</published><updated>2024-01-01T00:00:00+00:00</updated><id>/2024/01/01/ad_distilbert18_en</id><content type="html" xml:base="/2024/01/01/ad_distilbert18_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert18` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert18_en_5.2.2_3.0_1704083381820.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert18_en_5.2.2_3.0_1704083381820.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert18&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert18&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert18|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert18</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert18 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert18&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert18&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert18 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert18</summary></entry><entry><title type="html">English ad_distilbert1 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/01/ad_distilbert1_en.html" rel="alternate" type="text/html" title="English ad_distilbert1 DistilBertForSequenceClassification from tombellens" /><published>2024-01-01T00:00:00+00:00</published><updated>2024-01-01T00:00:00+00:00</updated><id>/2024/01/01/ad_distilbert1_en</id><content type="html" xml:base="/2024/01/01/ad_distilbert1_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert1` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert1_en_5.2.2_3.0_1704077170771.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert1_en_5.2.2_3.0_1704077170771.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert1&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert1&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert1|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert1</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert1 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert1&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert1&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert1 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert1</summary></entry><entry><title type="html">English ad_distilbert25 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/01/ad_distilbert25_en.html" rel="alternate" type="text/html" title="English ad_distilbert25 DistilBertForSequenceClassification from tombellens" /><published>2024-01-01T00:00:00+00:00</published><updated>2024-01-01T00:00:00+00:00</updated><id>/2024/01/01/ad_distilbert25_en</id><content type="html" xml:base="/2024/01/01/ad_distilbert25_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert25` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert25_en_5.2.2_3.0_1704080945460.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert25_en_5.2.2_3.0_1704080945460.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert25&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert25&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert25|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert25</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert25 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert25&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert25&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert25 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert25</summary></entry><entry><title type="html">English ad_distilbert27 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/01/ad_distilbert27_en.html" rel="alternate" type="text/html" title="English ad_distilbert27 DistilBertForSequenceClassification from tombellens" /><published>2024-01-01T00:00:00+00:00</published><updated>2024-01-01T00:00:00+00:00</updated><id>/2024/01/01/ad_distilbert27_en</id><content type="html" xml:base="/2024/01/01/ad_distilbert27_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert27` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert27_en_5.2.2_3.0_1704070882460.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert27_en_5.2.2_3.0_1704070882460.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert27&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert27&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert27|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.5 MB|

## References

https://huggingface.co/tombellens/AD-distilBert27</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert27 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert27&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert27&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert27 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.5 MB References https://huggingface.co/tombellens/AD-distilBert27</summary></entry><entry><title type="html">English ad_distilbert28 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/01/ad_distilbert28_en.html" rel="alternate" type="text/html" title="English ad_distilbert28 DistilBertForSequenceClassification from tombellens" /><published>2024-01-01T00:00:00+00:00</published><updated>2024-01-01T00:00:00+00:00</updated><id>/2024/01/01/ad_distilbert28_en</id><content type="html" xml:base="/2024/01/01/ad_distilbert28_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert28` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert28_en_5.2.2_3.0_1704089991575.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert28_en_5.2.2_3.0_1704089991575.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert28&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert28&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert28|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert28</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert28 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert28&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert28&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert28 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert28</summary></entry><entry><title type="html">English ad_distilbert29 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/01/ad_distilbert29_en.html" rel="alternate" type="text/html" title="English ad_distilbert29 DistilBertForSequenceClassification from tombellens" /><published>2024-01-01T00:00:00+00:00</published><updated>2024-01-01T00:00:00+00:00</updated><id>/2024/01/01/ad_distilbert29_en</id><content type="html" xml:base="/2024/01/01/ad_distilbert29_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert29` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert29_en_5.2.2_3.0_1704087917930.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert29_en_5.2.2_3.0_1704087917930.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert29&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert29&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert29|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert29</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert29 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert29&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert29&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert29 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert29</summary></entry><entry><title type="html">English ad_distilbert32 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/01/ad_distilbert32_en.html" rel="alternate" type="text/html" title="English ad_distilbert32 DistilBertForSequenceClassification from tombellens" /><published>2024-01-01T00:00:00+00:00</published><updated>2024-01-01T00:00:00+00:00</updated><id>/2024/01/01/ad_distilbert32_en</id><content type="html" xml:base="/2024/01/01/ad_distilbert32_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert32` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert32_en_5.2.2_3.0_1704094867569.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert32_en_5.2.2_3.0_1704094867569.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert32&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert32&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert32|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert32</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert32 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert32&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert32&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert32 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert32</summary></entry><entry><title type="html">English ad_distilbert40 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/01/ad_distilbert40_en.html" rel="alternate" type="text/html" title="English ad_distilbert40 DistilBertForSequenceClassification from tombellens" /><published>2024-01-01T00:00:00+00:00</published><updated>2024-01-01T00:00:00+00:00</updated><id>/2024/01/01/ad_distilbert40_en</id><content type="html" xml:base="/2024/01/01/ad_distilbert40_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert40` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert40_en_5.2.2_3.0_1704073654002.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert40_en_5.2.2_3.0_1704073654002.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert40&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert40&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert40|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert40</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert40 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert40&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert40&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert40 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert40</summary></entry></feed>