<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-03-14T19:36:17+00:00</updated><id>/feed.xml</id><title type="html">Spark NLP</title><subtitle>High Performance NLP with Apache Spark
</subtitle><author><name>{&quot;type&quot;=&gt;nil, &quot;name&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;googleplus&quot;=&gt;nil, &quot;telegram&quot;=&gt;nil, &quot;medium&quot;=&gt;nil, &quot;zhihu&quot;=&gt;nil, &quot;douban&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;npm&quot;=&gt;nil}</name></author><entry><title type="html">Indonesian asr_exp_w2v2t_vp_s211 TFWav2Vec2ForCTC from jonatasgrosman</title><link href="/2023/03/14/asr_exp_w2v2t_vp_s211_id.html" rel="alternate" type="text/html" title="Indonesian asr_exp_w2v2t_vp_s211 TFWav2Vec2ForCTC from jonatasgrosman" /><published>2023-03-14T00:00:00+00:00</published><updated>2023-03-14T00:00:00+00:00</updated><id>/2023/03/14/asr_exp_w2v2t_vp_s211_id</id><content type="html" xml:base="/2023/03/14/asr_exp_w2v2t_vp_s211_id.html">## Description

Pretrained Wav2vec2  model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`asr_exp_w2v2t_vp_s211` is a Indonesian model originally trained by jonatasgrosman.

NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_exp_w2v2t_vp_s211_gpu

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/asr_exp_w2v2t_vp_s211_id_4.4.0_3.0_1678786354736.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/asr_exp_w2v2t_vp_s211_id_4.4.0_3.0_1678786354736.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

audio_assembler = AudioAssembler() \
    .setInputCol(&quot;audio_content&quot;) \
    .setOutputCol(&quot;audio_assembler&quot;)

speech_to_text = Wav2Vec2ForCTC \
    .pretrained(&quot;asr_exp_w2v2t_vp_s211&quot;, &quot;id&quot;)\
    .setInputCols(&quot;audio_assembler&quot;) \
    .setOutputCol(&quot;text&quot;)

pipeline = Pipeline(stages=[
  audio_assembler,
  speech_to_text,
])

pipelineModel = pipeline.fit(audioDf)

pipelineDF = pipelineModel.transform(audioDf)
```
```scala

val audioAssembler = new AudioAssembler()
    .setInputCol(&quot;audio_content&quot;) 
    .setOutputCol(&quot;audio_assembler&quot;)

val speechToText = Wav2Vec2ForCTC
    .pretrained(&quot;asr_exp_w2v2t_vp_s211&quot;, &quot;id&quot;)
    .setInputCols(&quot;audio_assembler&quot;) 
    .setOutputCol(&quot;text&quot;) 

val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText))

val pipelineModel = pipeline.fit(audioDf)

val pipelineDF = pipelineModel.transform(audioDf)

```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|asr_exp_w2v2t_vp_s211|
|Compatibility:|Spark NLP 4.4.0+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[audio_assembler]|
|Output Labels:|[text]|
|Language:|id|
|Size:|1.2 GB|</content><author><name>John Snow Labs</name></author><category term="wav2vec2" /><category term="id" /><category term="audio" /><category term="open_source" /><category term="asr" /><category term="tensorflow" /><summary type="html">Description Pretrained Wav2vec2 model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.asr_exp_w2v2t_vp_s211 is a Indonesian model originally trained by jonatasgrosman. NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_exp_w2v2t_vp_s211_gpu Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU audio_assembler = AudioAssembler() \ .setInputCol(&quot;audio_content&quot;) \ .setOutputCol(&quot;audio_assembler&quot;) speech_to_text = Wav2Vec2ForCTC \ .pretrained(&quot;asr_exp_w2v2t_vp_s211&quot;, &quot;id&quot;)\ .setInputCols(&quot;audio_assembler&quot;) \ .setOutputCol(&quot;text&quot;) pipeline = Pipeline(stages=[ audio_assembler, speech_to_text, ]) pipelineModel = pipeline.fit(audioDf) pipelineDF = pipelineModel.transform(audioDf) val audioAssembler = new AudioAssembler() .setInputCol(&quot;audio_content&quot;) .setOutputCol(&quot;audio_assembler&quot;) val speechToText = Wav2Vec2ForCTC .pretrained(&quot;asr_exp_w2v2t_vp_s211&quot;, &quot;id&quot;) .setInputCols(&quot;audio_assembler&quot;) .setOutputCol(&quot;text&quot;) val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText)) val pipelineModel = pipeline.fit(audioDf) val pipelineDF = pipelineModel.transform(audioDf) Model Information Model Name: asr_exp_w2v2t_vp_s211 Compatibility: Spark NLP 4.4.0+ License: Open Source Edition: Official Input Labels: [audio_assembler] Output Labels: [text] Language: id Size: 1.2 GB</summary></entry><entry><title type="html">Thai asr_exp_w2v2t_vp_s26 TFWav2Vec2ForCTC from jonatasgrosman</title><link href="/2023/03/14/asr_exp_w2v2t_vp_s26_th.html" rel="alternate" type="text/html" title="Thai asr_exp_w2v2t_vp_s26 TFWav2Vec2ForCTC from jonatasgrosman" /><published>2023-03-14T00:00:00+00:00</published><updated>2023-03-14T00:00:00+00:00</updated><id>/2023/03/14/asr_exp_w2v2t_vp_s26_th</id><content type="html" xml:base="/2023/03/14/asr_exp_w2v2t_vp_s26_th.html">## Description

Pretrained Wav2vec2  model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`asr_exp_w2v2t_vp_s26` is a Thai model originally trained by jonatasgrosman.

NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_exp_w2v2t_vp_s26_gpu

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/asr_exp_w2v2t_vp_s26_th_4.4.0_3.0_1678783115813.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/asr_exp_w2v2t_vp_s26_th_4.4.0_3.0_1678783115813.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

audio_assembler = AudioAssembler() \
    .setInputCol(&quot;audio_content&quot;) \
    .setOutputCol(&quot;audio_assembler&quot;)

speech_to_text = Wav2Vec2ForCTC \
    .pretrained(&quot;asr_exp_w2v2t_vp_s26&quot;, &quot;th&quot;)\
    .setInputCols(&quot;audio_assembler&quot;) \
    .setOutputCol(&quot;text&quot;)

pipeline = Pipeline(stages=[
  audio_assembler,
  speech_to_text,
])

pipelineModel = pipeline.fit(audioDf)

pipelineDF = pipelineModel.transform(audioDf)
```
```scala

val audioAssembler = new AudioAssembler()
    .setInputCol(&quot;audio_content&quot;) 
    .setOutputCol(&quot;audio_assembler&quot;)

val speechToText = Wav2Vec2ForCTC
    .pretrained(&quot;asr_exp_w2v2t_vp_s26&quot;, &quot;th&quot;)
    .setInputCols(&quot;audio_assembler&quot;) 
    .setOutputCol(&quot;text&quot;) 

val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText))

val pipelineModel = pipeline.fit(audioDf)

val pipelineDF = pipelineModel.transform(audioDf)

```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|asr_exp_w2v2t_vp_s26|
|Compatibility:|Spark NLP 4.4.0+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[audio_assembler]|
|Output Labels:|[text]|
|Language:|th|
|Size:|1.2 GB|</content><author><name>John Snow Labs</name></author><category term="wav2vec2" /><category term="th" /><category term="audio" /><category term="open_source" /><category term="asr" /><category term="tensorflow" /><summary type="html">Description Pretrained Wav2vec2 model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.asr_exp_w2v2t_vp_s26 is a Thai model originally trained by jonatasgrosman. NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_exp_w2v2t_vp_s26_gpu Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU audio_assembler = AudioAssembler() \ .setInputCol(&quot;audio_content&quot;) \ .setOutputCol(&quot;audio_assembler&quot;) speech_to_text = Wav2Vec2ForCTC \ .pretrained(&quot;asr_exp_w2v2t_vp_s26&quot;, &quot;th&quot;)\ .setInputCols(&quot;audio_assembler&quot;) \ .setOutputCol(&quot;text&quot;) pipeline = Pipeline(stages=[ audio_assembler, speech_to_text, ]) pipelineModel = pipeline.fit(audioDf) pipelineDF = pipelineModel.transform(audioDf) val audioAssembler = new AudioAssembler() .setInputCol(&quot;audio_content&quot;) .setOutputCol(&quot;audio_assembler&quot;) val speechToText = Wav2Vec2ForCTC .pretrained(&quot;asr_exp_w2v2t_vp_s26&quot;, &quot;th&quot;) .setInputCols(&quot;audio_assembler&quot;) .setOutputCol(&quot;text&quot;) val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText)) val pipelineModel = pipeline.fit(audioDf) val pipelineDF = pipelineModel.transform(audioDf) Model Information Model Name: asr_exp_w2v2t_vp_s26 Compatibility: Spark NLP 4.4.0+ License: Open Source Edition: Official Input Labels: [audio_assembler] Output Labels: [text] Language: th Size: 1.2 GB</summary></entry><entry><title type="html">Indonesian asr_exp_w2v2t_vp_s609 TFWav2Vec2ForCTC from jonatasgrosman</title><link href="/2023/03/14/asr_exp_w2v2t_vp_s609_id.html" rel="alternate" type="text/html" title="Indonesian asr_exp_w2v2t_vp_s609 TFWav2Vec2ForCTC from jonatasgrosman" /><published>2023-03-14T00:00:00+00:00</published><updated>2023-03-14T00:00:00+00:00</updated><id>/2023/03/14/asr_exp_w2v2t_vp_s609_id</id><content type="html" xml:base="/2023/03/14/asr_exp_w2v2t_vp_s609_id.html">## Description

Pretrained Wav2vec2  model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`asr_exp_w2v2t_vp_s609` is a Indonesian model originally trained by jonatasgrosman.

NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_exp_w2v2t_vp_s609_gpu

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/asr_exp_w2v2t_vp_s609_id_4.4.0_3.0_1678785547175.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/asr_exp_w2v2t_vp_s609_id_4.4.0_3.0_1678785547175.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

audio_assembler = AudioAssembler() \
    .setInputCol(&quot;audio_content&quot;) \
    .setOutputCol(&quot;audio_assembler&quot;)

speech_to_text = Wav2Vec2ForCTC \
    .pretrained(&quot;asr_exp_w2v2t_vp_s609&quot;, &quot;id&quot;)\
    .setInputCols(&quot;audio_assembler&quot;) \
    .setOutputCol(&quot;text&quot;)

pipeline = Pipeline(stages=[
  audio_assembler,
  speech_to_text,
])

pipelineModel = pipeline.fit(audioDf)

pipelineDF = pipelineModel.transform(audioDf)
```
```scala

val audioAssembler = new AudioAssembler()
    .setInputCol(&quot;audio_content&quot;) 
    .setOutputCol(&quot;audio_assembler&quot;)

val speechToText = Wav2Vec2ForCTC
    .pretrained(&quot;asr_exp_w2v2t_vp_s609&quot;, &quot;id&quot;)
    .setInputCols(&quot;audio_assembler&quot;) 
    .setOutputCol(&quot;text&quot;) 

val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText))

val pipelineModel = pipeline.fit(audioDf)

val pipelineDF = pipelineModel.transform(audioDf)

```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|asr_exp_w2v2t_vp_s609|
|Compatibility:|Spark NLP 4.4.0+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[audio_assembler]|
|Output Labels:|[text]|
|Language:|id|
|Size:|1.2 GB|</content><author><name>John Snow Labs</name></author><category term="wav2vec2" /><category term="id" /><category term="audio" /><category term="open_source" /><category term="asr" /><category term="tensorflow" /><summary type="html">Description Pretrained Wav2vec2 model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.asr_exp_w2v2t_vp_s609 is a Indonesian model originally trained by jonatasgrosman. NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_exp_w2v2t_vp_s609_gpu Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU audio_assembler = AudioAssembler() \ .setInputCol(&quot;audio_content&quot;) \ .setOutputCol(&quot;audio_assembler&quot;) speech_to_text = Wav2Vec2ForCTC \ .pretrained(&quot;asr_exp_w2v2t_vp_s609&quot;, &quot;id&quot;)\ .setInputCols(&quot;audio_assembler&quot;) \ .setOutputCol(&quot;text&quot;) pipeline = Pipeline(stages=[ audio_assembler, speech_to_text, ]) pipelineModel = pipeline.fit(audioDf) pipelineDF = pipelineModel.transform(audioDf) val audioAssembler = new AudioAssembler() .setInputCol(&quot;audio_content&quot;) .setOutputCol(&quot;audio_assembler&quot;) val speechToText = Wav2Vec2ForCTC .pretrained(&quot;asr_exp_w2v2t_vp_s609&quot;, &quot;id&quot;) .setInputCols(&quot;audio_assembler&quot;) .setOutputCol(&quot;text&quot;) val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText)) val pipelineModel = pipeline.fit(audioDf) val pipelineDF = pipelineModel.transform(audioDf) Model Information Model Name: asr_exp_w2v2t_vp_s609 Compatibility: Spark NLP 4.4.0+ License: Open Source Edition: Official Input Labels: [audio_assembler] Output Labels: [text] Language: id Size: 1.2 GB</summary></entry><entry><title type="html">English asr_model_facebookptbrlarge TFWav2Vec2ForCTC from Vkt</title><link href="/2023/03/14/asr_model_facebookptbrlarge_en.html" rel="alternate" type="text/html" title="English asr_model_facebookptbrlarge TFWav2Vec2ForCTC from Vkt" /><published>2023-03-14T00:00:00+00:00</published><updated>2023-03-14T00:00:00+00:00</updated><id>/2023/03/14/asr_model_facebookptbrlarge_en</id><content type="html" xml:base="/2023/03/14/asr_model_facebookptbrlarge_en.html">## Description

Pretrained Wav2vec2  model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`asr_model_facebookptbrlarge` is a English model originally trained by Vkt.

NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_model_facebookptbrlarge_gpu

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/asr_model_facebookptbrlarge_en_4.4.0_3.0_1678787012849.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/asr_model_facebookptbrlarge_en_4.4.0_3.0_1678787012849.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

audio_assembler = AudioAssembler() \
    .setInputCol(&quot;audio_content&quot;) \
    .setOutputCol(&quot;audio_assembler&quot;)

speech_to_text = Wav2Vec2ForCTC \
    .pretrained(&quot;asr_model_facebookptbrlarge&quot;, &quot;en&quot;)\
    .setInputCols(&quot;audio_assembler&quot;) \
    .setOutputCol(&quot;text&quot;)

pipeline = Pipeline(stages=[
  audio_assembler,
  speech_to_text,
])

pipelineModel = pipeline.fit(audioDf)

pipelineDF = pipelineModel.transform(audioDf)
```
```scala

val audioAssembler = new AudioAssembler()
    .setInputCol(&quot;audio_content&quot;) 
    .setOutputCol(&quot;audio_assembler&quot;)

val speechToText = Wav2Vec2ForCTC
    .pretrained(&quot;asr_model_facebookptbrlarge&quot;, &quot;en&quot;)
    .setInputCols(&quot;audio_assembler&quot;) 
    .setOutputCol(&quot;text&quot;) 

val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText))

val pipelineModel = pipeline.fit(audioDf)

val pipelineDF = pipelineModel.transform(audioDf)

```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|asr_model_facebookptbrlarge|
|Compatibility:|Spark NLP 4.4.0+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[audio_assembler]|
|Output Labels:|[text]|
|Language:|en|
|Size:|1.2 GB|</content><author><name>John Snow Labs</name></author><category term="wav2vec2" /><category term="en" /><category term="audio" /><category term="open_source" /><category term="asr" /><category term="tensorflow" /><summary type="html">Description Pretrained Wav2vec2 model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.asr_model_facebookptbrlarge is a English model originally trained by Vkt. NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_model_facebookptbrlarge_gpu Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU audio_assembler = AudioAssembler() \ .setInputCol(&quot;audio_content&quot;) \ .setOutputCol(&quot;audio_assembler&quot;) speech_to_text = Wav2Vec2ForCTC \ .pretrained(&quot;asr_model_facebookptbrlarge&quot;, &quot;en&quot;)\ .setInputCols(&quot;audio_assembler&quot;) \ .setOutputCol(&quot;text&quot;) pipeline = Pipeline(stages=[ audio_assembler, speech_to_text, ]) pipelineModel = pipeline.fit(audioDf) pipelineDF = pipelineModel.transform(audioDf) val audioAssembler = new AudioAssembler() .setInputCol(&quot;audio_content&quot;) .setOutputCol(&quot;audio_assembler&quot;) val speechToText = Wav2Vec2ForCTC .pretrained(&quot;asr_model_facebookptbrlarge&quot;, &quot;en&quot;) .setInputCols(&quot;audio_assembler&quot;) .setOutputCol(&quot;text&quot;) val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText)) val pipelineModel = pipeline.fit(audioDf) val pipelineDF = pipelineModel.transform(audioDf) Model Information Model Name: asr_model_facebookptbrlarge Compatibility: Spark NLP 4.4.0+ License: Open Source Edition: Official Input Labels: [audio_assembler] Output Labels: [text] Language: en Size: 1.2 GB</summary></entry><entry><title type="html">English asr_models_eric_1 TFWav2Vec2ForCTC from niclas</title><link href="/2023/03/14/asr_models_eric_1_en.html" rel="alternate" type="text/html" title="English asr_models_eric_1 TFWav2Vec2ForCTC from niclas" /><published>2023-03-14T00:00:00+00:00</published><updated>2023-03-14T00:00:00+00:00</updated><id>/2023/03/14/asr_models_eric_1_en</id><content type="html" xml:base="/2023/03/14/asr_models_eric_1_en.html">## Description

Pretrained Wav2vec2  model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`asr_models_eric_1` is a English model originally trained by niclas.

NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_models_eric_1_gpu

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/asr_models_eric_1_en_4.4.0_3.0_1678754138255.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/asr_models_eric_1_en_4.4.0_3.0_1678754138255.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

audio_assembler = AudioAssembler() \
    .setInputCol(&quot;audio_content&quot;) \
    .setOutputCol(&quot;audio_assembler&quot;)

speech_to_text = Wav2Vec2ForCTC \
    .pretrained(&quot;asr_models_eric_1&quot;, &quot;en&quot;)\
    .setInputCols(&quot;audio_assembler&quot;) \
    .setOutputCol(&quot;text&quot;)

pipeline = Pipeline(stages=[
  audio_assembler,
  speech_to_text,
])

pipelineModel = pipeline.fit(audioDf)

pipelineDF = pipelineModel.transform(audioDf)
```
```scala

val audioAssembler = new AudioAssembler()
    .setInputCol(&quot;audio_content&quot;) 
    .setOutputCol(&quot;audio_assembler&quot;)

val speechToText = Wav2Vec2ForCTC
    .pretrained(&quot;asr_models_eric_1&quot;, &quot;en&quot;)
    .setInputCols(&quot;audio_assembler&quot;) 
    .setOutputCol(&quot;text&quot;) 

val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText))

val pipelineModel = pipeline.fit(audioDf)

val pipelineDF = pipelineModel.transform(audioDf)

```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|asr_models_eric_1|
|Compatibility:|Spark NLP 4.4.0+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[audio_assembler]|
|Output Labels:|[text]|
|Language:|en|
|Size:|1.2 GB|</content><author><name>John Snow Labs</name></author><category term="wav2vec2" /><category term="en" /><category term="audio" /><category term="open_source" /><category term="asr" /><category term="tensorflow" /><summary type="html">Description Pretrained Wav2vec2 model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.asr_models_eric_1 is a English model originally trained by niclas. NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_models_eric_1_gpu Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU audio_assembler = AudioAssembler() \ .setInputCol(&quot;audio_content&quot;) \ .setOutputCol(&quot;audio_assembler&quot;) speech_to_text = Wav2Vec2ForCTC \ .pretrained(&quot;asr_models_eric_1&quot;, &quot;en&quot;)\ .setInputCols(&quot;audio_assembler&quot;) \ .setOutputCol(&quot;text&quot;) pipeline = Pipeline(stages=[ audio_assembler, speech_to_text, ]) pipelineModel = pipeline.fit(audioDf) pipelineDF = pipelineModel.transform(audioDf) val audioAssembler = new AudioAssembler() .setInputCol(&quot;audio_content&quot;) .setOutputCol(&quot;audio_assembler&quot;) val speechToText = Wav2Vec2ForCTC .pretrained(&quot;asr_models_eric_1&quot;, &quot;en&quot;) .setInputCols(&quot;audio_assembler&quot;) .setOutputCol(&quot;text&quot;) val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText)) val pipelineModel = pipeline.fit(audioDf) val pipelineDF = pipelineModel.transform(audioDf) Model Information Model Name: asr_models_eric_1 Compatibility: Spark NLP 4.4.0+ License: Open Source Edition: Official Input Labels: [audio_assembler] Output Labels: [text] Language: en Size: 1.2 GB</summary></entry><entry><title type="html">English asr_vtt_indonesia TFWav2Vec2ForCTC from bryanleeharyanto</title><link href="/2023/03/14/asr_vtt_indonesia_en.html" rel="alternate" type="text/html" title="English asr_vtt_indonesia TFWav2Vec2ForCTC from bryanleeharyanto" /><published>2023-03-14T00:00:00+00:00</published><updated>2023-03-14T00:00:00+00:00</updated><id>/2023/03/14/asr_vtt_indonesia_en</id><content type="html" xml:base="/2023/03/14/asr_vtt_indonesia_en.html">## Description

Pretrained Wav2vec2  model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`asr_vtt_indonesia` is a English model originally trained by bryanleeharyanto.

NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_vtt_indonesia_gpu

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/asr_vtt_indonesia_en_4.4.0_3.0_1678756347409.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/asr_vtt_indonesia_en_4.4.0_3.0_1678756347409.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

audio_assembler = AudioAssembler() \
    .setInputCol(&quot;audio_content&quot;) \
    .setOutputCol(&quot;audio_assembler&quot;)

speech_to_text = Wav2Vec2ForCTC \
    .pretrained(&quot;asr_vtt_indonesia&quot;, &quot;en&quot;)\
    .setInputCols(&quot;audio_assembler&quot;) \
    .setOutputCol(&quot;text&quot;)

pipeline = Pipeline(stages=[
  audio_assembler,
  speech_to_text,
])

pipelineModel = pipeline.fit(audioDf)

pipelineDF = pipelineModel.transform(audioDf)
```
```scala

val audioAssembler = new AudioAssembler()
    .setInputCol(&quot;audio_content&quot;) 
    .setOutputCol(&quot;audio_assembler&quot;)

val speechToText = Wav2Vec2ForCTC
    .pretrained(&quot;asr_vtt_indonesia&quot;, &quot;en&quot;)
    .setInputCols(&quot;audio_assembler&quot;) 
    .setOutputCol(&quot;text&quot;) 

val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText))

val pipelineModel = pipeline.fit(audioDf)

val pipelineDF = pipelineModel.transform(audioDf)

```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|asr_vtt_indonesia|
|Compatibility:|Spark NLP 4.4.0+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[audio_assembler]|
|Output Labels:|[text]|
|Language:|en|
|Size:|1.2 GB|</content><author><name>John Snow Labs</name></author><category term="wav2vec2" /><category term="en" /><category term="audio" /><category term="open_source" /><category term="asr" /><category term="tensorflow" /><summary type="html">Description Pretrained Wav2vec2 model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.asr_vtt_indonesia is a English model originally trained by bryanleeharyanto. NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_vtt_indonesia_gpu Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU audio_assembler = AudioAssembler() \ .setInputCol(&quot;audio_content&quot;) \ .setOutputCol(&quot;audio_assembler&quot;) speech_to_text = Wav2Vec2ForCTC \ .pretrained(&quot;asr_vtt_indonesia&quot;, &quot;en&quot;)\ .setInputCols(&quot;audio_assembler&quot;) \ .setOutputCol(&quot;text&quot;) pipeline = Pipeline(stages=[ audio_assembler, speech_to_text, ]) pipelineModel = pipeline.fit(audioDf) pipelineDF = pipelineModel.transform(audioDf) val audioAssembler = new AudioAssembler() .setInputCol(&quot;audio_content&quot;) .setOutputCol(&quot;audio_assembler&quot;) val speechToText = Wav2Vec2ForCTC .pretrained(&quot;asr_vtt_indonesia&quot;, &quot;en&quot;) .setInputCols(&quot;audio_assembler&quot;) .setOutputCol(&quot;text&quot;) val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText)) val pipelineModel = pipeline.fit(audioDf) val pipelineDF = pipelineModel.transform(audioDf) Model Information Model Name: asr_vtt_indonesia Compatibility: Spark NLP 4.4.0+ License: Open Source Edition: Official Input Labels: [audio_assembler] Output Labels: [text] Language: en Size: 1.2 GB</summary></entry><entry><title type="html">English asr_wav2vec2_base_vios_v4 TFWav2Vec2ForCTC from tclong</title><link href="/2023/03/14/asr_wav2vec2_base_vios_v4_en.html" rel="alternate" type="text/html" title="English asr_wav2vec2_base_vios_v4 TFWav2Vec2ForCTC from tclong" /><published>2023-03-14T00:00:00+00:00</published><updated>2023-03-14T00:00:00+00:00</updated><id>/2023/03/14/asr_wav2vec2_base_vios_v4_en</id><content type="html" xml:base="/2023/03/14/asr_wav2vec2_base_vios_v4_en.html">## Description

Pretrained Wav2vec2  model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`asr_wav2vec2_base_vios_v4` is a English model originally trained by tclong.

NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_wav2vec2_base_vios_v4_gpu

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/asr_wav2vec2_base_vios_v4_en_4.4.0_3.0_1678786279386.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/asr_wav2vec2_base_vios_v4_en_4.4.0_3.0_1678786279386.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

audio_assembler = AudioAssembler() \
    .setInputCol(&quot;audio_content&quot;) \
    .setOutputCol(&quot;audio_assembler&quot;)

speech_to_text = Wav2Vec2ForCTC \
    .pretrained(&quot;asr_wav2vec2_base_vios_v4&quot;, &quot;en&quot;)\
    .setInputCols(&quot;audio_assembler&quot;) \
    .setOutputCol(&quot;text&quot;)

pipeline = Pipeline(stages=[
  audio_assembler,
  speech_to_text,
])

pipelineModel = pipeline.fit(audioDf)

pipelineDF = pipelineModel.transform(audioDf)
```
```scala

val audioAssembler = new AudioAssembler()
    .setInputCol(&quot;audio_content&quot;) 
    .setOutputCol(&quot;audio_assembler&quot;)

val speechToText = Wav2Vec2ForCTC
    .pretrained(&quot;asr_wav2vec2_base_vios_v4&quot;, &quot;en&quot;)
    .setInputCols(&quot;audio_assembler&quot;) 
    .setOutputCol(&quot;text&quot;) 

val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText))

val pipelineModel = pipeline.fit(audioDf)

val pipelineDF = pipelineModel.transform(audioDf)

```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|asr_wav2vec2_base_vios_v4|
|Compatibility:|Spark NLP 4.4.0+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[audio_assembler]|
|Output Labels:|[text]|
|Language:|en|
|Size:|1.2 GB|</content><author><name>John Snow Labs</name></author><category term="wav2vec2" /><category term="en" /><category term="audio" /><category term="open_source" /><category term="asr" /><category term="tensorflow" /><summary type="html">Description Pretrained Wav2vec2 model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.asr_wav2vec2_base_vios_v4 is a English model originally trained by tclong. NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_wav2vec2_base_vios_v4_gpu Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU audio_assembler = AudioAssembler() \ .setInputCol(&quot;audio_content&quot;) \ .setOutputCol(&quot;audio_assembler&quot;) speech_to_text = Wav2Vec2ForCTC \ .pretrained(&quot;asr_wav2vec2_base_vios_v4&quot;, &quot;en&quot;)\ .setInputCols(&quot;audio_assembler&quot;) \ .setOutputCol(&quot;text&quot;) pipeline = Pipeline(stages=[ audio_assembler, speech_to_text, ]) pipelineModel = pipeline.fit(audioDf) pipelineDF = pipelineModel.transform(audioDf) val audioAssembler = new AudioAssembler() .setInputCol(&quot;audio_content&quot;) .setOutputCol(&quot;audio_assembler&quot;) val speechToText = Wav2Vec2ForCTC .pretrained(&quot;asr_wav2vec2_base_vios_v4&quot;, &quot;en&quot;) .setInputCols(&quot;audio_assembler&quot;) .setOutputCol(&quot;text&quot;) val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText)) val pipelineModel = pipeline.fit(audioDf) val pipelineDF = pipelineModel.transform(audioDf) Model Information Model Name: asr_wav2vec2_base_vios_v4 Compatibility: Spark NLP 4.4.0+ License: Open Source Edition: Official Input Labels: [audio_assembler] Output Labels: [text] Language: en Size: 1.2 GB</summary></entry><entry><title type="html">English asr_wav2vec2_hbtest_2 TFWav2Vec2ForCTC from sriiikar</title><link href="/2023/03/14/asr_wav2vec2_hbtest_2_en.html" rel="alternate" type="text/html" title="English asr_wav2vec2_hbtest_2 TFWav2Vec2ForCTC from sriiikar" /><published>2023-03-14T00:00:00+00:00</published><updated>2023-03-14T00:00:00+00:00</updated><id>/2023/03/14/asr_wav2vec2_hbtest_2_en</id><content type="html" xml:base="/2023/03/14/asr_wav2vec2_hbtest_2_en.html">## Description

Pretrained Wav2vec2  model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`asr_wav2vec2_hbtest_2` is a English model originally trained by sriiikar.

NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_wav2vec2_hbtest_2_gpu

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/asr_wav2vec2_hbtest_2_en_4.4.0_3.0_1678785549739.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/asr_wav2vec2_hbtest_2_en_4.4.0_3.0_1678785549739.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

audio_assembler = AudioAssembler() \
    .setInputCol(&quot;audio_content&quot;) \
    .setOutputCol(&quot;audio_assembler&quot;)

speech_to_text = Wav2Vec2ForCTC \
    .pretrained(&quot;asr_wav2vec2_hbtest_2&quot;, &quot;en&quot;)\
    .setInputCols(&quot;audio_assembler&quot;) \
    .setOutputCol(&quot;text&quot;)

pipeline = Pipeline(stages=[
  audio_assembler,
  speech_to_text,
])

pipelineModel = pipeline.fit(audioDf)

pipelineDF = pipelineModel.transform(audioDf)
```
```scala

val audioAssembler = new AudioAssembler()
    .setInputCol(&quot;audio_content&quot;) 
    .setOutputCol(&quot;audio_assembler&quot;)

val speechToText = Wav2Vec2ForCTC
    .pretrained(&quot;asr_wav2vec2_hbtest_2&quot;, &quot;en&quot;)
    .setInputCols(&quot;audio_assembler&quot;) 
    .setOutputCol(&quot;text&quot;) 

val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText))

val pipelineModel = pipeline.fit(audioDf)

val pipelineDF = pipelineModel.transform(audioDf)

```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|asr_wav2vec2_hbtest_2|
|Compatibility:|Spark NLP 4.4.0+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[audio_assembler]|
|Output Labels:|[text]|
|Language:|en|
|Size:|1.2 GB|</content><author><name>John Snow Labs</name></author><category term="wav2vec2" /><category term="en" /><category term="audio" /><category term="open_source" /><category term="asr" /><category term="tensorflow" /><summary type="html">Description Pretrained Wav2vec2 model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.asr_wav2vec2_hbtest_2 is a English model originally trained by sriiikar. NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_wav2vec2_hbtest_2_gpu Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU audio_assembler = AudioAssembler() \ .setInputCol(&quot;audio_content&quot;) \ .setOutputCol(&quot;audio_assembler&quot;) speech_to_text = Wav2Vec2ForCTC \ .pretrained(&quot;asr_wav2vec2_hbtest_2&quot;, &quot;en&quot;)\ .setInputCols(&quot;audio_assembler&quot;) \ .setOutputCol(&quot;text&quot;) pipeline = Pipeline(stages=[ audio_assembler, speech_to_text, ]) pipelineModel = pipeline.fit(audioDf) pipelineDF = pipelineModel.transform(audioDf) val audioAssembler = new AudioAssembler() .setInputCol(&quot;audio_content&quot;) .setOutputCol(&quot;audio_assembler&quot;) val speechToText = Wav2Vec2ForCTC .pretrained(&quot;asr_wav2vec2_hbtest_2&quot;, &quot;en&quot;) .setInputCols(&quot;audio_assembler&quot;) .setOutputCol(&quot;text&quot;) val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText)) val pipelineModel = pipeline.fit(audioDf) val pipelineDF = pipelineModel.transform(audioDf) Model Information Model Name: asr_wav2vec2_hbtest_2 Compatibility: Spark NLP 4.4.0+ License: Open Source Edition: Official Input Labels: [audio_assembler] Output Labels: [text] Language: en Size: 1.2 GB</summary></entry><entry><title type="html">English asr_wav2vec2_large_xls_r_300m_bengali_v7 TFWav2Vec2ForCTC from rashedsafa</title><link href="/2023/03/14/asr_wav2vec2_large_xls_r_300m_bengali_v7_en.html" rel="alternate" type="text/html" title="English asr_wav2vec2_large_xls_r_300m_bengali_v7 TFWav2Vec2ForCTC from rashedsafa" /><published>2023-03-14T00:00:00+00:00</published><updated>2023-03-14T00:00:00+00:00</updated><id>/2023/03/14/asr_wav2vec2_large_xls_r_300m_bengali_v7_en</id><content type="html" xml:base="/2023/03/14/asr_wav2vec2_large_xls_r_300m_bengali_v7_en.html">## Description

Pretrained Wav2vec2  model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`asr_wav2vec2_large_xls_r_300m_bengali_v7` is a English model originally trained by rashedsafa.

NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_wav2vec2_large_xls_r_300m_bengali_v7_gpu

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/asr_wav2vec2_large_xls_r_300m_bengali_v7_en_4.4.0_3.0_1678752587945.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/asr_wav2vec2_large_xls_r_300m_bengali_v7_en_4.4.0_3.0_1678752587945.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

audio_assembler = AudioAssembler() \
    .setInputCol(&quot;audio_content&quot;) \
    .setOutputCol(&quot;audio_assembler&quot;)

speech_to_text = Wav2Vec2ForCTC \
    .pretrained(&quot;asr_wav2vec2_large_xls_r_300m_bengali_v7&quot;, &quot;en&quot;)\
    .setInputCols(&quot;audio_assembler&quot;) \
    .setOutputCol(&quot;text&quot;)

pipeline = Pipeline(stages=[
  audio_assembler,
  speech_to_text,
])

pipelineModel = pipeline.fit(audioDf)

pipelineDF = pipelineModel.transform(audioDf)
```
```scala

val audioAssembler = new AudioAssembler()
    .setInputCol(&quot;audio_content&quot;) 
    .setOutputCol(&quot;audio_assembler&quot;)

val speechToText = Wav2Vec2ForCTC
    .pretrained(&quot;asr_wav2vec2_large_xls_r_300m_bengali_v7&quot;, &quot;en&quot;)
    .setInputCols(&quot;audio_assembler&quot;) 
    .setOutputCol(&quot;text&quot;) 

val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText))

val pipelineModel = pipeline.fit(audioDf)

val pipelineDF = pipelineModel.transform(audioDf)

```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|asr_wav2vec2_large_xls_r_300m_bengali_v7|
|Compatibility:|Spark NLP 4.4.0+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[audio_assembler]|
|Output Labels:|[text]|
|Language:|en|
|Size:|1.2 GB|</content><author><name>John Snow Labs</name></author><category term="wav2vec2" /><category term="en" /><category term="audio" /><category term="open_source" /><category term="asr" /><category term="tensorflow" /><summary type="html">Description Pretrained Wav2vec2 model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.asr_wav2vec2_large_xls_r_300m_bengali_v7 is a English model originally trained by rashedsafa. NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_wav2vec2_large_xls_r_300m_bengali_v7_gpu Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU audio_assembler = AudioAssembler() \ .setInputCol(&quot;audio_content&quot;) \ .setOutputCol(&quot;audio_assembler&quot;) speech_to_text = Wav2Vec2ForCTC \ .pretrained(&quot;asr_wav2vec2_large_xls_r_300m_bengali_v7&quot;, &quot;en&quot;)\ .setInputCols(&quot;audio_assembler&quot;) \ .setOutputCol(&quot;text&quot;) pipeline = Pipeline(stages=[ audio_assembler, speech_to_text, ]) pipelineModel = pipeline.fit(audioDf) pipelineDF = pipelineModel.transform(audioDf) val audioAssembler = new AudioAssembler() .setInputCol(&quot;audio_content&quot;) .setOutputCol(&quot;audio_assembler&quot;) val speechToText = Wav2Vec2ForCTC .pretrained(&quot;asr_wav2vec2_large_xls_r_300m_bengali_v7&quot;, &quot;en&quot;) .setInputCols(&quot;audio_assembler&quot;) .setOutputCol(&quot;text&quot;) val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText)) val pipelineModel = pipeline.fit(audioDf) val pipelineDF = pipelineModel.transform(audioDf) Model Information Model Name: asr_wav2vec2_large_xls_r_300m_bengali_v7 Compatibility: Spark NLP 4.4.0+ License: Open Source Edition: Official Input Labels: [audio_assembler] Output Labels: [text] Language: en Size: 1.2 GB</summary></entry><entry><title type="html">English asr_wav2vec2_large_xls_r_300m_bengali_v8 TFWav2Vec2ForCTC from rashedsafa</title><link href="/2023/03/14/asr_wav2vec2_large_xls_r_300m_bengali_v8_en.html" rel="alternate" type="text/html" title="English asr_wav2vec2_large_xls_r_300m_bengali_v8 TFWav2Vec2ForCTC from rashedsafa" /><published>2023-03-14T00:00:00+00:00</published><updated>2023-03-14T00:00:00+00:00</updated><id>/2023/03/14/asr_wav2vec2_large_xls_r_300m_bengali_v8_en</id><content type="html" xml:base="/2023/03/14/asr_wav2vec2_large_xls_r_300m_bengali_v8_en.html">## Description

Pretrained Wav2vec2  model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`asr_wav2vec2_large_xls_r_300m_bengali_v8` is a English model originally trained by rashedsafa.

NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_wav2vec2_large_xls_r_300m_bengali_v8_gpu

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/asr_wav2vec2_large_xls_r_300m_bengali_v8_en_4.4.0_3.0_1678753388472.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/asr_wav2vec2_large_xls_r_300m_bengali_v8_en_4.4.0_3.0_1678753388472.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

audio_assembler = AudioAssembler() \
    .setInputCol(&quot;audio_content&quot;) \
    .setOutputCol(&quot;audio_assembler&quot;)

speech_to_text = Wav2Vec2ForCTC \
    .pretrained(&quot;asr_wav2vec2_large_xls_r_300m_bengali_v8&quot;, &quot;en&quot;)\
    .setInputCols(&quot;audio_assembler&quot;) \
    .setOutputCol(&quot;text&quot;)

pipeline = Pipeline(stages=[
  audio_assembler,
  speech_to_text,
])

pipelineModel = pipeline.fit(audioDf)

pipelineDF = pipelineModel.transform(audioDf)
```
```scala

val audioAssembler = new AudioAssembler()
    .setInputCol(&quot;audio_content&quot;) 
    .setOutputCol(&quot;audio_assembler&quot;)

val speechToText = Wav2Vec2ForCTC
    .pretrained(&quot;asr_wav2vec2_large_xls_r_300m_bengali_v8&quot;, &quot;en&quot;)
    .setInputCols(&quot;audio_assembler&quot;) 
    .setOutputCol(&quot;text&quot;) 

val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText))

val pipelineModel = pipeline.fit(audioDf)

val pipelineDF = pipelineModel.transform(audioDf)

```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|asr_wav2vec2_large_xls_r_300m_bengali_v8|
|Compatibility:|Spark NLP 4.4.0+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[audio_assembler]|
|Output Labels:|[text]|
|Language:|en|
|Size:|1.2 GB|</content><author><name>John Snow Labs</name></author><category term="wav2vec2" /><category term="en" /><category term="audio" /><category term="open_source" /><category term="asr" /><category term="tensorflow" /><summary type="html">Description Pretrained Wav2vec2 model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.asr_wav2vec2_large_xls_r_300m_bengali_v8 is a English model originally trained by rashedsafa. NOTE: This model only works on a CPU, if you need to use this model on a GPU device please use asr_wav2vec2_large_xls_r_300m_bengali_v8_gpu Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU audio_assembler = AudioAssembler() \ .setInputCol(&quot;audio_content&quot;) \ .setOutputCol(&quot;audio_assembler&quot;) speech_to_text = Wav2Vec2ForCTC \ .pretrained(&quot;asr_wav2vec2_large_xls_r_300m_bengali_v8&quot;, &quot;en&quot;)\ .setInputCols(&quot;audio_assembler&quot;) \ .setOutputCol(&quot;text&quot;) pipeline = Pipeline(stages=[ audio_assembler, speech_to_text, ]) pipelineModel = pipeline.fit(audioDf) pipelineDF = pipelineModel.transform(audioDf) val audioAssembler = new AudioAssembler() .setInputCol(&quot;audio_content&quot;) .setOutputCol(&quot;audio_assembler&quot;) val speechToText = Wav2Vec2ForCTC .pretrained(&quot;asr_wav2vec2_large_xls_r_300m_bengali_v8&quot;, &quot;en&quot;) .setInputCols(&quot;audio_assembler&quot;) .setOutputCol(&quot;text&quot;) val pipeline = new Pipeline().setStages(Array(audioAssembler, speechToText)) val pipelineModel = pipeline.fit(audioDf) val pipelineDF = pipelineModel.transform(audioDf) Model Information Model Name: asr_wav2vec2_large_xls_r_300m_bengali_v8 Compatibility: Spark NLP 4.4.0+ License: Open Source Edition: Official Input Labels: [audio_assembler] Output Labels: [text] Language: en Size: 1.2 GB</summary></entry></feed>