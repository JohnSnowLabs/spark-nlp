<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-03-11T10:36:10+00:00</updated><id>/feed.xml</id><title type="html">Spark NLP</title><subtitle>High Performance NLP with Apache Spark
</subtitle><author><name>{&quot;type&quot;=&gt;nil, &quot;name&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;googleplus&quot;=&gt;nil, &quot;telegram&quot;=&gt;nil, &quot;medium&quot;=&gt;nil, &quot;zhihu&quot;=&gt;nil, &quot;douban&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;npm&quot;=&gt;nil}</name></author><entry><title type="html">10K Item Section Classifier</title><link href="/2023/03/10/finclf_10k_items_en.html" rel="alternate" type="text/html" title="10K Item Section Classifier" /><published>2023-03-10T00:00:00+00:00</published><updated>2023-03-10T00:00:00+00:00</updated><id>/2023/03/10/finclf_10k_items_en</id><content type="html" xml:base="/2023/03/10/finclf_10k_items_en.html">## Description

This is a Multiclass classification model which identifies the item (section) number in a 10K filing.

## Predicted Entities

`section_1`, `section_2`, `section_3`, `section_7`, `section_8`, `section_10`, `section_12`, `section_13`, `section_14`, `section_15`, `section_1A`, `section_1B`, `section_7A`, `section_9A`, `section_9B`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/finance/models/finclf_10k_items_en_1.0.0_3.0_1678450523713.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/finance/models/finclf_10k_items_en_1.0.0_3.0_1678450523713.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python
documentAssembler = nlp.DocumentAssembler() \
    .setInputCols([&quot;text&quot;]) \
    .setOutputCols(&quot;document&quot;)

tokenizer = nlp.Tokenizer() \
    .setInputCols(&quot;document&quot;) \
    .setOutputCol(&quot;token&quot;)

seq_classifier = finance.BertForSequenceClassification.pretrained(&quot;finclf_10k_items&quot;, &quot;en&quot;, &quot;finance/models&quot;) \
    .setInputCols([&quot;document&quot;, &quot;token&quot;]) \
    .setOutputCol(&quot;class&quot;)
    
pipeline = nlp.Pipeline(stages=[documentAssembler, tokenizer, seq_classifier])

data = spark.createDataFrame([[&quot;These issues could negatively affect the timely collection of our U.S. government invoices.&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)
```

&lt;/div&gt;

## Results

```bash
+------------+
|      result|
+------------+
|[section_10]|
+------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|finclf_10k_items|
|Compatibility:|Finance NLP 1.0.0+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|412.2 MB|
|Case sensitive:|true|
|Max sentence length:|512|

## References

Train dataset available [here](https://huggingface.co/datasets/JanosAudran/financial-reports-sec)

## Benchmarking

```bash
label         precision  recall  f1-score  support 
section_1     0.59       0.66    0.62      112     
section_10    0.73       0.72    0.72      137     
section_12    0.95       1.00    0.97      124     
section_13    0.93       0.94    0.94      212     
section_14    0.99       0.97    0.98      172     
section_15    0.91       0.84    0.87      139     
section_1A    0.85       0.86    0.85      92      
section_1B    0.70       0.64    0.67      233     
section_2     0.85       0.78    0.81      172     
section_3     0.60       0.69    0.64      224     
section_7     0.92       0.93    0.92      164     
section_7A    0.89       0.90    0.89      99      
section_8     0.80       0.97    0.88      72      
section_9A    0.91       0.93    0.92      75      
section_9B    0.77       0.63    0.69      147     
accuracy      -          -       0.81      2174    
macro-avg     0.83       0.83    0.83      2174    
weighted-avg  0.82       0.81    0.81      2174  
```</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="classifier" /><category term="10k_items" /><category term="finance" /><category term="tensorflow" /><summary type="html">Description This is a Multiclass classification model which identifies the item (section) number in a 10K filing. Predicted Entities section_1, section_2, section_3, section_7, section_8, section_10, section_12, section_13, section_14, section_15, section_1A, section_1B, section_7A, section_9A, section_9B Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU documentAssembler = nlp.DocumentAssembler() \ .setInputCols([&quot;text&quot;]) \ .setOutputCols(&quot;document&quot;) tokenizer = nlp.Tokenizer() \ .setInputCols(&quot;document&quot;) \ .setOutputCol(&quot;token&quot;) seq_classifier = finance.BertForSequenceClassification.pretrained(&quot;finclf_10k_items&quot;, &quot;en&quot;, &quot;finance/models&quot;) \ .setInputCols([&quot;document&quot;, &quot;token&quot;]) \ .setOutputCol(&quot;class&quot;) pipeline = nlp.Pipeline(stages=[documentAssembler, tokenizer, seq_classifier]) data = spark.createDataFrame([[&quot;These issues could negatively affect the timely collection of our U.S. government invoices.&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) Results +------------+ | result| +------------+ |[section_10]| +------------+ Model Information Model Name: finclf_10k_items Compatibility: Finance NLP 1.0.0+ License: Licensed Edition: Official Input Labels: [document, token] Output Labels: [class] Language: en Size: 412.2 MB Case sensitive: true Max sentence length: 512 References Train dataset available here Benchmarking label precision recall f1-score support section_1 0.59 0.66 0.62 112 section_10 0.73 0.72 0.72 137 section_12 0.95 1.00 0.97 124 section_13 0.93 0.94 0.94 212 section_14 0.99 0.97 0.98 172 section_15 0.91 0.84 0.87 139 section_1A 0.85 0.86 0.85 92 section_1B 0.70 0.64 0.67 233 section_2 0.85 0.78 0.81 172 section_3 0.60 0.69 0.64 224 section_7 0.92 0.93 0.92 164 section_7A 0.89 0.90 0.89 99 section_8 0.80 0.97 0.88 72 section_9A 0.91 0.93 0.92 75 section_9B 0.77 0.63 0.69 147 accuracy - - 0.81 2174 macro-avg 0.83 0.83 0.83 2174 weighted-avg 0.82 0.81 0.81 2174</summary></entry><entry><title type="html">Finance-related Tweets Classifier</title><link href="/2023/03/10/finclf_twitter_news_en.html" rel="alternate" type="text/html" title="Finance-related Tweets Classifier" /><published>2023-03-10T00:00:00+00:00</published><updated>2023-03-10T00:00:00+00:00</updated><id>/2023/03/10/finclf_twitter_news_en</id><content type="html" xml:base="/2023/03/10/finclf_twitter_news_en.html">## Description

This is a Multiclass classification model which classifies financial tweets with one of the following topics: `Company_or_Product_News`, `Stock_Movement`, `General_News_or_Opinion`, `Earnings`, `Macro`, `Fed_or_Central_Banks`, `Politics`, `Stock_Commentary`, `Financials`, `M&amp;A_or_Investments`, `Legal_or_Regulation`, `Personnel_Change`, `Markets`, `Energy_or_Oil`, `Dividend`, `Analyst_Update`, `Treasuries_or_Corporate_Debt`, `Currencies`.

## Predicted Entities

`Company_or_Product_News`, `Stock_Movement`, `General_News_or_Opinion`, `Earnings`, `Macro`, `Fed_or_Central_Banks`, `Politics`, `Stock_Commentary`, `Financials`, `M&amp;A_or_Investments`, `Legal_or_Regulation`, `Personnel_Change`, `Markets`, `Energy_or_Oil`, `Dividend`, `Analyst_Update`, `Treasuries_or_Corporate_Debt`, `Currencies`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/finance/models/finclf_twitter_news_en_1.0.0_3.0_1678444505428.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/finance/models/finclf_twitter_news_en_1.0.0_3.0_1678444505428.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python
documentAssembler = nlp.DocumentAssembler() \
    .setInputCols([&quot;text&quot;]) \
    .setOutputCols(&quot;document&quot;)

tokenizer = nlp.Tokenizer() \
    .setInputCols(&quot;document&quot;) \
    .setOutputCol(&quot;token&quot;)

seq_classifier = finance.BertForSequenceClassification.pretrained(&quot;finclf_twitter_news&quot;, &quot;en&quot;, &quot;finance/models&quot;) \
    .setInputCols([&quot;document&quot;, &quot;token&quot;]) \
    .setOutputCol(&quot;class&quot;)
    
pipeline = nlp.Pipeline(stages=[documentAssembler, tokenizer, seq_classifier])

data = spark.createDataFrame([[&quot;Barclays believes earnings for these underperforming stocks may surprise Wall Street&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)
```

&lt;/div&gt;

## Results

```bash
+----------------+
|          result|
+----------------+
|[Analyst_Update]|
+----------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|finclf_twitter_news|
|Compatibility:|Finance NLP 1.0.0+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|408.7 MB|
|Case sensitive:|true|
|Max sentence length:|512|

## References

Train dataset available [here](https://huggingface.co/datasets/zeroshot/twitter-financial-news-topic)

## Benchmarking

```bash
label                         precision  recall  f1-score  support 
Analyst_Update                0.79       0.79    0.79      38      
Company_or_Product_News       0.71       0.78    0.74      112     
Currencies                    0.80       1.00    0.89      12      
Dividend                      1.00       0.94    0.97      31      
Earnings                      0.95       0.97    0.96      100     
Energy_or_Oil                 0.78       0.89    0.83      55      
Fed_or_Central_Banks          0.82       0.78    0.80      95      
Financials                    0.90       0.93    0.92      60      
General_News_or_Opinion       0.71       0.74    0.72      80      
Legal_or_Regulation           0.85       0.75    0.80      52      
M&amp;A_or_Investments            0.85       0.90    0.87      49      
Macro                         0.81       0.70    0.75      84      
Markets                       0.91       0.84    0.87      49      
Personnel_Change              0.96       0.94    0.95      50      
Politics                      0.83       0.82    0.82      83      
Stock_Commentary              0.87       0.94    0.90      63      
Stock_Movement                0.94       0.90    0.92      89      
Treasuries_or_Corporate_Debt  0.80       0.73    0.76      33      
accuracy                      -          -       0.84      1135    
macro-avg                     0.85       0.85    0.85      1135    
weighted-avg                  0.84       0.84    0.84      1135    
```</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="classifier" /><category term="twitter" /><category term="finance" /><category term="tensorflow" /><summary type="html">Description This is a Multiclass classification model which classifies financial tweets with one of the following topics: Company_or_Product_News, Stock_Movement, General_News_or_Opinion, Earnings, Macro, Fed_or_Central_Banks, Politics, Stock_Commentary, Financials, M&amp;amp;A_or_Investments, Legal_or_Regulation, Personnel_Change, Markets, Energy_or_Oil, Dividend, Analyst_Update, Treasuries_or_Corporate_Debt, Currencies. Predicted Entities Company_or_Product_News, Stock_Movement, General_News_or_Opinion, Earnings, Macro, Fed_or_Central_Banks, Politics, Stock_Commentary, Financials, M&amp;amp;A_or_Investments, Legal_or_Regulation, Personnel_Change, Markets, Energy_or_Oil, Dividend, Analyst_Update, Treasuries_or_Corporate_Debt, Currencies Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU documentAssembler = nlp.DocumentAssembler() \ .setInputCols([&quot;text&quot;]) \ .setOutputCols(&quot;document&quot;) tokenizer = nlp.Tokenizer() \ .setInputCols(&quot;document&quot;) \ .setOutputCol(&quot;token&quot;) seq_classifier = finance.BertForSequenceClassification.pretrained(&quot;finclf_twitter_news&quot;, &quot;en&quot;, &quot;finance/models&quot;) \ .setInputCols([&quot;document&quot;, &quot;token&quot;]) \ .setOutputCol(&quot;class&quot;) pipeline = nlp.Pipeline(stages=[documentAssembler, tokenizer, seq_classifier]) data = spark.createDataFrame([[&quot;Barclays believes earnings for these underperforming stocks may surprise Wall Street&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) Results +----------------+ | result| +----------------+ |[Analyst_Update]| +----------------+ Model Information Model Name: finclf_twitter_news Compatibility: Finance NLP 1.0.0+ License: Licensed Edition: Official Input Labels: [document, token] Output Labels: [class] Language: en Size: 408.7 MB Case sensitive: true Max sentence length: 512 References Train dataset available here Benchmarking label precision recall f1-score support Analyst_Update 0.79 0.79 0.79 38 Company_or_Product_News 0.71 0.78 0.74 112 Currencies 0.80 1.00 0.89 12 Dividend 1.00 0.94 0.97 31 Earnings 0.95 0.97 0.96 100 Energy_or_Oil 0.78 0.89 0.83 55 Fed_or_Central_Banks 0.82 0.78 0.80 95 Financials 0.90 0.93 0.92 60 General_News_or_Opinion 0.71 0.74 0.72 80 Legal_or_Regulation 0.85 0.75 0.80 52 M&amp;amp;A_or_Investments 0.85 0.90 0.87 49 Macro 0.81 0.70 0.75 84 Markets 0.91 0.84 0.87 49 Personnel_Change 0.96 0.94 0.95 50 Politics 0.83 0.82 0.82 83 Stock_Commentary 0.87 0.94 0.90 63 Stock_Movement 0.94 0.90 0.92 89 Treasuries_or_Corporate_Debt 0.80 0.73 0.76 33 accuracy - - 0.84 1135 macro-avg 0.85 0.85 0.85 1135 weighted-avg 0.84 0.84 0.84 1135</summary></entry><entry><title type="html">Legal Advice Class Identifier</title><link href="/2023/03/10/legclf_reddit_advice_en.html" rel="alternate" type="text/html" title="Legal Advice Class Identifier" /><published>2023-03-10T00:00:00+00:00</published><updated>2023-03-10T00:00:00+00:00</updated><id>/2023/03/10/legclf_reddit_advice_en</id><content type="html" xml:base="/2023/03/10/legclf_reddit_advice_en.html">&lt;h2 id=&quot;description&quot;&gt;Description&lt;/h2&gt;

&lt;p&gt;This is a Multiclass classification model which retrieves the topic/class of an informal message from a legal forum, including the following classes: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digital&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;business&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;insurance&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;contract&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;driving&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;school&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;family&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wills&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;employment&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;housing&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;criminal&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;predicted-entities&quot;&gt;Predicted Entities&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digital&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;business&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;insurance&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;contract&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;driving&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;school&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;family&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wills&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;employment&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;housing&lt;/code&gt;&lt;/p&gt;

&lt;p class=&quot;btn-box&quot;&gt;&lt;button class=&quot;button button-orange&quot; disabled=&quot;&quot;&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled=&quot;&quot;&gt;Open in Colab&lt;/button&gt;
&lt;a href=&quot;https://s3.amazonaws.com/auxdata.johnsnowlabs.com/legal/models/legclf_reddit_advice_en_1.0.0_3.0_1678448985639.zip&quot; class=&quot;button button-orange&quot;&gt;Download&lt;/a&gt;
&lt;a href=&quot;s3://auxdata.johnsnowlabs.com/legal/models/legclf_reddit_advice_en_1.0.0_3.0_1678448985639.zip&quot; class=&quot;button button-orange button-orange-trans button-icon button-copy-s3&quot;&gt;Copy S3 URI&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-to-use&quot;&gt;How to use&lt;/h2&gt;

&lt;div class=&quot;tabs-box&quot;&gt;
  &lt;div class=&quot;tabs-model-aproach-head&quot;&gt;&lt;button class=&quot;tab-li-model-aproach tabheader_active&quot;&gt;Python&lt;/button&gt;&lt;button class=&quot;tab-li-model-aproach&quot;&gt;Scala&lt;/button&gt;&lt;button class=&quot;tab-li-model-aproach&quot;&gt;NLU&lt;/button&gt;&lt;/div&gt;

  &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;documentAssembler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DocumentAssembler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; \
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setInputCols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; \
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setOutputCols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;document&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tokenizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Tokenizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; \
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setInputCols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;document&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; \
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setOutputCol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;seq_classifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;legal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BertForSequenceClassification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pretrained&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;legclf_reddit_advice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;legal/models&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; \
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setInputCols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;document&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; \
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setOutputCol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;class&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;pipeline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nlp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pipeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;documentAssembler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq_classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;createDataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Mother of my child took my daughter and moved (without notice), won't let me see her or tell me where she is.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toDF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pipeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

&lt;/div&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+--------+
|  result|
+--------+
|[family]|
+--------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 class=&quot;model-param&quot; id=&quot;model-information&quot;&gt;Model Information&lt;/h2&gt;

&lt;table class=&quot;table-model&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Model Name:&lt;/td&gt;
      &lt;td&gt;legclf_reddit_advice&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Compatibility:&lt;/td&gt;
      &lt;td&gt;Legal NLP 1.0.0+&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;License:&lt;/td&gt;
      &lt;td&gt;Licensed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Edition:&lt;/td&gt;
      &lt;td&gt;Official&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Input Labels:&lt;/td&gt;
      &lt;td&gt;[document, token]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Output Labels:&lt;/td&gt;
      &lt;td&gt;[class]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Language:&lt;/td&gt;
      &lt;td&gt;en&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Size:&lt;/td&gt;
      &lt;td&gt;406.4 MB&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Case sensitive:&lt;/td&gt;
      &lt;td&gt;true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Max sentence length:&lt;/td&gt;
      &lt;td&gt;512&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;Train dataset available &lt;a href=&quot;https://huggingface.co/datasets/jonathanli/legal-advice-reddit&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;benchmarking&quot;&gt;Benchmarking&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;label         precision  recall  f1-score  support 
business      0.76       0.67    0.72      239     
contract      0.80       0.68    0.73      207     
criminal      0.82       0.77    0.80      209     
digital       0.76       0.74    0.75      223     
driving       0.86       0.85    0.86      223     
employment    0.76       0.92    0.83      222     
family        0.88       0.95    0.92      216     
housing       0.89       0.95    0.92      221     
insurance     0.83       0.80    0.81      221     
school        0.87       0.91    0.89      207     
wills         0.95       0.96    0.96      199     
accuracy      -          -       0.83      2387    
macro-avg     0.84       0.84    0.83      2387    
weighted-avg  0.83       0.83    0.83      2387
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="legal" /><category term="classifier" /><category term="reddit" /><category term="tensorflow" /><summary type="html">Description This is a Multiclass classification model which retrieves the topic/class of an informal message from a legal forum, including the following classes: digital, business, insurance, contract, driving, school, family, wills, employment, housing, criminal. Predicted Entities digital, business, insurance, contract, driving, school, family, wills, employment, housing Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU documentAssembler = nlp.DocumentAssembler() \ .setInputCols([&quot;text&quot;]) \ .setOutputCols(&quot;document&quot;) tokenizer = nlp.Tokenizer() \ .setInputCols(&quot;document&quot;) \ .setOutputCol(&quot;token&quot;) seq_classifier = legal.BertForSequenceClassification.pretrained(&quot;legclf_reddit_advice&quot;, &quot;en&quot;, &quot;legal/models&quot;) \ .setInputCols([&quot;document&quot;, &quot;token&quot;]) \ .setOutputCol(&quot;class&quot;) pipeline = nlp.Pipeline(stages=[documentAssembler, tokenizer, seq_classifier]) data = spark.createDataFrame([[&quot;Mother of my child took my daughter and moved (without notice), won't let me see her or tell me where she is.&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) Results +--------+ | result| +--------+ |[family]| +--------+ Model Information Model Name: legclf_reddit_advice Compatibility: Legal NLP 1.0.0+ License: Licensed Edition: Official Input Labels: [document, token] Output Labels: [class] Language: en Size: 406.4 MB Case sensitive: true Max sentence length: 512 References Train dataset available here Benchmarking label precision recall f1-score support business 0.76 0.67 0.72 239 contract 0.80 0.68 0.73 207 criminal 0.82 0.77 0.80 209 digital 0.76 0.74 0.75 223 driving 0.86 0.85 0.86 223 employment 0.76 0.92 0.83 222 family 0.88 0.95 0.92 216 housing 0.89 0.95 0.92 221 insurance 0.83 0.80 0.81 221 school 0.87 0.91 0.89 207 wills 0.95 0.96 0.96 199 accuracy - - 0.83 2387 macro-avg 0.84 0.84 0.83 2387 weighted-avg 0.83 0.83 0.83 2387</summary></entry><entry><title type="html">Financial NER (xlg, XLarge)</title><link href="/2023/03/10/finner_financial_xlarge_en.html" rel="alternate" type="text/html" title="Financial NER (xlg, XLarge)" /><published>2023-03-10T00:00:00+00:00</published><updated>2023-03-10T00:00:00+00:00</updated><id>/2023/03/10/finner_financial_xlarge_en</id><content type="html" xml:base="/2023/03/10/finner_financial_xlarge_en.html">## Description

This financial model is an xlg (Xlarge) version, which has been trained with more general labels than other versions such (`md`, `lg`, ...) that are available in the Models Hub. The training corpus used for this model is a combination of Broker Reports, Earning Calls, and 10K filings.

## Predicted Entities

`CF`, `INCOME`, `KPI_INCREASE`, `CFO`, `PROFIT`, `PROFIT_INCREASE`, `AMOUNT`, `REVENUE`, `CFI`, `EXPENSE`, `FISCAL_YEAR`, `Expense`, `KPI`, `LIABILITY`, `TARGET_PRICE`, `CFO_decrease`, `STOCKHOLDERS_EQUITY`, `PROFIT_DECLINE`, `CMP`, `CFF`, `Expense_decrease`, `Revenue_decline`, `COUNT`, `Contra_LIABILITY`, `Expense_Increase`, `STOCK_EXCHANGE`, `LOSS`, `FCF`, `Revenue_increase`, `CFN`, `CFO_Increase`, `Income`, `PERCENTAGE`, `CURRENCY`, `ASSET`, `STOCKHOLDERS_DEFICIT`, `DATE`, `RATING`

{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/finance/FINNER_FINANCIAL_10K/){:.button.button-orange}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/finance/models/finner_financial_xlarge_en_1.0.0_3.0_1678464314140.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/finance/models/finner_financial_xlarge_en_1.0.0_3.0_1678464314140.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
 
# Test classifier in Spark NLP pipeline
document_assembler = nlp.DocumentAssembler() \
    .setInputCol('text') \
    .setOutputCol('document')

tokenizer = nlp.Tokenizer() \
    .setInputCols(['document']) \
    .setOutputCol('token')

# Load newly trained classifier
token_classifier = finance.BertForTokenClassification.pretrained(&quot;finner_financial_xlarge&quot;, &quot;en&quot;, &quot;finance/models&quot;)\
  .setInputCols([&quot;document&quot;,'token'])\
  .setOutputCol(&quot;label&quot;)\
  .setCaseSensitive(True)

converter = finance.NerConverterInternal()\
    .setInputCols([&quot;document&quot;, &quot;token&quot;, &quot;label&quot;])\
    .setOutputCol(&quot;ner_span&quot;)

pipeline = nlp.Pipeline(stages=[
    document_assembler, 
    tokenizer,
    token_classifier,
    converter    
])

# Generating example
example = spark.createDataFrame([['''We expect Revenue / PAT CAGR of ~ 19 %/~ 22 % over FY2022-FY2024E EPS . Hence , we retain our Buy recommendation on VGIL with an unchanged price target ( PT ) of . This includes $ 1 billion in cash and cash equivalents , $ 2 billion in property and equipment , and $ 2 billion in intangible assets .''']]).toDF(&quot;text&quot;)

result = pipeline.fit(example).transform(example)

```

&lt;/div&gt;

## Results

```bash

+-------------------------+----------------+
|chunk                    |entity          |
+-------------------------+----------------+
|Revenue                  |Revenue_increase|
|PAT                      |PROFIT_INCREASE |
|19                       |PERCENTAGE      |
|22                       |PERCENTAGE      |
|Buy                      |RATING          |
|price target             |TARGET_PRICE    |
|$                        |CURRENCY        |
|1 billion                |AMOUNT          |
|cash and cash equivalents|CF              |
|$                        |CURRENCY        |
|2 billion                |AMOUNT          |
|property and equipment   |ASSET           |
|$                        |CURRENCY        |
|2 billion                |AMOUNT          |
|intangible assets        |ASSET           |
+-------------------------+----------------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|finner_financial_xlarge|
|Compatibility:|Finance NLP 1.0.0+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence, token]|
|Output Labels:|[ner]|
|Language:|en|
|Size:|401.0 MB|
|Case sensitive:|true|
|Max sentence length:|128|

## References

In-house dataset

## Benchmarking

```bash
label                      precision    recall  f1-score   support
        I-CFO_Increase       0.87      0.94      0.90       349
                 I-CFF       0.75      0.85      0.80       486
                B-LOSS       0.84      0.89      0.87       122
        B-CFO_Increase       0.92      0.95      0.93       233
     B-Revenue_decline       0.61      0.77      0.68        93
                 B-CFO       0.81      0.89      0.85       298
        B-KPI_INCREASE       0.71      0.29      0.41        42
            I-CURRENCY       1.00      0.96      0.98        70
                 I-CFI       0.88      0.85      0.87       489
      I-PROFIT_DECLINE       0.92      0.78      0.84        45
               I-COUNT       0.80      0.90      0.85        31
                 B-CFN       0.99      1.00      1.00       327
        I-KPI_INCREASE       0.55      0.40      0.46        30
     I-Revenue_decline       0.66      0.88      0.75        94
               B-ASSET       0.62      0.57      0.60       282
    I-Contra_LIABILITY       0.84      0.84      0.84        92
                 B-KPI       0.48      0.36      0.41        58
 I-STOCKHOLDERS_EQUITY       0.90      0.67      0.77       164
      B-STOCK_EXCHANGE       1.00      0.94      0.97        52
         I-FISCAL_YEAR       0.94      0.97      0.96      1999
              I-Income       0.77      0.76      0.76       168
      B-PROFIT_DECLINE       0.72      0.76      0.74        50
             I-Expense       0.69      0.67      0.68       450
         B-FISCAL_YEAR       0.93      0.96      0.94       621
                 I-CFO       0.81      0.83      0.82       581
           B-LIABILITY       0.67      0.83      0.74       305
             B-Expense       0.71      0.64      0.67       318
              B-INCOME       0.62      0.33      0.43        39
 B-STOCKHOLDERS_EQUITY       0.77      0.71      0.74        83
               I-ASSET       0.61      0.68      0.65       377
                I-DATE       0.90      0.93      0.91      1146
                  B-CF       0.83      0.81      0.82       135
    I-Expense_Increase       0.90      0.89      0.90       353
              B-PROFIT       0.86      0.87      0.86       970
I-STOCKHOLDERS_DEFICIT       0.96      0.82      0.88        28
B-STOCKHOLDERS_DEFICIT       0.89      0.75      0.81        32
    B-Expense_Increase       0.85      0.87      0.86       267
              I-AMOUNT       0.96      0.97      0.97      3009
                  I-CF       0.85      0.94      0.89       291
      I-STOCK_EXCHANGE       0.98      1.00      0.99       170
              I-PROFIT       0.87      0.92      0.90       794
    I-Expense_decrease       0.76      0.84      0.80       198
             B-REVENUE       0.75      0.75      0.75       410
    B-Revenue_increase       0.72      0.82      0.76       498
             I-EXPENSE       0.53      0.66      0.59       169
     I-PROFIT_INCREASE       0.83      0.92      0.87       160
    B-Contra_LIABILITY       0.64      0.66      0.65        95
              I-INCOME       0.75      0.43      0.55        35
             I-REVENUE       0.73      0.67      0.70       226
              B-AMOUNT       0.96      0.97      0.97     10381
                 I-CMP       1.00      1.00      1.00        33
               B-COUNT       0.85      0.99      0.91       294
        I-TARGET_PRICE       0.97      0.99      0.98       113
                 B-CFI       0.75      0.79      0.77       154
    I-Revenue_increase       0.64      0.78      0.71       329
                B-DATE       0.91      0.97      0.94      2112
        I-CFO_decrease       0.78      0.63      0.70       101
                 I-FCF       0.74      0.95      0.83        66
                 I-KPI       0.46      0.46      0.46        50
    B-Expense_decrease       0.80      0.86      0.83       140
     B-PROFIT_INCREASE       0.77      0.85      0.81       239
              B-Income       0.77      0.75      0.76        79
          B-PERCENTAGE       0.96      0.98      0.97      2885
            B-CURRENCY       0.98      0.99      0.99      3631
        B-CFO_decrease       0.89      0.70      0.78        57
                I-LOSS       0.87      0.80      0.84       155
              B-RATING       0.94      0.98      0.96       536
          I-PERCENTAGE       0.83      0.50      0.62        30
                 B-CMP       0.98      1.00      0.99        41
                 B-CFF       0.69      0.63      0.66       184
        B-TARGET_PRICE       0.98      0.97      0.98       153
             B-EXPENSE       0.68      0.74      0.71       230
           I-LIABILITY       0.79      0.84      0.82       371
                 B-FCF       0.77      0.86      0.81        35
             micro-avg       0.90      0.92      0.91     39733
             macro-avg       0.81      0.80      0.80     39733
          weighted-avg       0.90      0.92      0.91     39733
```</content><author><name>John Snow Labs</name></author><category term="en" /><category term="finance" /><category term="ner" /><category term="licensed" /><category term="broker_reports" /><category term="earning_calls" /><category term="sec10k" /><category term="tensorflow" /><summary type="html">Description This financial model is an xlg (Xlarge) version, which has been trained with more general labels than other versions such (md, lg, …) that are available in the Models Hub. The training corpus used for this model is a combination of Broker Reports, Earning Calls, and 10K filings. Predicted Entities CF, INCOME, KPI_INCREASE, CFO, PROFIT, PROFIT_INCREASE, AMOUNT, REVENUE, CFI, EXPENSE, FISCAL_YEAR, Expense, KPI, LIABILITY, TARGET_PRICE, CFO_decrease, STOCKHOLDERS_EQUITY, PROFIT_DECLINE, CMP, CFF, Expense_decrease, Revenue_decline, COUNT, Contra_LIABILITY, Expense_Increase, STOCK_EXCHANGE, LOSS, FCF, Revenue_increase, CFN, CFO_Increase, Income, PERCENTAGE, CURRENCY, ASSET, STOCKHOLDERS_DEFICIT, DATE, RATING Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU # Test classifier in Spark NLP pipeline document_assembler = nlp.DocumentAssembler() \ .setInputCol('text') \ .setOutputCol('document') tokenizer = nlp.Tokenizer() \ .setInputCols(['document']) \ .setOutputCol('token') # Load newly trained classifier token_classifier = finance.BertForTokenClassification.pretrained(&quot;finner_financial_xlarge&quot;, &quot;en&quot;, &quot;finance/models&quot;)\ .setInputCols([&quot;document&quot;,'token'])\ .setOutputCol(&quot;label&quot;)\ .setCaseSensitive(True) converter = finance.NerConverterInternal()\ .setInputCols([&quot;document&quot;, &quot;token&quot;, &quot;label&quot;])\ .setOutputCol(&quot;ner_span&quot;) pipeline = nlp.Pipeline(stages=[ document_assembler, tokenizer, token_classifier, converter ]) # Generating example example = spark.createDataFrame([['''We expect Revenue / PAT CAGR of ~ 19 %/~ 22 % over FY2022-FY2024E EPS . Hence , we retain our Buy recommendation on VGIL with an unchanged price target ( PT ) of . This includes $ 1 billion in cash and cash equivalents , $ 2 billion in property and equipment , and $ 2 billion in intangible assets .''']]).toDF(&quot;text&quot;) result = pipeline.fit(example).transform(example) Results +-------------------------+----------------+ |chunk |entity | +-------------------------+----------------+ |Revenue |Revenue_increase| |PAT |PROFIT_INCREASE | |19 |PERCENTAGE | |22 |PERCENTAGE | |Buy |RATING | |price target |TARGET_PRICE | |$ |CURRENCY | |1 billion |AMOUNT | |cash and cash equivalents|CF | |$ |CURRENCY | |2 billion |AMOUNT | |property and equipment |ASSET | |$ |CURRENCY | |2 billion |AMOUNT | |intangible assets |ASSET | +-------------------------+----------------+ Model Information Model Name: finner_financial_xlarge Compatibility: Finance NLP 1.0.0+ License: Licensed Edition: Official Input Labels: [sentence, token] Output Labels: [ner] Language: en Size: 401.0 MB Case sensitive: true Max sentence length: 128 References In-house dataset Benchmarking label precision recall f1-score support I-CFO_Increase 0.87 0.94 0.90 349 I-CFF 0.75 0.85 0.80 486 B-LOSS 0.84 0.89 0.87 122 B-CFO_Increase 0.92 0.95 0.93 233 B-Revenue_decline 0.61 0.77 0.68 93 B-CFO 0.81 0.89 0.85 298 B-KPI_INCREASE 0.71 0.29 0.41 42 I-CURRENCY 1.00 0.96 0.98 70 I-CFI 0.88 0.85 0.87 489 I-PROFIT_DECLINE 0.92 0.78 0.84 45 I-COUNT 0.80 0.90 0.85 31 B-CFN 0.99 1.00 1.00 327 I-KPI_INCREASE 0.55 0.40 0.46 30 I-Revenue_decline 0.66 0.88 0.75 94 B-ASSET 0.62 0.57 0.60 282 I-Contra_LIABILITY 0.84 0.84 0.84 92 B-KPI 0.48 0.36 0.41 58 I-STOCKHOLDERS_EQUITY 0.90 0.67 0.77 164 B-STOCK_EXCHANGE 1.00 0.94 0.97 52 I-FISCAL_YEAR 0.94 0.97 0.96 1999 I-Income 0.77 0.76 0.76 168 B-PROFIT_DECLINE 0.72 0.76 0.74 50 I-Expense 0.69 0.67 0.68 450 B-FISCAL_YEAR 0.93 0.96 0.94 621 I-CFO 0.81 0.83 0.82 581 B-LIABILITY 0.67 0.83 0.74 305 B-Expense 0.71 0.64 0.67 318 B-INCOME 0.62 0.33 0.43 39 B-STOCKHOLDERS_EQUITY 0.77 0.71 0.74 83 I-ASSET 0.61 0.68 0.65 377 I-DATE 0.90 0.93 0.91 1146 B-CF 0.83 0.81 0.82 135 I-Expense_Increase 0.90 0.89 0.90 353 B-PROFIT 0.86 0.87 0.86 970 I-STOCKHOLDERS_DEFICIT 0.96 0.82 0.88 28 B-STOCKHOLDERS_DEFICIT 0.89 0.75 0.81 32 B-Expense_Increase 0.85 0.87 0.86 267 I-AMOUNT 0.96 0.97 0.97 3009 I-CF 0.85 0.94 0.89 291 I-STOCK_EXCHANGE 0.98 1.00 0.99 170 I-PROFIT 0.87 0.92 0.90 794 I-Expense_decrease 0.76 0.84 0.80 198 B-REVENUE 0.75 0.75 0.75 410 B-Revenue_increase 0.72 0.82 0.76 498 I-EXPENSE 0.53 0.66 0.59 169 I-PROFIT_INCREASE 0.83 0.92 0.87 160 B-Contra_LIABILITY 0.64 0.66 0.65 95 I-INCOME 0.75 0.43 0.55 35 I-REVENUE 0.73 0.67 0.70 226 B-AMOUNT 0.96 0.97 0.97 10381 I-CMP 1.00 1.00 1.00 33 B-COUNT 0.85 0.99 0.91 294 I-TARGET_PRICE 0.97 0.99 0.98 113 B-CFI 0.75 0.79 0.77 154 I-Revenue_increase 0.64 0.78 0.71 329 B-DATE 0.91 0.97 0.94 2112 I-CFO_decrease 0.78 0.63 0.70 101 I-FCF 0.74 0.95 0.83 66 I-KPI 0.46 0.46 0.46 50 B-Expense_decrease 0.80 0.86 0.83 140 B-PROFIT_INCREASE 0.77 0.85 0.81 239 B-Income 0.77 0.75 0.76 79 B-PERCENTAGE 0.96 0.98 0.97 2885 B-CURRENCY 0.98 0.99 0.99 3631 B-CFO_decrease 0.89 0.70 0.78 57 I-LOSS 0.87 0.80 0.84 155 B-RATING 0.94 0.98 0.96 536 I-PERCENTAGE 0.83 0.50 0.62 30 B-CMP 0.98 1.00 0.99 41 B-CFF 0.69 0.63 0.66 184 B-TARGET_PRICE 0.98 0.97 0.98 153 B-EXPENSE 0.68 0.74 0.71 230 I-LIABILITY 0.79 0.84 0.82 371 B-FCF 0.77 0.86 0.81 35 micro-avg 0.90 0.92 0.91 39733 macro-avg 0.81 0.80 0.80 39733 weighted-avg 0.90 0.92 0.91 39733</summary></entry><entry><title type="html">Medical Question Answering (biogpt)</title><link href="/2023/03/09/medical_qa_biogpt_en.html" rel="alternate" type="text/html" title="Medical Question Answering (biogpt)" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/medical_qa_biogpt_en</id><content type="html" xml:base="/2023/03/09/medical_qa_biogpt_en.html">## Description

This model has been trained with medical documents and can generate two types of answers, short and long.
Types of questions are supported: `&quot;short&quot;` (producing yes/no/maybe) answers and `&quot;full&quot;` (long answers).

## Predicted Entities



{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/medical_qa_biogpt_en_4.3.1_3.0_1678355315206.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/medical_qa_biogpt_en_4.3.1_3.0_1678355315206.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
document_assembler = MultiDocumentAssembler()\
    .setInputCols(&quot;question&quot;, &quot;context&quot;)\
    .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;)

med_qa = sparknlp_jsl.annotators.MedicalQuestionAnswering\
    .pretrained(&quot;medical_qa_biogpt&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
    .setInputCols([&quot;document_question&quot;, &quot;document_context&quot;])\
    .setOutputCol(&quot;answer&quot;)\
    .setMaxNewTokens(30)\
    .setTopK(1)\
    .setQuestionType(&quot;long&quot;) # &quot;short&quot;

pipeline = Pipeline(stages=[document_assembler, med_qa])

paper_abstract = &quot;The visual indexing theory proposed by Zenon Pylyshyn (Cognition, 32, 65-97, 1989) predicts that visual attention mechanisms are employed when mental images are projected onto a visual scene.&quot;
long_question = &quot;What is the effect of directing attention on memory?&quot;
yes_no_question = &quot;Does directing attention improve memory for items?&quot;

data = spark.createDataFrame(
    [
        [long_question, paper_abstract, &quot;long&quot;],
        [yes_no_question, paper_abstract, &quot;short&quot;],
    ]
).toDF(&quot;question&quot;, &quot;context&quot;, &quot;question_type&quot;)

pipeline.fit(data).transform(data.where(&quot;question_type == 'long'&quot;))\
    .select(&quot;answer.result&quot;)\
    .show(truncate=False)

pipeline.fit(data).transform(data.where(&quot;question_type == 'short'&quot;))\
    .select(&quot;answer.result&quot;)\
    .show(truncate=False)
```
```scala
val document_assembler = new MultiDocumentAssembler()
    .setInputCols(&quot;question&quot;, &quot;context&quot;)
    .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;)

val med_qa = MedicalQuestionAnswering
    .pretrained(&quot;medical_qa_biogpt&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols((&quot;document_question&quot;, &quot;document_context&quot;))
    .setOutputCol(&quot;answer&quot;)
    .setMaxNewTokens(30)
    .setTopK(1)
    .setQuestionType(&quot;long&quot;) # &quot;short&quot;

val pipeline = new Pipeline().setStages(Array(document_assembler, med_qa))

paper_abstract = &quot;The visual indexing theory proposed by Zenon Pylyshyn (Cognition, 32, 65-97, 1989) predicts that visual attention mechanisms are employed when mental images are projected onto a visual scene.&quot;
long_question = &quot;What is the effect of directing attention on memory?&quot;
yes_no_question = &quot;Does directing attention improve memory for items?&quot;

val data = Seq( 
    (long_question, paper_abstract,&quot;long&quot; ),
    (yes_no_question, paper_abstract, &quot;short&quot;))
    .toDS.toDF(&quot;question&quot;, &quot;context&quot;, &quot;question_type&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|result                                                                                                                                                                        |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|[the present study investigated whether directing spatial attention to one location in a visual array would enhance memory for the array features. participants memorized two]|
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|medical_qa_biogpt|
|Compatibility:|Healthcare NLP 4.3.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.1 GB|
|Case sensitive:|true|</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="en" /><category term="gpt" /><category term="biogpt" /><category term="pubmed" /><category term="question_answering" /><category term="tensorflow" /><summary type="html">Description This model has been trained with medical documents and can generate two types of answers, short and long. Types of questions are supported: &quot;short&quot; (producing yes/no/maybe) answers and &quot;full&quot; (long answers). Predicted Entities Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = MultiDocumentAssembler()\ .setInputCols(&quot;question&quot;, &quot;context&quot;)\ .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;) med_qa = sparknlp_jsl.annotators.MedicalQuestionAnswering\ .pretrained(&quot;medical_qa_biogpt&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document_question&quot;, &quot;document_context&quot;])\ .setOutputCol(&quot;answer&quot;)\ .setMaxNewTokens(30)\ .setTopK(1)\ .setQuestionType(&quot;long&quot;) # &quot;short&quot; pipeline = Pipeline(stages=[document_assembler, med_qa]) paper_abstract = &quot;The visual indexing theory proposed by Zenon Pylyshyn (Cognition, 32, 65-97, 1989) predicts that visual attention mechanisms are employed when mental images are projected onto a visual scene.&quot; long_question = &quot;What is the effect of directing attention on memory?&quot; yes_no_question = &quot;Does directing attention improve memory for items?&quot; data = spark.createDataFrame( [ [long_question, paper_abstract, &quot;long&quot;], [yes_no_question, paper_abstract, &quot;short&quot;], ] ).toDF(&quot;question&quot;, &quot;context&quot;, &quot;question_type&quot;) pipeline.fit(data).transform(data.where(&quot;question_type == 'long'&quot;))\ .select(&quot;answer.result&quot;)\ .show(truncate=False) pipeline.fit(data).transform(data.where(&quot;question_type == 'short'&quot;))\ .select(&quot;answer.result&quot;)\ .show(truncate=False) val document_assembler = new MultiDocumentAssembler() .setInputCols(&quot;question&quot;, &quot;context&quot;) .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;) val med_qa = MedicalQuestionAnswering .pretrained(&quot;medical_qa_biogpt&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols((&quot;document_question&quot;, &quot;document_context&quot;)) .setOutputCol(&quot;answer&quot;) .setMaxNewTokens(30) .setTopK(1) .setQuestionType(&quot;long&quot;) # &quot;short&quot; val pipeline = new Pipeline().setStages(Array(document_assembler, med_qa)) paper_abstract = &quot;The visual indexing theory proposed by Zenon Pylyshyn (Cognition, 32, 65-97, 1989) predicts that visual attention mechanisms are employed when mental images are projected onto a visual scene.&quot; long_question = &quot;What is the effect of directing attention on memory?&quot; yes_no_question = &quot;Does directing attention improve memory for items?&quot; val data = Seq( (long_question, paper_abstract,&quot;long&quot; ), (yes_no_question, paper_abstract, &quot;short&quot;)) .toDS.toDF(&quot;question&quot;, &quot;context&quot;, &quot;question_type&quot;) val result = pipeline.fit(data).transform(data) Results +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ |result | +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ |[the present study investigated whether directing spatial attention to one location in a visual array would enhance memory for the array features. participants memorized two]| +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ Model Information Model Name: medical_qa_biogpt Compatibility: Healthcare NLP 4.3.1+ License: Licensed Edition: Official Language: en Size: 1.1 GB Case sensitive: true</summary></entry><entry><title type="html">Pipeline to Detect Clinical Entities in Romanian (Bert, Base, Cased)</title><link href="/2023/03/09/ner_clinical_bert_pipeline_ro.html" rel="alternate" type="text/html" title="Pipeline to Detect Clinical Entities in Romanian (Bert, Base, Cased)" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_clinical_bert_pipeline_ro</id><content type="html" xml:base="/2023/03/09/ner_clinical_bert_pipeline_ro.html">## Description

This pretrained pipeline is built on the top of [ner_clinical_bert](https://nlp.johnsnowlabs.com/2022/11/22/ner_clinical_bert_ro.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_clinical_bert_pipeline_ro_4.3.0_3.2_1678352766945.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_clinical_bert_pipeline_ro_4.3.0_3.2_1678352766945.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_clinical_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;)

text = '''Solicitare: Angio CT cardio-toracic Dg. de trimitere Atrezie de valva pulmonara. Hipoplazie VS. Atrezie VAV stang. Anastomoza Glenn. Sp. Tromboza la nivelul anastomozei. Trimis de: Sectia Clinica Cardiologie (dr. Sue T.) Procedura Aparat GE Revolution HD. Branula albastra montata la nivelul membrului superior drept. Scout. Se administreaza 30 ml Iomeron 350 cu flux 2.2 ml/s, urmate de 20 ml ser fiziologic cu acelasi flux. Se efectueaza o examinare angio-CT cardiotoracica cu achizitii secventiale prospective la o frecventa cardiaca medie de 100/min.'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_clinical_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;)

val text = &quot;Solicitare: Angio CT cardio-toracic Dg. de trimitere Atrezie de valva pulmonara. Hipoplazie VS. Atrezie VAV stang. Anastomoza Glenn. Sp. Tromboza la nivelul anastomozei. Trimis de: Sectia Clinica Cardiologie (dr. Sue T.) Procedura Aparat GE Revolution HD. Branula albastra montata la nivelul membrului superior drept. Scout. Se administreaza 30 ml Iomeron 350 cu flux 2.2 ml/s, urmate de 20 ml ser fiziologic cu acelasi flux. Se efectueaza o examinare angio-CT cardiotoracica cu achizitii secventiale prospective la o frecventa cardiaca medie de 100/min.&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks                        |   begin |   end | ner_label                 |   confidence |
|---:|:----------------------------------|--------:|------:|:--------------------------|-------------:|
|  0 | Angio CT                          |      12 |    19 | Imaging_Test              |     0.96415  |
|  1 | cardio-toracic                    |      21 |    34 | Body_Part                 |     0.4776   |
|  2 | Atrezie                           |      53 |    59 | Disease_Syndrome_Disorder |     0.9602   |
|  3 | valva pulmonara                   |      64 |    78 | Body_Part                 |     0.73105  |
|  4 | Hipoplazie                        |      81 |    90 | Disease_Syndrome_Disorder |     0.628    |
|  5 | VS                                |      92 |    93 | Body_Part                 |     0.9543   |
|  6 | Atrezie                           |      96 |   102 | Disease_Syndrome_Disorder |     0.8763   |
|  7 | VAV stang                         |     104 |   112 | Body_Part                 |     0.9444   |
|  8 | Anastomoza Glenn                  |     115 |   130 | Disease_Syndrome_Disorder |     0.8648   |
|  9 | Tromboza                          |     137 |   144 | Disease_Syndrome_Disorder |     0.991    |
| 10 | GE Revolution HD                  |     238 |   253 | Medical_Device            |     0.668367 |
| 11 | Branula albastra                  |     256 |   271 | Medical_Device            |     0.9179   |
| 12 | membrului superior                |     292 |   309 | Body_Part                 |     0.98815  |
| 13 | drept                             |     311 |   315 | Direction                 |     0.5645   |
| 14 | Scout                             |     318 |   322 | Body_Part                 |     0.3484   |
| 15 | 30 ml                             |     342 |   346 | Dosage                    |     0.9996   |
| 16 | Iomeron 350                       |     348 |   358 | Drug_Ingredient           |     0.9822   |
| 17 | 2.2 ml/s                          |     368 |   375 | Dosage                    |     0.9327   |
| 18 | 20 ml                             |     388 |   392 | Dosage                    |     0.9977   |
| 19 | ser fiziologic                    |     394 |   407 | Drug_Ingredient           |     0.9609   |
| 20 | angio-CT                          |     452 |   459 | Imaging_Test              |     0.9965   |
| 21 | cardiotoracica                    |     461 |   474 | Body_Part                 |     0.9344   |
| 22 | achizitii secventiale prospective |     479 |   511 | Imaging_Technique         |     0.966833 |
| 23 | 100/min                           |     546 |   552 | Pulse                     |     0.9128   |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_clinical_bert_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|ro|
|Size:|483.6 MB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- BertEmbeddings
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="ro" /><category term="ner" /><category term="bert" /><summary type="html">Description This pretrained pipeline is built on the top of ner_clinical_bert model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_clinical_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;) text = '''Solicitare: Angio CT cardio-toracic Dg. de trimitere Atrezie de valva pulmonara. Hipoplazie VS. Atrezie VAV stang. Anastomoza Glenn. Sp. Tromboza la nivelul anastomozei. Trimis de: Sectia Clinica Cardiologie (dr. Sue T.) Procedura Aparat GE Revolution HD. Branula albastra montata la nivelul membrului superior drept. Scout. Se administreaza 30 ml Iomeron 350 cu flux 2.2 ml/s, urmate de 20 ml ser fiziologic cu acelasi flux. Se efectueaza o examinare angio-CT cardiotoracica cu achizitii secventiale prospective la o frecventa cardiaca medie de 100/min.''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_clinical_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;) val text = &quot;Solicitare: Angio CT cardio-toracic Dg. de trimitere Atrezie de valva pulmonara. Hipoplazie VS. Atrezie VAV stang. Anastomoza Glenn. Sp. Tromboza la nivelul anastomozei. Trimis de: Sectia Clinica Cardiologie (dr. Sue T.) Procedura Aparat GE Revolution HD. Branula albastra montata la nivelul membrului superior drept. Scout. Se administreaza 30 ml Iomeron 350 cu flux 2.2 ml/s, urmate de 20 ml ser fiziologic cu acelasi flux. Se efectueaza o examinare angio-CT cardiotoracica cu achizitii secventiale prospective la o frecventa cardiaca medie de 100/min.&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:----------------------------------|--------:|------:|:--------------------------|-------------:| | 0 | Angio CT | 12 | 19 | Imaging_Test | 0.96415 | | 1 | cardio-toracic | 21 | 34 | Body_Part | 0.4776 | | 2 | Atrezie | 53 | 59 | Disease_Syndrome_Disorder | 0.9602 | | 3 | valva pulmonara | 64 | 78 | Body_Part | 0.73105 | | 4 | Hipoplazie | 81 | 90 | Disease_Syndrome_Disorder | 0.628 | | 5 | VS | 92 | 93 | Body_Part | 0.9543 | | 6 | Atrezie | 96 | 102 | Disease_Syndrome_Disorder | 0.8763 | | 7 | VAV stang | 104 | 112 | Body_Part | 0.9444 | | 8 | Anastomoza Glenn | 115 | 130 | Disease_Syndrome_Disorder | 0.8648 | | 9 | Tromboza | 137 | 144 | Disease_Syndrome_Disorder | 0.991 | | 10 | GE Revolution HD | 238 | 253 | Medical_Device | 0.668367 | | 11 | Branula albastra | 256 | 271 | Medical_Device | 0.9179 | | 12 | membrului superior | 292 | 309 | Body_Part | 0.98815 | | 13 | drept | 311 | 315 | Direction | 0.5645 | | 14 | Scout | 318 | 322 | Body_Part | 0.3484 | | 15 | 30 ml | 342 | 346 | Dosage | 0.9996 | | 16 | Iomeron 350 | 348 | 358 | Drug_Ingredient | 0.9822 | | 17 | 2.2 ml/s | 368 | 375 | Dosage | 0.9327 | | 18 | 20 ml | 388 | 392 | Dosage | 0.9977 | | 19 | ser fiziologic | 394 | 407 | Drug_Ingredient | 0.9609 | | 20 | angio-CT | 452 | 459 | Imaging_Test | 0.9965 | | 21 | cardiotoracica | 461 | 474 | Body_Part | 0.9344 | | 22 | achizitii secventiale prospective | 479 | 511 | Imaging_Technique | 0.966833 | | 23 | 100/min | 546 | 552 | Pulse | 0.9128 | Model Information Model Name: ner_clinical_bert_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: ro Size: 483.6 MB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel BertEmbeddings MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Pipeline to Extract Entities in Covid Trials</title><link href="/2023/03/09/ner_covid_trials_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Extract Entities in Covid Trials" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_covid_trials_pipeline_en</id><content type="html" xml:base="/2023/03/09/ner_covid_trials_pipeline_en.html">## Description

This pretrained pipeline is built on the top of [ner_covid_trials](https://nlp.johnsnowlabs.com/2022/10/19/ner_covid_trials_en.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_covid_trials_pipeline_en_4.3.0_3.2_1678355313181.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_covid_trials_pipeline_en_4.3.0_3.2_1678355313181.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_covid_trials_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = '''In December 2019 , a group of patients with the acute respiratory disease was detected in Wuhan , Hubei Province of China . A month later , a new beta-coronavirus was identified as the cause of the 2019 coronavirus infection . SARS-CoV-2 is a coronavirus that belongs to the group of β-coronaviruses of the subgenus Coronaviridae . The SARS-CoV-2 is the third known zoonotic coronavirus disease after severe acute respiratory syndrome ( SARS ) and Middle Eastern respiratory syndrome ( MERS ). The diagnosis of SARS-CoV-2 recommended by the WHO , CDC is the collection of a sample from the upper respiratory tract ( nasal and oropharyngeal exudate ) or from the lower respiratory tractsuch as expectoration of endotracheal aspirate and bronchioloalveolar lavage and its analysis using the test of real-time polymerase chain reaction ( qRT-PCR ).In 2020, the first COVID‑19 vaccine was developed and made available to the public through emergency authorizations and conditional approvals.'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_covid_trials_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot;In December 2019 , a group of patients with the acute respiratory disease was detected in Wuhan , Hubei Province of China . A month later , a new beta-coronavirus was identified as the cause of the 2019 coronavirus infection . SARS-CoV-2 is a coronavirus that belongs to the group of β-coronaviruses of the subgenus Coronaviridae . The SARS-CoV-2 is the third known zoonotic coronavirus disease after severe acute respiratory syndrome ( SARS ) and Middle Eastern respiratory syndrome ( MERS ). The diagnosis of SARS-CoV-2 recommended by the WHO , CDC is the collection of a sample from the upper respiratory tract ( nasal and oropharyngeal exudate ) or from the lower respiratory tractsuch as expectoration of endotracheal aspirate and bronchioloalveolar lavage and its analysis using the test of real-time polymerase chain reaction ( qRT-PCR ).In 2020, the first COVID‑19 vaccine was developed and made available to the public through emergency authorizations and conditional approvals.&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks                          |   begin |   end | ner_label                 |   confidence |
|---:|:------------------------------------|--------:|------:|:--------------------------|-------------:|
|  0 | December 2019                       |       3 |    15 | Date                      |     0.99655  |
|  1 | acute respiratory disease           |      48 |    72 | Disease_Syndrome_Disorder |     0.8597   |
|  2 | beta-coronavirus                    |     146 |   161 | Virus                     |     0.6381   |
|  3 | 2019                                |     198 |   201 | Date                      |     0.8117   |
|  4 | coronavirus infection               |     203 |   223 | Disease_Syndrome_Disorder |     0.68335  |
|  5 | SARS-CoV-2                          |     227 |   236 | Virus                     |     0.9605   |
|  6 | coronavirus                         |     243 |   253 | Virus                     |     0.9814   |
|  7 | β-coronaviruses                     |     284 |   298 | Virus                     |     0.9564   |
|  8 | subgenus Coronaviridae              |     307 |   328 | Virus                     |     0.71465  |
|  9 | SARS-CoV-2                          |     336 |   345 | Virus                     |     0.9442   |
| 10 | zoonotic coronavirus disease        |     366 |   393 | Disease_Syndrome_Disorder |     0.922833 |
| 11 | severe acute respiratory syndrome   |     401 |   433 | Disease_Syndrome_Disorder |     0.959725 |
| 12 | SARS                                |     437 |   440 | Disease_Syndrome_Disorder |     0.9959   |
| 13 | Middle Eastern respiratory syndrome |     448 |   482 | Disease_Syndrome_Disorder |     0.9673   |
| 14 | MERS                                |     486 |   489 | Disease_Syndrome_Disorder |     0.9759   |
| 15 | SARS-CoV-2                          |     511 |   520 | Virus                     |     0.9027   |
| 16 | WHO                                 |     541 |   543 | Institution               |     0.9917   |
| 17 | CDC                                 |     547 |   549 | Institution               |     0.8296   |
| 18 | 2020                                |     848 |   851 | Date                      |     0.9997   |
| 19 | COVID‑19 vaccine                    |     864 |   879 | Vaccine_Name              |     0.87505  |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_covid_trials_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="en" /><category term="clinical" /><category term="licensed" /><category term="covid" /><summary type="html">Description This pretrained pipeline is built on the top of ner_covid_trials model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_covid_trials_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = '''In December 2019 , a group of patients with the acute respiratory disease was detected in Wuhan , Hubei Province of China . A month later , a new beta-coronavirus was identified as the cause of the 2019 coronavirus infection . SARS-CoV-2 is a coronavirus that belongs to the group of β-coronaviruses of the subgenus Coronaviridae . The SARS-CoV-2 is the third known zoonotic coronavirus disease after severe acute respiratory syndrome ( SARS ) and Middle Eastern respiratory syndrome ( MERS ). The diagnosis of SARS-CoV-2 recommended by the WHO , CDC is the collection of a sample from the upper respiratory tract ( nasal and oropharyngeal exudate ) or from the lower respiratory tractsuch as expectoration of endotracheal aspirate and bronchioloalveolar lavage and its analysis using the test of real-time polymerase chain reaction ( qRT-PCR ).In 2020, the first COVID‑19 vaccine was developed and made available to the public through emergency authorizations and conditional approvals.''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_covid_trials_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot;In December 2019 , a group of patients with the acute respiratory disease was detected in Wuhan , Hubei Province of China . A month later , a new beta-coronavirus was identified as the cause of the 2019 coronavirus infection . SARS-CoV-2 is a coronavirus that belongs to the group of β-coronaviruses of the subgenus Coronaviridae . The SARS-CoV-2 is the third known zoonotic coronavirus disease after severe acute respiratory syndrome ( SARS ) and Middle Eastern respiratory syndrome ( MERS ). The diagnosis of SARS-CoV-2 recommended by the WHO , CDC is the collection of a sample from the upper respiratory tract ( nasal and oropharyngeal exudate ) or from the lower respiratory tractsuch as expectoration of endotracheal aspirate and bronchioloalveolar lavage and its analysis using the test of real-time polymerase chain reaction ( qRT-PCR ).In 2020, the first COVID‑19 vaccine was developed and made available to the public through emergency authorizations and conditional approvals.&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:------------------------------------|--------:|------:|:--------------------------|-------------:| | 0 | December 2019 | 3 | 15 | Date | 0.99655 | | 1 | acute respiratory disease | 48 | 72 | Disease_Syndrome_Disorder | 0.8597 | | 2 | beta-coronavirus | 146 | 161 | Virus | 0.6381 | | 3 | 2019 | 198 | 201 | Date | 0.8117 | | 4 | coronavirus infection | 203 | 223 | Disease_Syndrome_Disorder | 0.68335 | | 5 | SARS-CoV-2 | 227 | 236 | Virus | 0.9605 | | 6 | coronavirus | 243 | 253 | Virus | 0.9814 | | 7 | β-coronaviruses | 284 | 298 | Virus | 0.9564 | | 8 | subgenus Coronaviridae | 307 | 328 | Virus | 0.71465 | | 9 | SARS-CoV-2 | 336 | 345 | Virus | 0.9442 | | 10 | zoonotic coronavirus disease | 366 | 393 | Disease_Syndrome_Disorder | 0.922833 | | 11 | severe acute respiratory syndrome | 401 | 433 | Disease_Syndrome_Disorder | 0.959725 | | 12 | SARS | 437 | 440 | Disease_Syndrome_Disorder | 0.9959 | | 13 | Middle Eastern respiratory syndrome | 448 | 482 | Disease_Syndrome_Disorder | 0.9673 | | 14 | MERS | 486 | 489 | Disease_Syndrome_Disorder | 0.9759 | | 15 | SARS-CoV-2 | 511 | 520 | Virus | 0.9027 | | 16 | WHO | 541 | 543 | Institution | 0.9917 | | 17 | CDC | 547 | 549 | Institution | 0.8296 | | 18 | 2020 | 848 | 851 | Date | 0.9997 | | 19 | COVID‑19 vaccine | 864 | 879 | Vaccine_Name | 0.87505 | Model Information Model Name: ner_covid_trials_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Pipeline to Detect PHI for Generic Deidentification in Romanian (BERT)</title><link href="/2023/03/09/ner_deid_generic_bert_pipeline_ro.html" rel="alternate" type="text/html" title="Pipeline to Detect PHI for Generic Deidentification in Romanian (BERT)" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_deid_generic_bert_pipeline_ro</id><content type="html" xml:base="/2023/03/09/ner_deid_generic_bert_pipeline_ro.html">## Description

This pretrained pipeline is built on the top of [ner_deid_generic_bert](https://nlp.johnsnowlabs.com/2022/11/22/ner_deid_generic_bert_ro.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_deid_generic_bert_pipeline_ro_4.3.0_3.2_1678352946195.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_deid_generic_bert_pipeline_ro_4.3.0_3.2_1678352946195.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_deid_generic_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;)

text = '''Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România
Tel: +40(235)413773
Data setului de analize: 25 May 2022 15:36:00
Nume si Prenume : BUREAN MARIA, Varsta: 77
Medic : Agota Evelyn Tımar
C.N.P : 2450502264401'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_deid_generic_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;)

val text = &quot;Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România
Tel: +40(235)413773
Data setului de analize: 25 May 2022 15:36:00
Nume si Prenume : BUREAN MARIA, Varsta: 77
Medic : Agota Evelyn Tımar
C.N.P : 2450502264401&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks                   |   begin |   end | ner_label   |   confidence |
|---:|:-----------------------------|--------:|------:|:------------|-------------:|
|  0 | Spitalul Pentru Ochi de Deal |       0 |    27 | LOCATION    |     0.99352  |
|  1 | Drumul Oprea Nr. 972         |      30 |    49 | LOCATION    |     0.99994  |
|  2 | Vaslui                       |      51 |    56 | LOCATION    |     1        |
|  3 | 737405                       |      59 |    64 | LOCATION    |     1        |
|  4 | +40(235)413773               |      79 |    92 | CONTACT     |     1        |
|  5 | 25 May 2022                  |     119 |   129 | DATE        |     1        |
|  6 | si                           |     145 |   146 | NAME        |     0.9998   |
|  7 | BUREAN MARIA                 |     158 |   169 | NAME        |     0.9993   |
|  8 | 77                           |     180 |   181 | AGE         |     1        |
|  9 | Agota Evelyn Tımar           |     191 |   210 | NAME        |     0.859975 |
|    | C                            |         |       |             |              |
| 10 | 2450502264401                |     218 |   230 | ID          |     1        |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_deid_generic_bert_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|ro|
|Size:|483.8 MB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- BertEmbeddings
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="ro" /><category term="deidentification" /><category term="phi" /><category term="generic" /><category term="bert" /><summary type="html">Description This pretrained pipeline is built on the top of ner_deid_generic_bert model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_deid_generic_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;) text = '''Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România Tel: +40(235)413773 Data setului de analize: 25 May 2022 15:36:00 Nume si Prenume : BUREAN MARIA, Varsta: 77 Medic : Agota Evelyn Tımar C.N.P : 2450502264401''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_deid_generic_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;) val text = &quot;Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România Tel: +40(235)413773 Data setului de analize: 25 May 2022 15:36:00 Nume si Prenume : BUREAN MARIA, Varsta: 77 Medic : Agota Evelyn Tımar C.N.P : 2450502264401&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:-----------------------------|--------:|------:|:------------|-------------:| | 0 | Spitalul Pentru Ochi de Deal | 0 | 27 | LOCATION | 0.99352 | | 1 | Drumul Oprea Nr. 972 | 30 | 49 | LOCATION | 0.99994 | | 2 | Vaslui | 51 | 56 | LOCATION | 1 | | 3 | 737405 | 59 | 64 | LOCATION | 1 | | 4 | +40(235)413773 | 79 | 92 | CONTACT | 1 | | 5 | 25 May 2022 | 119 | 129 | DATE | 1 | | 6 | si | 145 | 146 | NAME | 0.9998 | | 7 | BUREAN MARIA | 158 | 169 | NAME | 0.9993 | | 8 | 77 | 180 | 181 | AGE | 1 | | 9 | Agota Evelyn Tımar | 191 | 210 | NAME | 0.859975 | | | C | | | | | | 10 | 2450502264401 | 218 | 230 | ID | 1 | Model Information Model Name: ner_deid_generic_bert_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: ro Size: 483.8 MB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel BertEmbeddings MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Pipeline to Detect Clinical Entities (ner_jsl)</title><link href="/2023/03/09/ner_jsl_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Detect Clinical Entities (ner_jsl)" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_jsl_pipeline_en</id><content type="html" xml:base="/2023/03/09/ner_jsl_pipeline_en.html">## Description

This pretrained pipeline is built on the top of [ner_jsl](https://nlp.johnsnowlabs.com/2022/10/19/ner_jsl_en.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_jsl_pipeline_en_4.3.0_3.2_1678353833465.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_jsl_pipeline_en_4.3.0_3.2_1678353833465.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_jsl_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = '''The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_jsl_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot;The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks                                |   begin |   end | ner_label                    |   confidence |
|---:|:------------------------------------------|--------:|------:|:-----------------------------|-------------:|
|  0 | 21-day-old                                |      17 |    26 | Age                          |     0.997    |
|  1 | Caucasian                                 |      28 |    36 | Race_Ethnicity               |     0.9995   |
|  2 | male                                      |      38 |    41 | Gender                       |     0.9998   |
|  3 | 2 days                                    |      52 |    57 | Duration                     |     0.805    |
|  4 | congestion                                |      62 |    71 | Symptom                      |     0.9049   |
|  5 | mom                                       |      75 |    77 | Gender                       |     0.9907   |
|  6 | suctioning yellow discharge               |      88 |   114 | Symptom                      |     0.268133 |
|  7 | nares                                     |     135 |   139 | External_body_part_or_region |     0.7284   |
|  8 | she                                       |     147 |   149 | Gender                       |     0.9978   |
|  9 | mild                                      |     168 |   171 | Modifier                     |     0.7517   |
| 10 | problems with his breathing while feeding |     173 |   213 | Symptom                      |     0.664583 |
| 11 | perioral cyanosis                         |     237 |   253 | Symptom                      |     0.6869   |
| 12 | retractions                               |     258 |   268 | Symptom                      |     0.9912   |
| 13 | Influenza vaccine                         |     325 |   341 | Vaccine_Name                 |     0.833    |
| 14 | One day ago                               |     344 |   354 | RelativeDate                 |     0.8667   |
| 15 | mom                                       |     357 |   359 | Gender                       |     0.9991   |
| 16 | tactile temperature                       |     376 |   394 | Symptom                      |     0.3339   |
| 17 | Tylenol                                   |     417 |   423 | Drug_BrandName               |     0.9988   |
| 18 | Baby                                      |     426 |   429 | Age                          |     0.9634   |
| 19 | decreased p.o                             |     449 |   461 | Symptom                      |     0.75925  |
| 20 | His                                       |     472 |   474 | Gender                       |     0.9998   |
| 21 | 20 minutes                                |     511 |   520 | Duration                     |     0.48575  |
| 22 | 5 to 10 minutes                           |     531 |   545 | Duration                     |     0.526575 |
| 23 | his                                       |     560 |   562 | Gender                       |     0.988    |
| 24 | respiratory congestion                    |     564 |   585 | Symptom                      |     0.6168   |
| 25 | He                                        |     588 |   589 | Gender                       |     0.9992   |
| 26 | tired                                     |     622 |   626 | Symptom                      |     0.8745   |
| 27 | fussy                                     |     641 |   645 | Symptom                      |     0.8509   |
| 28 | over the past 2 days                      |     647 |   666 | RelativeDate                 |     0.60494  |
| 29 | albuterol                                 |     709 |   717 | Drug_Ingredient              |     0.9876   |
| 30 | ER                                        |     743 |   744 | Clinical_Dept                |     0.9974   |
| 31 | His                                       |     747 |   749 | Gender                       |     0.9996   |
| 32 | urine output has also decreased           |     751 |   781 | Symptom                      |     0.39878  |
| 33 | he                                        |     793 |   794 | Gender                       |     0.997    |
| 34 | per 24 hours                              |     832 |   843 | Frequency                    |     0.462333 |
| 35 | he                                        |     850 |   851 | Gender                       |     0.9983   |
| 36 | per 24 hours                              |     879 |   890 | Frequency                    |     0.562167 |
| 37 | Mom                                       |     893 |   895 | Gender                       |     0.9997   |
| 38 | diarrhea                                  |     908 |   915 | Symptom                      |     0.9956   |
| 39 | His                                       |     918 |   920 | Gender                       |     0.9997   |
| 40 | bowel                                     |     922 |   926 | Internal_organ_or_component  |     0.9218   |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_jsl_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="licensed" /><category term="en" /><category term="clinical" /><summary type="html">Description This pretrained pipeline is built on the top of ner_jsl model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_jsl_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = '''The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_jsl_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot;The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:------------------------------------------|--------:|------:|:-----------------------------|-------------:| | 0 | 21-day-old | 17 | 26 | Age | 0.997 | | 1 | Caucasian | 28 | 36 | Race_Ethnicity | 0.9995 | | 2 | male | 38 | 41 | Gender | 0.9998 | | 3 | 2 days | 52 | 57 | Duration | 0.805 | | 4 | congestion | 62 | 71 | Symptom | 0.9049 | | 5 | mom | 75 | 77 | Gender | 0.9907 | | 6 | suctioning yellow discharge | 88 | 114 | Symptom | 0.268133 | | 7 | nares | 135 | 139 | External_body_part_or_region | 0.7284 | | 8 | she | 147 | 149 | Gender | 0.9978 | | 9 | mild | 168 | 171 | Modifier | 0.7517 | | 10 | problems with his breathing while feeding | 173 | 213 | Symptom | 0.664583 | | 11 | perioral cyanosis | 237 | 253 | Symptom | 0.6869 | | 12 | retractions | 258 | 268 | Symptom | 0.9912 | | 13 | Influenza vaccine | 325 | 341 | Vaccine_Name | 0.833 | | 14 | One day ago | 344 | 354 | RelativeDate | 0.8667 | | 15 | mom | 357 | 359 | Gender | 0.9991 | | 16 | tactile temperature | 376 | 394 | Symptom | 0.3339 | | 17 | Tylenol | 417 | 423 | Drug_BrandName | 0.9988 | | 18 | Baby | 426 | 429 | Age | 0.9634 | | 19 | decreased p.o | 449 | 461 | Symptom | 0.75925 | | 20 | His | 472 | 474 | Gender | 0.9998 | | 21 | 20 minutes | 511 | 520 | Duration | 0.48575 | | 22 | 5 to 10 minutes | 531 | 545 | Duration | 0.526575 | | 23 | his | 560 | 562 | Gender | 0.988 | | 24 | respiratory congestion | 564 | 585 | Symptom | 0.6168 | | 25 | He | 588 | 589 | Gender | 0.9992 | | 26 | tired | 622 | 626 | Symptom | 0.8745 | | 27 | fussy | 641 | 645 | Symptom | 0.8509 | | 28 | over the past 2 days | 647 | 666 | RelativeDate | 0.60494 | | 29 | albuterol | 709 | 717 | Drug_Ingredient | 0.9876 | | 30 | ER | 743 | 744 | Clinical_Dept | 0.9974 | | 31 | His | 747 | 749 | Gender | 0.9996 | | 32 | urine output has also decreased | 751 | 781 | Symptom | 0.39878 | | 33 | he | 793 | 794 | Gender | 0.997 | | 34 | per 24 hours | 832 | 843 | Frequency | 0.462333 | | 35 | he | 850 | 851 | Gender | 0.9983 | | 36 | per 24 hours | 879 | 890 | Frequency | 0.562167 | | 37 | Mom | 893 | 895 | Gender | 0.9997 | | 38 | diarrhea | 908 | 915 | Symptom | 0.9956 | | 39 | His | 918 | 920 | Gender | 0.9997 | | 40 | bowel | 922 | 926 | Internal_organ_or_component | 0.9218 | Model Information Model Name: ner_jsl_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Pipeline to Extract Biomarkers and their Results</title><link href="/2023/03/09/ner_oncology_biomarker_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Extract Biomarkers and their Results" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_oncology_biomarker_pipeline_en</id><content type="html" xml:base="/2023/03/09/ner_oncology_biomarker_pipeline_en.html">## Description

This pretrained pipeline is built on the top of [ner_oncology_biomarker](https://nlp.johnsnowlabs.com/2022/11/24/ner_oncology_biomarker_en.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_oncology_biomarker_pipeline_en_4.3.0_3.2_1678345026649.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_oncology_biomarker_pipeline_en_4.3.0_3.2_1678345026649.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_oncology_biomarker_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = '''The results of immunohistochemical examination showed that she tested negative for CK7, synaptophysin (Syn), chromogranin A (CgA), Muc5AC, human epidermal growth factor receptor-2 (HER2), and Muc6; positive for CK20, Muc1, Muc2, E-cadherin, and p53; the Ki-67 index was about 87%.'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_oncology_biomarker_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot;The results of immunohistochemical examination showed that she tested negative for CK7, synaptophysin (Syn), chromogranin A (CgA), Muc5AC, human epidermal growth factor receptor-2 (HER2), and Muc6; positive for CK20, Muc1, Muc2, E-cadherin, and p53; the Ki-67 index was about 87%.&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks                               |   begin |   end | ner_label        |   confidence |
|---:|:-----------------------------------------|--------:|------:|:-----------------|-------------:|
|  0 | negative                                 |      70 |    77 | Biomarker_Result |      0.9984  |
|  1 | CK7                                      |      83 |    85 | Biomarker        |      1       |
|  2 | synaptophysin                            |      88 |   100 | Biomarker        |      0.9995  |
|  3 | Syn                                      |     103 |   105 | Biomarker        |      0.9979  |
|  4 | chromogranin A                           |     109 |   122 | Biomarker        |      0.9692  |
|  5 | CgA                                      |     125 |   127 | Biomarker        |      0.9994  |
|  6 | Muc5AC                                   |     131 |   136 | Biomarker        |      0.9987  |
|  7 | human epidermal growth factor receptor-2 |     139 |   178 | Biomarker        |      0.99876 |
|  8 | HER2                                     |     181 |   184 | Biomarker        |      1       |
|  9 | Muc6                                     |     192 |   195 | Biomarker        |      0.9999  |
| 10 | positive                                 |     198 |   205 | Biomarker_Result |      0.9987  |
| 11 | CK20                                     |     211 |   214 | Biomarker        |      1       |
| 12 | Muc1                                     |     217 |   220 | Biomarker        |      0.9999  |
| 13 | Muc2                                     |     223 |   226 | Biomarker        |      0.9999  |
| 14 | E-cadherin                               |     229 |   238 | Biomarker        |      0.9999  |
| 15 | p53                                      |     245 |   247 | Biomarker        |      1       |
| 16 | Ki-67 index                              |     254 |   264 | Biomarker        |      0.99465 |
| 17 | 87%                                      |     276 |   278 | Biomarker_Result |      0.9814  |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_oncology_biomarker_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="en" /><category term="ner" /><category term="oncology" /><category term="biomarker" /><summary type="html">Description This pretrained pipeline is built on the top of ner_oncology_biomarker model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_oncology_biomarker_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = '''The results of immunohistochemical examination showed that she tested negative for CK7, synaptophysin (Syn), chromogranin A (CgA), Muc5AC, human epidermal growth factor receptor-2 (HER2), and Muc6; positive for CK20, Muc1, Muc2, E-cadherin, and p53; the Ki-67 index was about 87%.''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_oncology_biomarker_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot;The results of immunohistochemical examination showed that she tested negative for CK7, synaptophysin (Syn), chromogranin A (CgA), Muc5AC, human epidermal growth factor receptor-2 (HER2), and Muc6; positive for CK20, Muc1, Muc2, E-cadherin, and p53; the Ki-67 index was about 87%.&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:-----------------------------------------|--------:|------:|:-----------------|-------------:| | 0 | negative | 70 | 77 | Biomarker_Result | 0.9984 | | 1 | CK7 | 83 | 85 | Biomarker | 1 | | 2 | synaptophysin | 88 | 100 | Biomarker | 0.9995 | | 3 | Syn | 103 | 105 | Biomarker | 0.9979 | | 4 | chromogranin A | 109 | 122 | Biomarker | 0.9692 | | 5 | CgA | 125 | 127 | Biomarker | 0.9994 | | 6 | Muc5AC | 131 | 136 | Biomarker | 0.9987 | | 7 | human epidermal growth factor receptor-2 | 139 | 178 | Biomarker | 0.99876 | | 8 | HER2 | 181 | 184 | Biomarker | 1 | | 9 | Muc6 | 192 | 195 | Biomarker | 0.9999 | | 10 | positive | 198 | 205 | Biomarker_Result | 0.9987 | | 11 | CK20 | 211 | 214 | Biomarker | 1 | | 12 | Muc1 | 217 | 220 | Biomarker | 0.9999 | | 13 | Muc2 | 223 | 226 | Biomarker | 0.9999 | | 14 | E-cadherin | 229 | 238 | Biomarker | 0.9999 | | 15 | p53 | 245 | 247 | Biomarker | 1 | | 16 | Ki-67 index | 254 | 264 | Biomarker | 0.99465 | | 17 | 87% | 276 | 278 | Biomarker_Result | 0.9814 | Model Information Model Name: ner_oncology_biomarker_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel</summary></entry></feed>