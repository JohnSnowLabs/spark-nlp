<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-01-18T22:07:30+00:00</updated><id>/feed.xml</id><title type="html">Spark NLP</title><subtitle>High Performance NLP with Apache Spark
</subtitle><author><name>{&quot;type&quot;=&gt;nil, &quot;name&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;googleplus&quot;=&gt;nil, &quot;telegram&quot;=&gt;nil, &quot;medium&quot;=&gt;nil, &quot;zhihu&quot;=&gt;nil, &quot;douban&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;npm&quot;=&gt;nil}</name></author><entry><title type="html">MPNet Sequence Classification - UKR Message Classifier</title><link href="/2024/01/10/mpnet_sequence_classifier_ukr_message_en.html" rel="alternate" type="text/html" title="MPNet Sequence Classification - UKR Message Classifier" /><published>2024-01-10T00:00:00+00:00</published><updated>2024-01-10T00:00:00+00:00</updated><id>/2024/01/10/mpnet_sequence_classifier_ukr_message_en</id><content type="html" xml:base="/2024/01/10/mpnet_sequence_classifier_ukr_message_en.html">## Description

MPNet Sequence Classification imported from huggingface. 

Originally a SetFit model, reference: https://huggingface.co/rodekruis/sml-ukr-message-classifier

## Predicted Entities

`ANOMALY`, `ARMY`, `CHILDREN`, `CONNECTIVITY`, `CONNECTWITHREDCROSS`, `EDUCATION`, `FOOD`, `GOODSSERVICES`, `HEALTH`, `INCLUSIONCVA`, `LEGAL`, `MONEY/BANKING`, `NFINONFOODITEMS`, `OTHERPROGRAMSOTHERNGOS`, `PARCEL`, `PAYMENTCVA`, `PETS`, `PMER/NEWPROGRAMOPERTUNITIES`, `PROGRAMINFO`, `PROGRAMINFORMATION`, `PSSRFL`, `REGISTRATIONCVA`, `SENTIMENT/FEEDBACK`, `SHELTER`, `TRANSLATION/LANGUAGE`, `TRANSPORT/CAR`, `TRANSPORT/MOVEMENT`, `WASH`, `WORK/JOBS`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/mpnet_sequence_classifier_ukr_message_en_5.2.3_3.0_1704907644396.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/mpnet_sequence_classifier_ukr_message_en_5.2.3_3.0_1704907644396.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
import sparknlp
from sparknlp.base import *
from sparknlp.annotator import *
from pyspark.ml import Pipeline
document = DocumentAssembler() \
    .setInputCol(&quot;text&quot;) \
    .setOutputCol(&quot;document&quot;)
tokenizer = Tokenizer() \
    .setInputCols([&quot;document&quot;]) \
    .setOutputCol(&quot;token&quot;)
sequenceClassifier = MPNetForSequenceClassification \
    .pretrained() \
    .setInputCols([&quot;document&quot;, &quot;token&quot;]) \
    .setOutputCol(&quot;label&quot;)
data = spark.createDataFrame([
    [&quot;I love driving my car.&quot;],
    [&quot;The next bus will arrive in 20 minutes.&quot;],
    [&quot;pineapple on pizza is the worst ðŸ¤®&quot;],
]).toDF(&quot;text&quot;)
pipeline = Pipeline().setStages([document, tokenizer, sequenceClassifier])
pipelineModel = pipeline.fit(data)
results = pipelineModel.transform(data)
results.select(&quot;label.result&quot;).show()
```
```scala
import com.johnsnowlabs.nlp.base._
import com.johnsnowlabs.nlp.annotator._
import org.apache.spark.ml.Pipeline
import spark.implicits._

val document = new DocumentAssembler()
  .setInputCol(&quot;text&quot;)
  .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
  .setInputCols(Array(&quot;document&quot;))
  .setOutputCol(&quot;token&quot;)

val modelPath = &quot;onnx_exported/rodekruis/sml-ukr-message-classifier&quot;

val sequenceClassifier = MPNetForSequenceClassification
  .loadSavedModel(modelPath, spark)
//        .pretrained()
  .setInputCols(Array(&quot;document&quot;, &quot;token&quot;))
  .setOutputCol(&quot;label&quot;)

val texts: Seq[String] = Seq(
  &quot;I love driving my car.&quot;,
  &quot;The next bus will arrive in 20 minutes.&quot;,
  &quot;pineapple on pizza is the worst ðŸ¤®&quot;)
val data = texts.toDF(&quot;text&quot;)

val pipeline = new Pipeline().setStages(Array(document, tokenizer, sequenceClassifier))
val pipelineModel = pipeline.fit(data)
val results = pipelineModel.transform(data)

results.select(&quot;label.result&quot;).show()
```
&lt;/div&gt;

## Results

```bash
+--------------------+
|              result|
+--------------------+
|     [TRANSPORT/CAR]|
|[TRANSPORT/MOVEMENT]|
|              [FOOD]|
+--------------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|mpnet_sequence_classifier_ukr_message|
|Compatibility:|Spark NLP 5.2.3+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[document, token]|
|Output Labels:|[label]|
|Language:|en|
|Size:|403.5 MB|</content><author><name>John Snow Labs</name></author><category term="en" /><category term="mpnet" /><category term="sequence" /><category term="classification" /><category term="open_source" /><category term="onnx" /><summary type="html">Description MPNet Sequence Classification imported from huggingface. Originally a SetFit model, reference: https://huggingface.co/rodekruis/sml-ukr-message-classifier Predicted Entities ANOMALY, ARMY, CHILDREN, CONNECTIVITY, CONNECTWITHREDCROSS, EDUCATION, FOOD, GOODSSERVICES, HEALTH, INCLUSIONCVA, LEGAL, MONEY/BANKING, NFINONFOODITEMS, OTHERPROGRAMSOTHERNGOS, PARCEL, PAYMENTCVA, PETS, PMER/NEWPROGRAMOPERTUNITIES, PROGRAMINFO, PROGRAMINFORMATION, PSSRFL, REGISTRATIONCVA, SENTIMENT/FEEDBACK, SHELTER, TRANSLATION/LANGUAGE, TRANSPORT/CAR, TRANSPORT/MOVEMENT, WASH, WORK/JOBS Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU import sparknlp from sparknlp.base import * from sparknlp.annotator import * from pyspark.ml import Pipeline document = DocumentAssembler() \ .setInputCol(&quot;text&quot;) \ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer() \ .setInputCols([&quot;document&quot;]) \ .setOutputCol(&quot;token&quot;) sequenceClassifier = MPNetForSequenceClassification \ .pretrained() \ .setInputCols([&quot;document&quot;, &quot;token&quot;]) \ .setOutputCol(&quot;label&quot;) data = spark.createDataFrame([ [&quot;I love driving my car.&quot;], [&quot;The next bus will arrive in 20 minutes.&quot;], [&quot;pineapple on pizza is the worst ðŸ¤®&quot;], ]).toDF(&quot;text&quot;) pipeline = Pipeline().setStages([document, tokenizer, sequenceClassifier]) pipelineModel = pipeline.fit(data) results = pipelineModel.transform(data) results.select(&quot;label.result&quot;).show() import com.johnsnowlabs.nlp.base._ import com.johnsnowlabs.nlp.annotator._ import org.apache.spark.ml.Pipeline import spark.implicits._ val document = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(Array(&quot;document&quot;)) .setOutputCol(&quot;token&quot;) val modelPath = &quot;onnx_exported/rodekruis/sml-ukr-message-classifier&quot; val sequenceClassifier = MPNetForSequenceClassification .loadSavedModel(modelPath, spark) // .pretrained() .setInputCols(Array(&quot;document&quot;, &quot;token&quot;)) .setOutputCol(&quot;label&quot;) val texts: Seq[String] = Seq( &quot;I love driving my car.&quot;, &quot;The next bus will arrive in 20 minutes.&quot;, &quot;pineapple on pizza is the worst ðŸ¤®&quot;) val data = texts.toDF(&quot;text&quot;) val pipeline = new Pipeline().setStages(Array(document, tokenizer, sequenceClassifier)) val pipelineModel = pipeline.fit(data) val results = pipelineModel.transform(data) results.select(&quot;label.result&quot;).show() Results +--------------------+ | result| +--------------------+ | [TRANSPORT/CAR]| |[TRANSPORT/MOVEMENT]| | [FOOD]| +--------------------+ Model Information Model Name: mpnet_sequence_classifier_ukr_message Compatibility: Spark NLP 5.2.3+ License: Open Source Edition: Official Input Labels: [document, token] Output Labels: [label] Language: en Size: 403.5 MB</summary></entry><entry><title type="html">English 10_epochs_features_model_w_designs DistilBertForSequenceClassification from mi-rei</title><link href="/2024/01/02/10_epochs_features_model_w_designs_en.html" rel="alternate" type="text/html" title="English 10_epochs_features_model_w_designs DistilBertForSequenceClassification from mi-rei" /><published>2024-01-02T00:00:00+00:00</published><updated>2024-01-02T00:00:00+00:00</updated><id>/2024/01/02/10_epochs_features_model_w_designs_en</id><content type="html" xml:base="/2024/01/02/10_epochs_features_model_w_designs_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`10_epochs_features_model_w_designs` is a English model originally trained by mi-rei.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/10_epochs_features_model_w_designs_en_5.2.2_3.0_1704173528012.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/10_epochs_features_model_w_designs_en_5.2.2_3.0_1704173528012.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;10_epochs_features_model_w_designs&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;10_epochs_features_model_w_designs&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|10_epochs_features_model_w_designs|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.5 MB|

## References

https://huggingface.co/mi-rei/10_epochs_features_model_w_designs</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.10_epochs_features_model_w_designs is a English model originally trained by mi-rei. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;10_epochs_features_model_w_designs&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;10_epochs_features_model_w_designs&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: 10_epochs_features_model_w_designs Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.5 MB References https://huggingface.co/mi-rei/10_epochs_features_model_w_designs</summary></entry><entry><title type="html">English ad_distilbert100 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/02/ad_distilbert100_en.html" rel="alternate" type="text/html" title="English ad_distilbert100 DistilBertForSequenceClassification from tombellens" /><published>2024-01-02T00:00:00+00:00</published><updated>2024-01-02T00:00:00+00:00</updated><id>/2024/01/02/ad_distilbert100_en</id><content type="html" xml:base="/2024/01/02/ad_distilbert100_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert100` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert100_en_5.2.2_3.0_1704177135263.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert100_en_5.2.2_3.0_1704177135263.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert100&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert100&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert100|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert100</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert100 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert100&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert100&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert100 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert100</summary></entry><entry><title type="html">English ad_distilbert105 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/02/ad_distilbert105_en.html" rel="alternate" type="text/html" title="English ad_distilbert105 DistilBertForSequenceClassification from tombellens" /><published>2024-01-02T00:00:00+00:00</published><updated>2024-01-02T00:00:00+00:00</updated><id>/2024/01/02/ad_distilbert105_en</id><content type="html" xml:base="/2024/01/02/ad_distilbert105_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert105` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert105_en_5.2.3_3.0_1704217138196.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert105_en_5.2.3_3.0_1704217138196.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert105&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert105&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert105|
|Compatibility:|Spark NLP 5.2.3+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert105</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert105 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert105&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert105&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert105 Compatibility: Spark NLP 5.2.3+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert105</summary></entry><entry><title type="html">English ad_distilbert110 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/02/ad_distilbert110_en.html" rel="alternate" type="text/html" title="English ad_distilbert110 DistilBertForSequenceClassification from tombellens" /><published>2024-01-02T00:00:00+00:00</published><updated>2024-01-02T00:00:00+00:00</updated><id>/2024/01/02/ad_distilbert110_en</id><content type="html" xml:base="/2024/01/02/ad_distilbert110_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert110` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert110_en_5.2.2_3.0_1704170942905.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert110_en_5.2.2_3.0_1704170942905.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert110&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert110&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert110|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.5 MB|

## References

https://huggingface.co/tombellens/AD-distilBert110</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert110 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert110&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert110&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert110 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.5 MB References https://huggingface.co/tombellens/AD-distilBert110</summary></entry><entry><title type="html">English ad_distilbert114 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/02/ad_distilbert114_en.html" rel="alternate" type="text/html" title="English ad_distilbert114 DistilBertForSequenceClassification from tombellens" /><published>2024-01-02T00:00:00+00:00</published><updated>2024-01-02T00:00:00+00:00</updated><id>/2024/01/02/ad_distilbert114_en</id><content type="html" xml:base="/2024/01/02/ad_distilbert114_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert114` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert114_en_5.2.3_3.0_1704218977063.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert114_en_5.2.3_3.0_1704218977063.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert114&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert114&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert114|
|Compatibility:|Spark NLP 5.2.3+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.5 MB|

## References

https://huggingface.co/tombellens/AD-distilBert114</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert114 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert114&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert114&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert114 Compatibility: Spark NLP 5.2.3+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.5 MB References https://huggingface.co/tombellens/AD-distilBert114</summary></entry><entry><title type="html">English ad_distilbert200 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/02/ad_distilbert200_en.html" rel="alternate" type="text/html" title="English ad_distilbert200 DistilBertForSequenceClassification from tombellens" /><published>2024-01-02T00:00:00+00:00</published><updated>2024-01-02T00:00:00+00:00</updated><id>/2024/01/02/ad_distilbert200_en</id><content type="html" xml:base="/2024/01/02/ad_distilbert200_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert200` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert200_en_5.2.2_3.0_1704174904688.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert200_en_5.2.2_3.0_1704174904688.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert200&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert200&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert200|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert200</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert200 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert200&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert200&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert200 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert200</summary></entry><entry><title type="html">English ad_distilbert201 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/02/ad_distilbert201_en.html" rel="alternate" type="text/html" title="English ad_distilbert201 DistilBertForSequenceClassification from tombellens" /><published>2024-01-02T00:00:00+00:00</published><updated>2024-01-02T00:00:00+00:00</updated><id>/2024/01/02/ad_distilbert201_en</id><content type="html" xml:base="/2024/01/02/ad_distilbert201_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert201` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert201_en_5.2.2_3.0_1704168377922.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert201_en_5.2.2_3.0_1704168377922.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert201&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert201&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert201|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert201</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert201 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert201&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert201&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert201 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert201</summary></entry><entry><title type="html">English ad_distilbert202 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/02/ad_distilbert202_en.html" rel="alternate" type="text/html" title="English ad_distilbert202 DistilBertForSequenceClassification from tombellens" /><published>2024-01-02T00:00:00+00:00</published><updated>2024-01-02T00:00:00+00:00</updated><id>/2024/01/02/ad_distilbert202_en</id><content type="html" xml:base="/2024/01/02/ad_distilbert202_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert202` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert202_en_5.2.3_3.0_1704218956161.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert202_en_5.2.3_3.0_1704218956161.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert202&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert202&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert202|
|Compatibility:|Spark NLP 5.2.3+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert202</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert202 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert202&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert202&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert202 Compatibility: Spark NLP 5.2.3+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert202</summary></entry><entry><title type="html">English ad_distilbert203 DistilBertForSequenceClassification from tombellens</title><link href="/2024/01/02/ad_distilbert203_en.html" rel="alternate" type="text/html" title="English ad_distilbert203 DistilBertForSequenceClassification from tombellens" /><published>2024-01-02T00:00:00+00:00</published><updated>2024-01-02T00:00:00+00:00</updated><id>/2024/01/02/ad_distilbert203_en</id><content type="html" xml:base="/2024/01/02/ad_distilbert203_en.html">## Description

Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`ad_distilbert203` is a English model originally trained by tombellens.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/ad_distilbert203_en_5.2.2_3.0_1704155844613.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/ad_distilbert203_en_5.2.2_3.0_1704155844613.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert203&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert203&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ad_distilbert203|
|Compatibility:|Spark NLP 5.2.2+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|249.4 MB|

## References

https://huggingface.co/tombellens/AD-distilBert203</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained DistilBertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.ad_distilbert203 is a English model originally trained by tombellens. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert203&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = DistilBertForSequenceClassification.pretrained(&quot;ad_distilbert203&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: ad_distilbert203 Compatibility: Spark NLP 5.2.2+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 249.4 MB References https://huggingface.co/tombellens/AD-distilBert203</summary></entry></feed>