<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-03-09T16:32:17+00:00</updated><id>/feed.xml</id><title type="html">Spark NLP</title><subtitle>High Performance NLP with Apache Spark
</subtitle><author><name>{&quot;type&quot;=&gt;nil, &quot;name&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;googleplus&quot;=&gt;nil, &quot;telegram&quot;=&gt;nil, &quot;medium&quot;=&gt;nil, &quot;zhihu&quot;=&gt;nil, &quot;douban&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;npm&quot;=&gt;nil}</name></author><entry><title type="html">Medical Question Answering (biogpt)</title><link href="/2023/03/09/medical_qa_biogpt_en.html" rel="alternate" type="text/html" title="Medical Question Answering (biogpt)" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/medical_qa_biogpt_en</id><content type="html" xml:base="/2023/03/09/medical_qa_biogpt_en.html">## Description

This model has been trained with medical documents and can generate two types of answers, short and long.
Types of questions are supported: `&quot;short&quot;` (producing yes/no/maybe) answers and `&quot;full&quot;` (long answers).

## Predicted Entities



{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/medical_qa_biogpt_en_4.3.1_3.0_1678355315206.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/medical_qa_biogpt_en_4.3.1_3.0_1678355315206.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
document_assembler = MultiDocumentAssembler()\
    .setInputCols(&quot;question&quot;, &quot;context&quot;)\
    .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;)

med_qa = sparknlp_jsl.annotators.MedicalQuestionAnswering\
    .pretrained(&quot;medical_qa_biogpt&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
    .setInputCols([&quot;document_question&quot;, &quot;document_context&quot;])\
    .setOutputCol(&quot;answer&quot;)\
    .setMaxNewTokens(30)\
    .setTopK(1)\
    .setQuestionType(&quot;long&quot;) # &quot;short&quot;

pipeline = Pipeline(stages=[document_assembler, med_qa])

paper_abstract = &quot;The visual indexing theory proposed by Zenon Pylyshyn (Cognition, 32, 65-97, 1989) predicts that visual attention mechanisms are employed when mental images are projected onto a visual scene.&quot;
long_question = &quot;What is the effect of directing attention on memory?&quot;
yes_no_question = &quot;Does directing attention improve memory for items?&quot;

data = spark.createDataFrame(
    [
        [long_question, paper_abstract, &quot;long&quot;],
        [yes_no_question, paper_abstract, &quot;short&quot;],
    ]
).toDF(&quot;question&quot;, &quot;context&quot;, &quot;question_type&quot;)

pipeline.fit(data).transform(data.where(&quot;question_type == 'long'&quot;))\
    .select(&quot;answer.result&quot;)\
    .show(truncate=False)

pipeline.fit(data).transform(data.where(&quot;question_type == 'short'&quot;))\
    .select(&quot;answer.result&quot;)\
    .show(truncate=False)
```
```scala
val document_assembler = new MultiDocumentAssembler()
    .setInputCols(&quot;question&quot;, &quot;context&quot;)
    .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;)

val med_qa = MedicalQuestionAnswering
    .pretrained(&quot;medical_qa_biogpt&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols((&quot;document_question&quot;, &quot;document_context&quot;))
    .setOutputCol(&quot;answer&quot;)
    .setMaxNewTokens(30)
    .setTopK(1)
    .setQuestionType(&quot;long&quot;) # &quot;short&quot;

val pipeline = new Pipeline().setStages(Array(document_assembler, med_qa))

paper_abstract = &quot;The visual indexing theory proposed by Zenon Pylyshyn (Cognition, 32, 65-97, 1989) predicts that visual attention mechanisms are employed when mental images are projected onto a visual scene.&quot;
long_question = &quot;What is the effect of directing attention on memory?&quot;
yes_no_question = &quot;Does directing attention improve memory for items?&quot;

val data = Seq( 
    (long_question, paper_abstract,&quot;long&quot; ),
    (yes_no_question, paper_abstract, &quot;short&quot;))
    .toDS.toDF(&quot;question&quot;, &quot;context&quot;, &quot;question_type&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|result                                                                                                                                                                        |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|[the present study investigated whether directing spatial attention to one location in a visual array would enhance memory for the array features. participants memorized two]|
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|medical_qa_biogpt|
|Compatibility:|Healthcare NLP 4.3.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.1 GB|
|Case sensitive:|true|</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="en" /><category term="gpt" /><category term="biogpt" /><category term="pubmed" /><category term="question_answering" /><category term="tensorflow" /><summary type="html">Description This model has been trained with medical documents and can generate two types of answers, short and long. Types of questions are supported: &quot;short&quot; (producing yes/no/maybe) answers and &quot;full&quot; (long answers). Predicted Entities Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = MultiDocumentAssembler()\ .setInputCols(&quot;question&quot;, &quot;context&quot;)\ .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;) med_qa = sparknlp_jsl.annotators.MedicalQuestionAnswering\ .pretrained(&quot;medical_qa_biogpt&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document_question&quot;, &quot;document_context&quot;])\ .setOutputCol(&quot;answer&quot;)\ .setMaxNewTokens(30)\ .setTopK(1)\ .setQuestionType(&quot;long&quot;) # &quot;short&quot; pipeline = Pipeline(stages=[document_assembler, med_qa]) paper_abstract = &quot;The visual indexing theory proposed by Zenon Pylyshyn (Cognition, 32, 65-97, 1989) predicts that visual attention mechanisms are employed when mental images are projected onto a visual scene.&quot; long_question = &quot;What is the effect of directing attention on memory?&quot; yes_no_question = &quot;Does directing attention improve memory for items?&quot; data = spark.createDataFrame( [ [long_question, paper_abstract, &quot;long&quot;], [yes_no_question, paper_abstract, &quot;short&quot;], ] ).toDF(&quot;question&quot;, &quot;context&quot;, &quot;question_type&quot;) pipeline.fit(data).transform(data.where(&quot;question_type == 'long'&quot;))\ .select(&quot;answer.result&quot;)\ .show(truncate=False) pipeline.fit(data).transform(data.where(&quot;question_type == 'short'&quot;))\ .select(&quot;answer.result&quot;)\ .show(truncate=False) val document_assembler = new MultiDocumentAssembler() .setInputCols(&quot;question&quot;, &quot;context&quot;) .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;) val med_qa = MedicalQuestionAnswering .pretrained(&quot;medical_qa_biogpt&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols((&quot;document_question&quot;, &quot;document_context&quot;)) .setOutputCol(&quot;answer&quot;) .setMaxNewTokens(30) .setTopK(1) .setQuestionType(&quot;long&quot;) # &quot;short&quot; val pipeline = new Pipeline().setStages(Array(document_assembler, med_qa)) paper_abstract = &quot;The visual indexing theory proposed by Zenon Pylyshyn (Cognition, 32, 65-97, 1989) predicts that visual attention mechanisms are employed when mental images are projected onto a visual scene.&quot; long_question = &quot;What is the effect of directing attention on memory?&quot; yes_no_question = &quot;Does directing attention improve memory for items?&quot; val data = Seq( (long_question, paper_abstract,&quot;long&quot; ), (yes_no_question, paper_abstract, &quot;short&quot;)) .toDS.toDF(&quot;question&quot;, &quot;context&quot;, &quot;question_type&quot;) val result = pipeline.fit(data).transform(data) Results +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ |result | +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ |[the present study investigated whether directing spatial attention to one location in a visual array would enhance memory for the array features. participants memorized two]| +------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ Model Information Model Name: medical_qa_biogpt Compatibility: Healthcare NLP 4.3.1+ License: Licensed Edition: Official Language: en Size: 1.1 GB Case sensitive: true</summary></entry><entry><title type="html">Pipeline to Detect Clinical Entities in Romanian (Bert, Base, Cased)</title><link href="/2023/03/09/ner_clinical_bert_pipeline_ro.html" rel="alternate" type="text/html" title="Pipeline to Detect Clinical Entities in Romanian (Bert, Base, Cased)" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_clinical_bert_pipeline_ro</id><content type="html" xml:base="/2023/03/09/ner_clinical_bert_pipeline_ro.html">## Description

This pretrained pipeline is built on the top of [ner_clinical_bert](https://nlp.johnsnowlabs.com/2022/11/22/ner_clinical_bert_ro.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_clinical_bert_pipeline_ro_4.3.0_3.2_1678352766945.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_clinical_bert_pipeline_ro_4.3.0_3.2_1678352766945.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_clinical_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;)

text = '''Solicitare: Angio CT cardio-toracic Dg. de trimitere Atrezie de valva pulmonara. Hipoplazie VS. Atrezie VAV stang. Anastomoza Glenn. Sp. Tromboza la nivelul anastomozei. Trimis de: Sectia Clinica Cardiologie (dr. Sue T.) Procedura Aparat GE Revolution HD. Branula albastra montata la nivelul membrului superior drept. Scout. Se administreaza 30 ml Iomeron 350 cu flux 2.2 ml/s, urmate de 20 ml ser fiziologic cu acelasi flux. Se efectueaza o examinare angio-CT cardiotoracica cu achizitii secventiale prospective la o frecventa cardiaca medie de 100/min.'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_clinical_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;)

val text = &quot;Solicitare: Angio CT cardio-toracic Dg. de trimitere Atrezie de valva pulmonara. Hipoplazie VS. Atrezie VAV stang. Anastomoza Glenn. Sp. Tromboza la nivelul anastomozei. Trimis de: Sectia Clinica Cardiologie (dr. Sue T.) Procedura Aparat GE Revolution HD. Branula albastra montata la nivelul membrului superior drept. Scout. Se administreaza 30 ml Iomeron 350 cu flux 2.2 ml/s, urmate de 20 ml ser fiziologic cu acelasi flux. Se efectueaza o examinare angio-CT cardiotoracica cu achizitii secventiale prospective la o frecventa cardiaca medie de 100/min.&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks                        |   begin |   end | ner_label                 |   confidence |
|---:|:----------------------------------|--------:|------:|:--------------------------|-------------:|
|  0 | Angio CT                          |      12 |    19 | Imaging_Test              |     0.96415  |
|  1 | cardio-toracic                    |      21 |    34 | Body_Part                 |     0.4776   |
|  2 | Atrezie                           |      53 |    59 | Disease_Syndrome_Disorder |     0.9602   |
|  3 | valva pulmonara                   |      64 |    78 | Body_Part                 |     0.73105  |
|  4 | Hipoplazie                        |      81 |    90 | Disease_Syndrome_Disorder |     0.628    |
|  5 | VS                                |      92 |    93 | Body_Part                 |     0.9543   |
|  6 | Atrezie                           |      96 |   102 | Disease_Syndrome_Disorder |     0.8763   |
|  7 | VAV stang                         |     104 |   112 | Body_Part                 |     0.9444   |
|  8 | Anastomoza Glenn                  |     115 |   130 | Disease_Syndrome_Disorder |     0.8648   |
|  9 | Tromboza                          |     137 |   144 | Disease_Syndrome_Disorder |     0.991    |
| 10 | GE Revolution HD                  |     238 |   253 | Medical_Device            |     0.668367 |
| 11 | Branula albastra                  |     256 |   271 | Medical_Device            |     0.9179   |
| 12 | membrului superior                |     292 |   309 | Body_Part                 |     0.98815  |
| 13 | drept                             |     311 |   315 | Direction                 |     0.5645   |
| 14 | Scout                             |     318 |   322 | Body_Part                 |     0.3484   |
| 15 | 30 ml                             |     342 |   346 | Dosage                    |     0.9996   |
| 16 | Iomeron 350                       |     348 |   358 | Drug_Ingredient           |     0.9822   |
| 17 | 2.2 ml/s                          |     368 |   375 | Dosage                    |     0.9327   |
| 18 | 20 ml                             |     388 |   392 | Dosage                    |     0.9977   |
| 19 | ser fiziologic                    |     394 |   407 | Drug_Ingredient           |     0.9609   |
| 20 | angio-CT                          |     452 |   459 | Imaging_Test              |     0.9965   |
| 21 | cardiotoracica                    |     461 |   474 | Body_Part                 |     0.9344   |
| 22 | achizitii secventiale prospective |     479 |   511 | Imaging_Technique         |     0.966833 |
| 23 | 100/min                           |     546 |   552 | Pulse                     |     0.9128   |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_clinical_bert_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|ro|
|Size:|483.6 MB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- BertEmbeddings
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="ro" /><category term="ner" /><category term="bert" /><summary type="html">Description This pretrained pipeline is built on the top of ner_clinical_bert model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_clinical_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;) text = '''Solicitare: Angio CT cardio-toracic Dg. de trimitere Atrezie de valva pulmonara. Hipoplazie VS. Atrezie VAV stang. Anastomoza Glenn. Sp. Tromboza la nivelul anastomozei. Trimis de: Sectia Clinica Cardiologie (dr. Sue T.) Procedura Aparat GE Revolution HD. Branula albastra montata la nivelul membrului superior drept. Scout. Se administreaza 30 ml Iomeron 350 cu flux 2.2 ml/s, urmate de 20 ml ser fiziologic cu acelasi flux. Se efectueaza o examinare angio-CT cardiotoracica cu achizitii secventiale prospective la o frecventa cardiaca medie de 100/min.''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_clinical_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;) val text = &quot;Solicitare: Angio CT cardio-toracic Dg. de trimitere Atrezie de valva pulmonara. Hipoplazie VS. Atrezie VAV stang. Anastomoza Glenn. Sp. Tromboza la nivelul anastomozei. Trimis de: Sectia Clinica Cardiologie (dr. Sue T.) Procedura Aparat GE Revolution HD. Branula albastra montata la nivelul membrului superior drept. Scout. Se administreaza 30 ml Iomeron 350 cu flux 2.2 ml/s, urmate de 20 ml ser fiziologic cu acelasi flux. Se efectueaza o examinare angio-CT cardiotoracica cu achizitii secventiale prospective la o frecventa cardiaca medie de 100/min.&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:----------------------------------|--------:|------:|:--------------------------|-------------:| | 0 | Angio CT | 12 | 19 | Imaging_Test | 0.96415 | | 1 | cardio-toracic | 21 | 34 | Body_Part | 0.4776 | | 2 | Atrezie | 53 | 59 | Disease_Syndrome_Disorder | 0.9602 | | 3 | valva pulmonara | 64 | 78 | Body_Part | 0.73105 | | 4 | Hipoplazie | 81 | 90 | Disease_Syndrome_Disorder | 0.628 | | 5 | VS | 92 | 93 | Body_Part | 0.9543 | | 6 | Atrezie | 96 | 102 | Disease_Syndrome_Disorder | 0.8763 | | 7 | VAV stang | 104 | 112 | Body_Part | 0.9444 | | 8 | Anastomoza Glenn | 115 | 130 | Disease_Syndrome_Disorder | 0.8648 | | 9 | Tromboza | 137 | 144 | Disease_Syndrome_Disorder | 0.991 | | 10 | GE Revolution HD | 238 | 253 | Medical_Device | 0.668367 | | 11 | Branula albastra | 256 | 271 | Medical_Device | 0.9179 | | 12 | membrului superior | 292 | 309 | Body_Part | 0.98815 | | 13 | drept | 311 | 315 | Direction | 0.5645 | | 14 | Scout | 318 | 322 | Body_Part | 0.3484 | | 15 | 30 ml | 342 | 346 | Dosage | 0.9996 | | 16 | Iomeron 350 | 348 | 358 | Drug_Ingredient | 0.9822 | | 17 | 2.2 ml/s | 368 | 375 | Dosage | 0.9327 | | 18 | 20 ml | 388 | 392 | Dosage | 0.9977 | | 19 | ser fiziologic | 394 | 407 | Drug_Ingredient | 0.9609 | | 20 | angio-CT | 452 | 459 | Imaging_Test | 0.9965 | | 21 | cardiotoracica | 461 | 474 | Body_Part | 0.9344 | | 22 | achizitii secventiale prospective | 479 | 511 | Imaging_Technique | 0.966833 | | 23 | 100/min | 546 | 552 | Pulse | 0.9128 | Model Information Model Name: ner_clinical_bert_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: ro Size: 483.6 MB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel BertEmbeddings MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Pipeline to Extract Entities in Covid Trials</title><link href="/2023/03/09/ner_covid_trials_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Extract Entities in Covid Trials" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_covid_trials_pipeline_en</id><content type="html" xml:base="/2023/03/09/ner_covid_trials_pipeline_en.html">## Description

This pretrained pipeline is built on the top of [ner_covid_trials](https://nlp.johnsnowlabs.com/2022/10/19/ner_covid_trials_en.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_covid_trials_pipeline_en_4.3.0_3.2_1678355313181.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_covid_trials_pipeline_en_4.3.0_3.2_1678355313181.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_covid_trials_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = '''In December 2019 , a group of patients with the acute respiratory disease was detected in Wuhan , Hubei Province of China . A month later , a new beta-coronavirus was identified as the cause of the 2019 coronavirus infection . SARS-CoV-2 is a coronavirus that belongs to the group of β-coronaviruses of the subgenus Coronaviridae . The SARS-CoV-2 is the third known zoonotic coronavirus disease after severe acute respiratory syndrome ( SARS ) and Middle Eastern respiratory syndrome ( MERS ). The diagnosis of SARS-CoV-2 recommended by the WHO , CDC is the collection of a sample from the upper respiratory tract ( nasal and oropharyngeal exudate ) or from the lower respiratory tractsuch as expectoration of endotracheal aspirate and bronchioloalveolar lavage and its analysis using the test of real-time polymerase chain reaction ( qRT-PCR ).In 2020, the first COVID‑19 vaccine was developed and made available to the public through emergency authorizations and conditional approvals.'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_covid_trials_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot;In December 2019 , a group of patients with the acute respiratory disease was detected in Wuhan , Hubei Province of China . A month later , a new beta-coronavirus was identified as the cause of the 2019 coronavirus infection . SARS-CoV-2 is a coronavirus that belongs to the group of β-coronaviruses of the subgenus Coronaviridae . The SARS-CoV-2 is the third known zoonotic coronavirus disease after severe acute respiratory syndrome ( SARS ) and Middle Eastern respiratory syndrome ( MERS ). The diagnosis of SARS-CoV-2 recommended by the WHO , CDC is the collection of a sample from the upper respiratory tract ( nasal and oropharyngeal exudate ) or from the lower respiratory tractsuch as expectoration of endotracheal aspirate and bronchioloalveolar lavage and its analysis using the test of real-time polymerase chain reaction ( qRT-PCR ).In 2020, the first COVID‑19 vaccine was developed and made available to the public through emergency authorizations and conditional approvals.&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks                          |   begin |   end | ner_label                 |   confidence |
|---:|:------------------------------------|--------:|------:|:--------------------------|-------------:|
|  0 | December 2019                       |       3 |    15 | Date                      |     0.99655  |
|  1 | acute respiratory disease           |      48 |    72 | Disease_Syndrome_Disorder |     0.8597   |
|  2 | beta-coronavirus                    |     146 |   161 | Virus                     |     0.6381   |
|  3 | 2019                                |     198 |   201 | Date                      |     0.8117   |
|  4 | coronavirus infection               |     203 |   223 | Disease_Syndrome_Disorder |     0.68335  |
|  5 | SARS-CoV-2                          |     227 |   236 | Virus                     |     0.9605   |
|  6 | coronavirus                         |     243 |   253 | Virus                     |     0.9814   |
|  7 | β-coronaviruses                     |     284 |   298 | Virus                     |     0.9564   |
|  8 | subgenus Coronaviridae              |     307 |   328 | Virus                     |     0.71465  |
|  9 | SARS-CoV-2                          |     336 |   345 | Virus                     |     0.9442   |
| 10 | zoonotic coronavirus disease        |     366 |   393 | Disease_Syndrome_Disorder |     0.922833 |
| 11 | severe acute respiratory syndrome   |     401 |   433 | Disease_Syndrome_Disorder |     0.959725 |
| 12 | SARS                                |     437 |   440 | Disease_Syndrome_Disorder |     0.9959   |
| 13 | Middle Eastern respiratory syndrome |     448 |   482 | Disease_Syndrome_Disorder |     0.9673   |
| 14 | MERS                                |     486 |   489 | Disease_Syndrome_Disorder |     0.9759   |
| 15 | SARS-CoV-2                          |     511 |   520 | Virus                     |     0.9027   |
| 16 | WHO                                 |     541 |   543 | Institution               |     0.9917   |
| 17 | CDC                                 |     547 |   549 | Institution               |     0.8296   |
| 18 | 2020                                |     848 |   851 | Date                      |     0.9997   |
| 19 | COVID‑19 vaccine                    |     864 |   879 | Vaccine_Name              |     0.87505  |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_covid_trials_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="en" /><category term="clinical" /><category term="licensed" /><category term="covid" /><summary type="html">Description This pretrained pipeline is built on the top of ner_covid_trials model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_covid_trials_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = '''In December 2019 , a group of patients with the acute respiratory disease was detected in Wuhan , Hubei Province of China . A month later , a new beta-coronavirus was identified as the cause of the 2019 coronavirus infection . SARS-CoV-2 is a coronavirus that belongs to the group of β-coronaviruses of the subgenus Coronaviridae . The SARS-CoV-2 is the third known zoonotic coronavirus disease after severe acute respiratory syndrome ( SARS ) and Middle Eastern respiratory syndrome ( MERS ). The diagnosis of SARS-CoV-2 recommended by the WHO , CDC is the collection of a sample from the upper respiratory tract ( nasal and oropharyngeal exudate ) or from the lower respiratory tractsuch as expectoration of endotracheal aspirate and bronchioloalveolar lavage and its analysis using the test of real-time polymerase chain reaction ( qRT-PCR ).In 2020, the first COVID‑19 vaccine was developed and made available to the public through emergency authorizations and conditional approvals.''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_covid_trials_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot;In December 2019 , a group of patients with the acute respiratory disease was detected in Wuhan , Hubei Province of China . A month later , a new beta-coronavirus was identified as the cause of the 2019 coronavirus infection . SARS-CoV-2 is a coronavirus that belongs to the group of β-coronaviruses of the subgenus Coronaviridae . The SARS-CoV-2 is the third known zoonotic coronavirus disease after severe acute respiratory syndrome ( SARS ) and Middle Eastern respiratory syndrome ( MERS ). The diagnosis of SARS-CoV-2 recommended by the WHO , CDC is the collection of a sample from the upper respiratory tract ( nasal and oropharyngeal exudate ) or from the lower respiratory tractsuch as expectoration of endotracheal aspirate and bronchioloalveolar lavage and its analysis using the test of real-time polymerase chain reaction ( qRT-PCR ).In 2020, the first COVID‑19 vaccine was developed and made available to the public through emergency authorizations and conditional approvals.&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:------------------------------------|--------:|------:|:--------------------------|-------------:| | 0 | December 2019 | 3 | 15 | Date | 0.99655 | | 1 | acute respiratory disease | 48 | 72 | Disease_Syndrome_Disorder | 0.8597 | | 2 | beta-coronavirus | 146 | 161 | Virus | 0.6381 | | 3 | 2019 | 198 | 201 | Date | 0.8117 | | 4 | coronavirus infection | 203 | 223 | Disease_Syndrome_Disorder | 0.68335 | | 5 | SARS-CoV-2 | 227 | 236 | Virus | 0.9605 | | 6 | coronavirus | 243 | 253 | Virus | 0.9814 | | 7 | β-coronaviruses | 284 | 298 | Virus | 0.9564 | | 8 | subgenus Coronaviridae | 307 | 328 | Virus | 0.71465 | | 9 | SARS-CoV-2 | 336 | 345 | Virus | 0.9442 | | 10 | zoonotic coronavirus disease | 366 | 393 | Disease_Syndrome_Disorder | 0.922833 | | 11 | severe acute respiratory syndrome | 401 | 433 | Disease_Syndrome_Disorder | 0.959725 | | 12 | SARS | 437 | 440 | Disease_Syndrome_Disorder | 0.9959 | | 13 | Middle Eastern respiratory syndrome | 448 | 482 | Disease_Syndrome_Disorder | 0.9673 | | 14 | MERS | 486 | 489 | Disease_Syndrome_Disorder | 0.9759 | | 15 | SARS-CoV-2 | 511 | 520 | Virus | 0.9027 | | 16 | WHO | 541 | 543 | Institution | 0.9917 | | 17 | CDC | 547 | 549 | Institution | 0.8296 | | 18 | 2020 | 848 | 851 | Date | 0.9997 | | 19 | COVID‑19 vaccine | 864 | 879 | Vaccine_Name | 0.87505 | Model Information Model Name: ner_covid_trials_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Pipeline to Detect PHI for Generic Deidentification in Romanian (BERT)</title><link href="/2023/03/09/ner_deid_generic_bert_pipeline_ro.html" rel="alternate" type="text/html" title="Pipeline to Detect PHI for Generic Deidentification in Romanian (BERT)" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_deid_generic_bert_pipeline_ro</id><content type="html" xml:base="/2023/03/09/ner_deid_generic_bert_pipeline_ro.html">## Description

This pretrained pipeline is built on the top of [ner_deid_generic_bert](https://nlp.johnsnowlabs.com/2022/11/22/ner_deid_generic_bert_ro.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_deid_generic_bert_pipeline_ro_4.3.0_3.2_1678352946195.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_deid_generic_bert_pipeline_ro_4.3.0_3.2_1678352946195.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_deid_generic_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;)

text = '''Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România
Tel: +40(235)413773
Data setului de analize: 25 May 2022 15:36:00
Nume si Prenume : BUREAN MARIA, Varsta: 77
Medic : Agota Evelyn Tımar
C.N.P : 2450502264401'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_deid_generic_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;)

val text = &quot;Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România
Tel: +40(235)413773
Data setului de analize: 25 May 2022 15:36:00
Nume si Prenume : BUREAN MARIA, Varsta: 77
Medic : Agota Evelyn Tımar
C.N.P : 2450502264401&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks                   |   begin |   end | ner_label   |   confidence |
|---:|:-----------------------------|--------:|------:|:------------|-------------:|
|  0 | Spitalul Pentru Ochi de Deal |       0 |    27 | LOCATION    |     0.99352  |
|  1 | Drumul Oprea Nr. 972         |      30 |    49 | LOCATION    |     0.99994  |
|  2 | Vaslui                       |      51 |    56 | LOCATION    |     1        |
|  3 | 737405                       |      59 |    64 | LOCATION    |     1        |
|  4 | +40(235)413773               |      79 |    92 | CONTACT     |     1        |
|  5 | 25 May 2022                  |     119 |   129 | DATE        |     1        |
|  6 | si                           |     145 |   146 | NAME        |     0.9998   |
|  7 | BUREAN MARIA                 |     158 |   169 | NAME        |     0.9993   |
|  8 | 77                           |     180 |   181 | AGE         |     1        |
|  9 | Agota Evelyn Tımar           |     191 |   210 | NAME        |     0.859975 |
|    | C                            |         |       |             |              |
| 10 | 2450502264401                |     218 |   230 | ID          |     1        |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_deid_generic_bert_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|ro|
|Size:|483.8 MB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- BertEmbeddings
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="ro" /><category term="deidentification" /><category term="phi" /><category term="generic" /><category term="bert" /><summary type="html">Description This pretrained pipeline is built on the top of ner_deid_generic_bert model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_deid_generic_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;) text = '''Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România Tel: +40(235)413773 Data setului de analize: 25 May 2022 15:36:00 Nume si Prenume : BUREAN MARIA, Varsta: 77 Medic : Agota Evelyn Tımar C.N.P : 2450502264401''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_deid_generic_bert_pipeline&quot;, &quot;ro&quot;, &quot;clinical/models&quot;) val text = &quot;Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România Tel: +40(235)413773 Data setului de analize: 25 May 2022 15:36:00 Nume si Prenume : BUREAN MARIA, Varsta: 77 Medic : Agota Evelyn Tımar C.N.P : 2450502264401&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:-----------------------------|--------:|------:|:------------|-------------:| | 0 | Spitalul Pentru Ochi de Deal | 0 | 27 | LOCATION | 0.99352 | | 1 | Drumul Oprea Nr. 972 | 30 | 49 | LOCATION | 0.99994 | | 2 | Vaslui | 51 | 56 | LOCATION | 1 | | 3 | 737405 | 59 | 64 | LOCATION | 1 | | 4 | +40(235)413773 | 79 | 92 | CONTACT | 1 | | 5 | 25 May 2022 | 119 | 129 | DATE | 1 | | 6 | si | 145 | 146 | NAME | 0.9998 | | 7 | BUREAN MARIA | 158 | 169 | NAME | 0.9993 | | 8 | 77 | 180 | 181 | AGE | 1 | | 9 | Agota Evelyn Tımar | 191 | 210 | NAME | 0.859975 | | | C | | | | | | 10 | 2450502264401 | 218 | 230 | ID | 1 | Model Information Model Name: ner_deid_generic_bert_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: ro Size: 483.8 MB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel BertEmbeddings MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Pipeline to Detect Clinical Entities (ner_jsl)</title><link href="/2023/03/09/ner_jsl_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Detect Clinical Entities (ner_jsl)" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_jsl_pipeline_en</id><content type="html" xml:base="/2023/03/09/ner_jsl_pipeline_en.html">## Description

This pretrained pipeline is built on the top of [ner_jsl](https://nlp.johnsnowlabs.com/2022/10/19/ner_jsl_en.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_jsl_pipeline_en_4.3.0_3.2_1678353833465.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_jsl_pipeline_en_4.3.0_3.2_1678353833465.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_jsl_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = '''The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_jsl_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot;The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks                                |   begin |   end | ner_label                    |   confidence |
|---:|:------------------------------------------|--------:|------:|:-----------------------------|-------------:|
|  0 | 21-day-old                                |      17 |    26 | Age                          |     0.997    |
|  1 | Caucasian                                 |      28 |    36 | Race_Ethnicity               |     0.9995   |
|  2 | male                                      |      38 |    41 | Gender                       |     0.9998   |
|  3 | 2 days                                    |      52 |    57 | Duration                     |     0.805    |
|  4 | congestion                                |      62 |    71 | Symptom                      |     0.9049   |
|  5 | mom                                       |      75 |    77 | Gender                       |     0.9907   |
|  6 | suctioning yellow discharge               |      88 |   114 | Symptom                      |     0.268133 |
|  7 | nares                                     |     135 |   139 | External_body_part_or_region |     0.7284   |
|  8 | she                                       |     147 |   149 | Gender                       |     0.9978   |
|  9 | mild                                      |     168 |   171 | Modifier                     |     0.7517   |
| 10 | problems with his breathing while feeding |     173 |   213 | Symptom                      |     0.664583 |
| 11 | perioral cyanosis                         |     237 |   253 | Symptom                      |     0.6869   |
| 12 | retractions                               |     258 |   268 | Symptom                      |     0.9912   |
| 13 | Influenza vaccine                         |     325 |   341 | Vaccine_Name                 |     0.833    |
| 14 | One day ago                               |     344 |   354 | RelativeDate                 |     0.8667   |
| 15 | mom                                       |     357 |   359 | Gender                       |     0.9991   |
| 16 | tactile temperature                       |     376 |   394 | Symptom                      |     0.3339   |
| 17 | Tylenol                                   |     417 |   423 | Drug_BrandName               |     0.9988   |
| 18 | Baby                                      |     426 |   429 | Age                          |     0.9634   |
| 19 | decreased p.o                             |     449 |   461 | Symptom                      |     0.75925  |
| 20 | His                                       |     472 |   474 | Gender                       |     0.9998   |
| 21 | 20 minutes                                |     511 |   520 | Duration                     |     0.48575  |
| 22 | 5 to 10 minutes                           |     531 |   545 | Duration                     |     0.526575 |
| 23 | his                                       |     560 |   562 | Gender                       |     0.988    |
| 24 | respiratory congestion                    |     564 |   585 | Symptom                      |     0.6168   |
| 25 | He                                        |     588 |   589 | Gender                       |     0.9992   |
| 26 | tired                                     |     622 |   626 | Symptom                      |     0.8745   |
| 27 | fussy                                     |     641 |   645 | Symptom                      |     0.8509   |
| 28 | over the past 2 days                      |     647 |   666 | RelativeDate                 |     0.60494  |
| 29 | albuterol                                 |     709 |   717 | Drug_Ingredient              |     0.9876   |
| 30 | ER                                        |     743 |   744 | Clinical_Dept                |     0.9974   |
| 31 | His                                       |     747 |   749 | Gender                       |     0.9996   |
| 32 | urine output has also decreased           |     751 |   781 | Symptom                      |     0.39878  |
| 33 | he                                        |     793 |   794 | Gender                       |     0.997    |
| 34 | per 24 hours                              |     832 |   843 | Frequency                    |     0.462333 |
| 35 | he                                        |     850 |   851 | Gender                       |     0.9983   |
| 36 | per 24 hours                              |     879 |   890 | Frequency                    |     0.562167 |
| 37 | Mom                                       |     893 |   895 | Gender                       |     0.9997   |
| 38 | diarrhea                                  |     908 |   915 | Symptom                      |     0.9956   |
| 39 | His                                       |     918 |   920 | Gender                       |     0.9997   |
| 40 | bowel                                     |     922 |   926 | Internal_organ_or_component  |     0.9218   |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_jsl_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="licensed" /><category term="en" /><category term="clinical" /><summary type="html">Description This pretrained pipeline is built on the top of ner_jsl model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_jsl_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = '''The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_jsl_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot;The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:------------------------------------------|--------:|------:|:-----------------------------|-------------:| | 0 | 21-day-old | 17 | 26 | Age | 0.997 | | 1 | Caucasian | 28 | 36 | Race_Ethnicity | 0.9995 | | 2 | male | 38 | 41 | Gender | 0.9998 | | 3 | 2 days | 52 | 57 | Duration | 0.805 | | 4 | congestion | 62 | 71 | Symptom | 0.9049 | | 5 | mom | 75 | 77 | Gender | 0.9907 | | 6 | suctioning yellow discharge | 88 | 114 | Symptom | 0.268133 | | 7 | nares | 135 | 139 | External_body_part_or_region | 0.7284 | | 8 | she | 147 | 149 | Gender | 0.9978 | | 9 | mild | 168 | 171 | Modifier | 0.7517 | | 10 | problems with his breathing while feeding | 173 | 213 | Symptom | 0.664583 | | 11 | perioral cyanosis | 237 | 253 | Symptom | 0.6869 | | 12 | retractions | 258 | 268 | Symptom | 0.9912 | | 13 | Influenza vaccine | 325 | 341 | Vaccine_Name | 0.833 | | 14 | One day ago | 344 | 354 | RelativeDate | 0.8667 | | 15 | mom | 357 | 359 | Gender | 0.9991 | | 16 | tactile temperature | 376 | 394 | Symptom | 0.3339 | | 17 | Tylenol | 417 | 423 | Drug_BrandName | 0.9988 | | 18 | Baby | 426 | 429 | Age | 0.9634 | | 19 | decreased p.o | 449 | 461 | Symptom | 0.75925 | | 20 | His | 472 | 474 | Gender | 0.9998 | | 21 | 20 minutes | 511 | 520 | Duration | 0.48575 | | 22 | 5 to 10 minutes | 531 | 545 | Duration | 0.526575 | | 23 | his | 560 | 562 | Gender | 0.988 | | 24 | respiratory congestion | 564 | 585 | Symptom | 0.6168 | | 25 | He | 588 | 589 | Gender | 0.9992 | | 26 | tired | 622 | 626 | Symptom | 0.8745 | | 27 | fussy | 641 | 645 | Symptom | 0.8509 | | 28 | over the past 2 days | 647 | 666 | RelativeDate | 0.60494 | | 29 | albuterol | 709 | 717 | Drug_Ingredient | 0.9876 | | 30 | ER | 743 | 744 | Clinical_Dept | 0.9974 | | 31 | His | 747 | 749 | Gender | 0.9996 | | 32 | urine output has also decreased | 751 | 781 | Symptom | 0.39878 | | 33 | he | 793 | 794 | Gender | 0.997 | | 34 | per 24 hours | 832 | 843 | Frequency | 0.462333 | | 35 | he | 850 | 851 | Gender | 0.9983 | | 36 | per 24 hours | 879 | 890 | Frequency | 0.562167 | | 37 | Mom | 893 | 895 | Gender | 0.9997 | | 38 | diarrhea | 908 | 915 | Symptom | 0.9956 | | 39 | His | 918 | 920 | Gender | 0.9997 | | 40 | bowel | 922 | 926 | Internal_organ_or_component | 0.9218 | Model Information Model Name: ner_jsl_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Pipeline to Extract Biomarkers and their Results</title><link href="/2023/03/09/ner_oncology_biomarker_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Extract Biomarkers and their Results" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_oncology_biomarker_pipeline_en</id><content type="html" xml:base="/2023/03/09/ner_oncology_biomarker_pipeline_en.html">## Description

This pretrained pipeline is built on the top of [ner_oncology_biomarker](https://nlp.johnsnowlabs.com/2022/11/24/ner_oncology_biomarker_en.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_oncology_biomarker_pipeline_en_4.3.0_3.2_1678345026649.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_oncology_biomarker_pipeline_en_4.3.0_3.2_1678345026649.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_oncology_biomarker_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = '''The results of immunohistochemical examination showed that she tested negative for CK7, synaptophysin (Syn), chromogranin A (CgA), Muc5AC, human epidermal growth factor receptor-2 (HER2), and Muc6; positive for CK20, Muc1, Muc2, E-cadherin, and p53; the Ki-67 index was about 87%.'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_oncology_biomarker_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot;The results of immunohistochemical examination showed that she tested negative for CK7, synaptophysin (Syn), chromogranin A (CgA), Muc5AC, human epidermal growth factor receptor-2 (HER2), and Muc6; positive for CK20, Muc1, Muc2, E-cadherin, and p53; the Ki-67 index was about 87%.&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks                               |   begin |   end | ner_label        |   confidence |
|---:|:-----------------------------------------|--------:|------:|:-----------------|-------------:|
|  0 | negative                                 |      70 |    77 | Biomarker_Result |      0.9984  |
|  1 | CK7                                      |      83 |    85 | Biomarker        |      1       |
|  2 | synaptophysin                            |      88 |   100 | Biomarker        |      0.9995  |
|  3 | Syn                                      |     103 |   105 | Biomarker        |      0.9979  |
|  4 | chromogranin A                           |     109 |   122 | Biomarker        |      0.9692  |
|  5 | CgA                                      |     125 |   127 | Biomarker        |      0.9994  |
|  6 | Muc5AC                                   |     131 |   136 | Biomarker        |      0.9987  |
|  7 | human epidermal growth factor receptor-2 |     139 |   178 | Biomarker        |      0.99876 |
|  8 | HER2                                     |     181 |   184 | Biomarker        |      1       |
|  9 | Muc6                                     |     192 |   195 | Biomarker        |      0.9999  |
| 10 | positive                                 |     198 |   205 | Biomarker_Result |      0.9987  |
| 11 | CK20                                     |     211 |   214 | Biomarker        |      1       |
| 12 | Muc1                                     |     217 |   220 | Biomarker        |      0.9999  |
| 13 | Muc2                                     |     223 |   226 | Biomarker        |      0.9999  |
| 14 | E-cadherin                               |     229 |   238 | Biomarker        |      0.9999  |
| 15 | p53                                      |     245 |   247 | Biomarker        |      1       |
| 16 | Ki-67 index                              |     254 |   264 | Biomarker        |      0.99465 |
| 17 | 87%                                      |     276 |   278 | Biomarker_Result |      0.9814  |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_oncology_biomarker_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="en" /><category term="ner" /><category term="oncology" /><category term="biomarker" /><summary type="html">Description This pretrained pipeline is built on the top of ner_oncology_biomarker model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_oncology_biomarker_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = '''The results of immunohistochemical examination showed that she tested negative for CK7, synaptophysin (Syn), chromogranin A (CgA), Muc5AC, human epidermal growth factor receptor-2 (HER2), and Muc6; positive for CK20, Muc1, Muc2, E-cadherin, and p53; the Ki-67 index was about 87%.''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_oncology_biomarker_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot;The results of immunohistochemical examination showed that she tested negative for CK7, synaptophysin (Syn), chromogranin A (CgA), Muc5AC, human epidermal growth factor receptor-2 (HER2), and Muc6; positive for CK20, Muc1, Muc2, E-cadherin, and p53; the Ki-67 index was about 87%.&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:-----------------------------------------|--------:|------:|:-----------------|-------------:| | 0 | negative | 70 | 77 | Biomarker_Result | 0.9984 | | 1 | CK7 | 83 | 85 | Biomarker | 1 | | 2 | synaptophysin | 88 | 100 | Biomarker | 0.9995 | | 3 | Syn | 103 | 105 | Biomarker | 0.9979 | | 4 | chromogranin A | 109 | 122 | Biomarker | 0.9692 | | 5 | CgA | 125 | 127 | Biomarker | 0.9994 | | 6 | Muc5AC | 131 | 136 | Biomarker | 0.9987 | | 7 | human epidermal growth factor receptor-2 | 139 | 178 | Biomarker | 0.99876 | | 8 | HER2 | 181 | 184 | Biomarker | 1 | | 9 | Muc6 | 192 | 195 | Biomarker | 0.9999 | | 10 | positive | 198 | 205 | Biomarker_Result | 0.9987 | | 11 | CK20 | 211 | 214 | Biomarker | 1 | | 12 | Muc1 | 217 | 220 | Biomarker | 0.9999 | | 13 | Muc2 | 223 | 226 | Biomarker | 0.9999 | | 14 | E-cadherin | 229 | 238 | Biomarker | 0.9999 | | 15 | p53 | 245 | 247 | Biomarker | 1 | | 16 | Ki-67 index | 254 | 264 | Biomarker | 0.99465 | | 17 | 87% | 276 | 278 | Biomarker_Result | 0.9814 | Model Information Model Name: ner_oncology_biomarker_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Pipeline to Extract Demographic Entities from Oncology Texts</title><link href="/2023/03/09/ner_oncology_demographics_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Extract Demographic Entities from Oncology Texts" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_oncology_demographics_pipeline_en</id><content type="html" xml:base="/2023/03/09/ner_oncology_demographics_pipeline_en.html">## Description

This pretrained pipeline is built on the top of [ner_oncology_demographics](https://nlp.johnsnowlabs.com/2022/11/24/ner_oncology_demographics_en.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_oncology_demographics_pipeline_en_4.3.0_3.2_1678345339056.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_oncology_demographics_pipeline_en_4.3.0_3.2_1678345339056.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_oncology_demographics_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = '''The patient is a 40-year-old man with history of heavy smoking.'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_oncology_demographics_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot;The patient is a 40-year-old man with history of heavy smoking.&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks    |   begin |   end | ner_label      |   confidence |
|---:|:--------------|--------:|------:|:---------------|-------------:|
|  0 | 40-year-old   |      17 |    27 | Age            |       0.6743 |
|  1 | man           |      29 |    31 | Gender         |       0.9365 |
|  2 | heavy smoking |      49 |    61 | Smoking_Status |       0.7294 |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_oncology_demographics_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="en" /><category term="ner" /><category term="oncology" /><category term="demographics" /><summary type="html">Description This pretrained pipeline is built on the top of ner_oncology_demographics model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_oncology_demographics_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = '''The patient is a 40-year-old man with history of heavy smoking.''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_oncology_demographics_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot;The patient is a 40-year-old man with history of heavy smoking.&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:--------------|--------:|------:|:---------------|-------------:| | 0 | 40-year-old | 17 | 27 | Age | 0.6743 | | 1 | man | 29 | 31 | Gender | 0.9365 | | 2 | heavy smoking | 49 | 61 | Smoking_Status | 0.7294 | Model Information Model Name: ner_oncology_demographics_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Pipeline to Detect Entities Related to Cancer Diagnosis</title><link href="/2023/03/09/ner_oncology_diagnosis_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Detect Entities Related to Cancer Diagnosis" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_oncology_diagnosis_pipeline_en</id><content type="html" xml:base="/2023/03/09/ner_oncology_diagnosis_pipeline_en.html">## Description

This pretrained pipeline is built on the top of [ner_oncology_diagnosis](https://nlp.johnsnowlabs.com/2022/11/24/ner_oncology_diagnosis_en.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_oncology_diagnosis_pipeline_en_4.3.0_3.2_1678346464717.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_oncology_diagnosis_pipeline_en_4.3.0_3.2_1678346464717.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_oncology_diagnosis_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = '''Two years ago, the patient presented with a tumor in her left breast and adenopathies. She was diagnosed with invasive ductal carcinoma. Last week she was also found to have a lung metastasis.'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_oncology_diagnosis_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot;Two years ago, the patient presented with a tumor in her left breast and adenopathies. She was diagnosed with invasive ductal carcinoma. Last week she was also found to have a lung metastasis.&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks   |   begin |   end | ner_label         |   confidence |
|---:|:-------------|--------:|------:|:------------------|-------------:|
|  0 | tumor        |      44 |    48 | Tumor_Finding     |       0.9958 |
|  1 | adenopathies |      73 |    84 | Adenopathy        |       0.6287 |
|  2 | invasive     |     110 |   117 | Histological_Type |       0.9965 |
|  3 | ductal       |     119 |   124 | Histological_Type |       0.9996 |
|  4 | carcinoma    |     126 |   134 | Cancer_Dx         |       0.9988 |
|  5 | metastasis   |     181 |   190 | Metastasis        |       0.9996 |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_oncology_diagnosis_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="en" /><category term="ner" /><category term="oncology" /><summary type="html">Description This pretrained pipeline is built on the top of ner_oncology_diagnosis model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_oncology_diagnosis_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = '''Two years ago, the patient presented with a tumor in her left breast and adenopathies. She was diagnosed with invasive ductal carcinoma. Last week she was also found to have a lung metastasis.''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_oncology_diagnosis_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot;Two years ago, the patient presented with a tumor in her left breast and adenopathies. She was diagnosed with invasive ductal carcinoma. Last week she was also found to have a lung metastasis.&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:-------------|--------:|------:|:------------------|-------------:| | 0 | tumor | 44 | 48 | Tumor_Finding | 0.9958 | | 1 | adenopathies | 73 | 84 | Adenopathy | 0.6287 | | 2 | invasive | 110 | 117 | Histological_Type | 0.9965 | | 3 | ductal | 119 | 124 | Histological_Type | 0.9996 | | 4 | carcinoma | 126 | 134 | Cancer_Dx | 0.9988 | | 5 | metastasis | 181 | 190 | Metastasis | 0.9996 | Model Information Model Name: ner_oncology_diagnosis_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Pipeline to Extract Mentions of Response to Cancer Treatment</title><link href="/2023/03/09/ner_oncology_response_to_treatment_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Extract Mentions of Response to Cancer Treatment" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_oncology_response_to_treatment_pipeline_en</id><content type="html" xml:base="/2023/03/09/ner_oncology_response_to_treatment_pipeline_en.html">## Description

This pretrained pipeline is built on the top of [ner_oncology_response_to_treatment](https://nlp.johnsnowlabs.com/2022/11/24/ner_oncology_response_to_treatment_en.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_oncology_response_to_treatment_pipeline_en_4.3.0_3.2_1678349824229.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_oncology_response_to_treatment_pipeline_en_4.3.0_3.2_1678349824229.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_oncology_response_to_treatment_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = '''She completed her first-line therapy, but some months later there was recurrence of the breast cancer.'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_oncology_response_to_treatment_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot;She completed her first-line therapy, but some months later there was recurrence of the breast cancer.&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks   |   begin |   end | ner_label             |   confidence |
|---:|:-------------|--------:|------:|:----------------------|-------------:|
|  0 | recurrence   |      70 |    79 | Response_To_Treatment |       0.9767 |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_oncology_response_to_treatment_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="en" /><category term="oncology" /><category term="ner" /><category term="treatment" /><summary type="html">Description This pretrained pipeline is built on the top of ner_oncology_response_to_treatment model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_oncology_response_to_treatment_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = '''She completed her first-line therapy, but some months later there was recurrence of the breast cancer.''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_oncology_response_to_treatment_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot;She completed her first-line therapy, but some months later there was recurrence of the breast cancer.&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:-------------|--------:|------:|:----------------------|-------------:| | 0 | recurrence | 70 | 79 | Response_To_Treatment | 0.9767 | Model Information Model Name: ner_oncology_response_to_treatment_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Pipeline to Extract Oncology Tests</title><link href="/2023/03/09/ner_oncology_test_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Extract Oncology Tests" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>/2023/03/09/ner_oncology_test_pipeline_en</id><content type="html" xml:base="/2023/03/09/ner_oncology_test_pipeline_en.html">## Description

This pretrained pipeline is built on the top of [ner_oncology_test](https://nlp.johnsnowlabs.com/2022/11/24/ner_oncology_test_en.html) model.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_oncology_test_pipeline_en_4.3.0_3.2_1678351357734.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_oncology_test_pipeline_en_4.3.0_3.2_1678351357734.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
from sparknlp.pretrained import PretrainedPipeline

pipeline = PretrainedPipeline(&quot;ner_oncology_test_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = ''' biopsy was conducted using an ultrasound guided thick-needle. His chest computed tomography (CT) scan was negative.'''

result = pipeline.fullAnnotate(text)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val pipeline = new PretrainedPipeline(&quot;ner_oncology_test_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot; biopsy was conducted using an ultrasound guided thick-needle. His chest computed tomography (CT) scan was negative.&quot;

val result = pipeline.fullAnnotate(text)
```
&lt;/div&gt;

## Results

```bash
|    | ber_chunks                |   begin |   end | ner_label      |   confidence |
|---:|:--------------------------|--------:|------:|:---------------|-------------:|
|  0 | biopsy                    |       1 |     6 | Pathology_Test |      0.9987  |
|  1 | ultrasound guided         |      31 |    47 | Imaging_Test   |      0.87635 |
|  2 | chest computed tomography |      67 |    91 | Imaging_Test   |      0.9176  |
|  3 | CT                        |      94 |    95 | Imaging_Test   |      0.8294  |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_oncology_test_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.3.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="oncology" /><category term="en" /><category term="ner" /><category term="test" /><summary type="html">Description This pretrained pipeline is built on the top of ner_oncology_test model. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline pipeline = PretrainedPipeline(&quot;ner_oncology_test_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = ''' biopsy was conducted using an ultrasound guided thick-needle. His chest computed tomography (CT) scan was negative.''' result = pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val pipeline = new PretrainedPipeline(&quot;ner_oncology_test_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot; biopsy was conducted using an ultrasound guided thick-needle. His chest computed tomography (CT) scan was negative.&quot; val result = pipeline.fullAnnotate(text) Results | | ber_chunks | begin | end | ner_label | confidence | |---:|:--------------------------|--------:|------:|:---------------|-------------:| | 0 | biopsy | 1 | 6 | Pathology_Test | 0.9987 | | 1 | ultrasound guided | 31 | 47 | Imaging_Test | 0.87635 | | 2 | chest computed tomography | 67 | 91 | Imaging_Test | 0.9176 | | 3 | CT | 94 | 95 | Imaging_Test | 0.8294 | Model Information Model Name: ner_oncology_test_pipeline Type: pipeline Compatibility: Healthcare NLP 4.3.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel</summary></entry></feed>