<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-10-26T18:41:42+00:00</updated><id>/feed.xml</id><title type="html">Spark NLP</title><subtitle>High Performance NLP with Apache Spark
</subtitle><author><name>{&quot;type&quot;=&gt;nil, &quot;name&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;googleplus&quot;=&gt;nil, &quot;telegram&quot;=&gt;nil, &quot;medium&quot;=&gt;nil, &quot;zhihu&quot;=&gt;nil, &quot;douban&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;npm&quot;=&gt;nil}</name></author><entry><title type="html">English 6ep_bert_ft_cola_31 BertForSequenceClassification from Jeevesh8</title><link href="/2023/10/26/6ep_bert_ft_cola_31_en.html" rel="alternate" type="text/html" title="English 6ep_bert_ft_cola_31 BertForSequenceClassification from Jeevesh8" /><published>2023-10-26T00:00:00+00:00</published><updated>2023-10-26T00:00:00+00:00</updated><id>/2023/10/26/6ep_bert_ft_cola_31_en</id><content type="html" xml:base="/2023/10/26/6ep_bert_ft_cola_31_en.html">## Description

Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`6ep_bert_ft_cola_31` is a English model originally trained by Jeevesh8.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_31_en_5.1.4_3.4_1698279222298.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_31_en_5.1.4_3.4_1698279222298.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_31&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_31&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|6ep_bert_ft_cola_31|
|Compatibility:|Spark NLP 5.1.4+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|409.4 MB|

## References

https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-31</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.6ep_bert_ft_cola_31 is a English model originally trained by Jeevesh8. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_31&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_31&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: 6ep_bert_ft_cola_31 Compatibility: Spark NLP 5.1.4+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 409.4 MB References https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-31</summary></entry><entry><title type="html">English 6ep_bert_ft_cola_32 BertForSequenceClassification from Jeevesh8</title><link href="/2023/10/26/6ep_bert_ft_cola_32_en.html" rel="alternate" type="text/html" title="English 6ep_bert_ft_cola_32 BertForSequenceClassification from Jeevesh8" /><published>2023-10-26T00:00:00+00:00</published><updated>2023-10-26T00:00:00+00:00</updated><id>/2023/10/26/6ep_bert_ft_cola_32_en</id><content type="html" xml:base="/2023/10/26/6ep_bert_ft_cola_32_en.html">## Description

Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`6ep_bert_ft_cola_32` is a English model originally trained by Jeevesh8.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_32_en_5.1.4_3.4_1698280115141.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_32_en_5.1.4_3.4_1698280115141.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_32&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_32&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|6ep_bert_ft_cola_32|
|Compatibility:|Spark NLP 5.1.4+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|409.4 MB|

## References

https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-32</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.6ep_bert_ft_cola_32 is a English model originally trained by Jeevesh8. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_32&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_32&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: 6ep_bert_ft_cola_32 Compatibility: Spark NLP 5.1.4+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 409.4 MB References https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-32</summary></entry><entry><title type="html">English 6ep_bert_ft_cola_33 BertForSequenceClassification from Jeevesh8</title><link href="/2023/10/26/6ep_bert_ft_cola_33_en.html" rel="alternate" type="text/html" title="English 6ep_bert_ft_cola_33 BertForSequenceClassification from Jeevesh8" /><published>2023-10-26T00:00:00+00:00</published><updated>2023-10-26T00:00:00+00:00</updated><id>/2023/10/26/6ep_bert_ft_cola_33_en</id><content type="html" xml:base="/2023/10/26/6ep_bert_ft_cola_33_en.html">## Description

Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`6ep_bert_ft_cola_33` is a English model originally trained by Jeevesh8.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_33_en_5.1.4_3.4_1698280969297.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_33_en_5.1.4_3.4_1698280969297.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_33&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_33&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|6ep_bert_ft_cola_33|
|Compatibility:|Spark NLP 5.1.4+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|409.4 MB|

## References

https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-33</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.6ep_bert_ft_cola_33 is a English model originally trained by Jeevesh8. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_33&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_33&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: 6ep_bert_ft_cola_33 Compatibility: Spark NLP 5.1.4+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 409.4 MB References https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-33</summary></entry><entry><title type="html">English 6ep_bert_ft_cola_34 BertForSequenceClassification from Jeevesh8</title><link href="/2023/10/26/6ep_bert_ft_cola_34_en.html" rel="alternate" type="text/html" title="English 6ep_bert_ft_cola_34 BertForSequenceClassification from Jeevesh8" /><published>2023-10-26T00:00:00+00:00</published><updated>2023-10-26T00:00:00+00:00</updated><id>/2023/10/26/6ep_bert_ft_cola_34_en</id><content type="html" xml:base="/2023/10/26/6ep_bert_ft_cola_34_en.html">## Description

Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`6ep_bert_ft_cola_34` is a English model originally trained by Jeevesh8.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_34_en_5.1.4_3.4_1698281806567.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_34_en_5.1.4_3.4_1698281806567.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_34&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_34&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|6ep_bert_ft_cola_34|
|Compatibility:|Spark NLP 5.1.4+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|409.4 MB|

## References

https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-34</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.6ep_bert_ft_cola_34 is a English model originally trained by Jeevesh8. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_34&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_34&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: 6ep_bert_ft_cola_34 Compatibility: Spark NLP 5.1.4+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 409.4 MB References https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-34</summary></entry><entry><title type="html">English 6ep_bert_ft_cola_35 BertForSequenceClassification from Jeevesh8</title><link href="/2023/10/26/6ep_bert_ft_cola_35_en.html" rel="alternate" type="text/html" title="English 6ep_bert_ft_cola_35 BertForSequenceClassification from Jeevesh8" /><published>2023-10-26T00:00:00+00:00</published><updated>2023-10-26T00:00:00+00:00</updated><id>/2023/10/26/6ep_bert_ft_cola_35_en</id><content type="html" xml:base="/2023/10/26/6ep_bert_ft_cola_35_en.html">## Description

Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`6ep_bert_ft_cola_35` is a English model originally trained by Jeevesh8.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_35_en_5.1.4_3.4_1698282610041.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_35_en_5.1.4_3.4_1698282610041.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_35&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_35&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|6ep_bert_ft_cola_35|
|Compatibility:|Spark NLP 5.1.4+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|409.4 MB|

## References

https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-35</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.6ep_bert_ft_cola_35 is a English model originally trained by Jeevesh8. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_35&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_35&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: 6ep_bert_ft_cola_35 Compatibility: Spark NLP 5.1.4+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 409.4 MB References https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-35</summary></entry><entry><title type="html">English 6ep_bert_ft_cola_36 BertForSequenceClassification from Jeevesh8</title><link href="/2023/10/26/6ep_bert_ft_cola_36_en.html" rel="alternate" type="text/html" title="English 6ep_bert_ft_cola_36 BertForSequenceClassification from Jeevesh8" /><published>2023-10-26T00:00:00+00:00</published><updated>2023-10-26T00:00:00+00:00</updated><id>/2023/10/26/6ep_bert_ft_cola_36_en</id><content type="html" xml:base="/2023/10/26/6ep_bert_ft_cola_36_en.html">## Description

Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`6ep_bert_ft_cola_36` is a English model originally trained by Jeevesh8.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_36_en_5.1.4_3.4_1698283422017.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_36_en_5.1.4_3.4_1698283422017.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_36&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_36&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|6ep_bert_ft_cola_36|
|Compatibility:|Spark NLP 5.1.4+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|409.4 MB|

## References

https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-36</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.6ep_bert_ft_cola_36 is a English model originally trained by Jeevesh8. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_36&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_36&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: 6ep_bert_ft_cola_36 Compatibility: Spark NLP 5.1.4+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 409.4 MB References https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-36</summary></entry><entry><title type="html">English 6ep_bert_ft_cola_37 BertForSequenceClassification from Jeevesh8</title><link href="/2023/10/26/6ep_bert_ft_cola_37_en.html" rel="alternate" type="text/html" title="English 6ep_bert_ft_cola_37 BertForSequenceClassification from Jeevesh8" /><published>2023-10-26T00:00:00+00:00</published><updated>2023-10-26T00:00:00+00:00</updated><id>/2023/10/26/6ep_bert_ft_cola_37_en</id><content type="html" xml:base="/2023/10/26/6ep_bert_ft_cola_37_en.html">## Description

Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`6ep_bert_ft_cola_37` is a English model originally trained by Jeevesh8.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_37_en_5.1.4_3.4_1698284352951.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_37_en_5.1.4_3.4_1698284352951.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_37&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_37&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|6ep_bert_ft_cola_37|
|Compatibility:|Spark NLP 5.1.4+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|409.4 MB|

## References

https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-37</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.6ep_bert_ft_cola_37 is a English model originally trained by Jeevesh8. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_37&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_37&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: 6ep_bert_ft_cola_37 Compatibility: Spark NLP 5.1.4+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 409.4 MB References https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-37</summary></entry><entry><title type="html">English 6ep_bert_ft_cola_38 BertForSequenceClassification from Jeevesh8</title><link href="/2023/10/26/6ep_bert_ft_cola_38_en.html" rel="alternate" type="text/html" title="English 6ep_bert_ft_cola_38 BertForSequenceClassification from Jeevesh8" /><published>2023-10-26T00:00:00+00:00</published><updated>2023-10-26T00:00:00+00:00</updated><id>/2023/10/26/6ep_bert_ft_cola_38_en</id><content type="html" xml:base="/2023/10/26/6ep_bert_ft_cola_38_en.html">## Description

Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`6ep_bert_ft_cola_38` is a English model originally trained by Jeevesh8.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_38_en_5.1.4_3.4_1698285115826.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_38_en_5.1.4_3.4_1698285115826.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_38&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_38&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|6ep_bert_ft_cola_38|
|Compatibility:|Spark NLP 5.1.4+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|409.4 MB|

## References

https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-38</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.6ep_bert_ft_cola_38 is a English model originally trained by Jeevesh8. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_38&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_38&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: 6ep_bert_ft_cola_38 Compatibility: Spark NLP 5.1.4+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 409.4 MB References https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-38</summary></entry><entry><title type="html">English 6ep_bert_ft_cola_39 BertForSequenceClassification from Jeevesh8</title><link href="/2023/10/26/6ep_bert_ft_cola_39_en.html" rel="alternate" type="text/html" title="English 6ep_bert_ft_cola_39 BertForSequenceClassification from Jeevesh8" /><published>2023-10-26T00:00:00+00:00</published><updated>2023-10-26T00:00:00+00:00</updated><id>/2023/10/26/6ep_bert_ft_cola_39_en</id><content type="html" xml:base="/2023/10/26/6ep_bert_ft_cola_39_en.html">## Description

Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`6ep_bert_ft_cola_39` is a English model originally trained by Jeevesh8.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_39_en_5.1.4_3.4_1698286112629.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_39_en_5.1.4_3.4_1698286112629.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_39&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_39&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|6ep_bert_ft_cola_39|
|Compatibility:|Spark NLP 5.1.4+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|409.4 MB|

## References

https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-39</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.6ep_bert_ft_cola_39 is a English model originally trained by Jeevesh8. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_39&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_39&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: 6ep_bert_ft_cola_39 Compatibility: Spark NLP 5.1.4+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 409.4 MB References https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-39</summary></entry><entry><title type="html">English 6ep_bert_ft_cola_40 BertForSequenceClassification from Jeevesh8</title><link href="/2023/10/26/6ep_bert_ft_cola_40_en.html" rel="alternate" type="text/html" title="English 6ep_bert_ft_cola_40 BertForSequenceClassification from Jeevesh8" /><published>2023-10-26T00:00:00+00:00</published><updated>2023-10-26T00:00:00+00:00</updated><id>/2023/10/26/6ep_bert_ft_cola_40_en</id><content type="html" xml:base="/2023/10/26/6ep_bert_ft_cola_40_en.html">## Description

Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.`6ep_bert_ft_cola_40` is a English model originally trained by Jeevesh8.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_40_en_5.1.4_3.4_1698287281956.zip){:.button.button-orange.button-orange-trans.arr.button-icon}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/public/models/6ep_bert_ft_cola_40_en_5.1.4_3.4_1698287281956.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols(&quot;document&quot;)\
    .setOutputCol(&quot;token&quot;)  
    
sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_40&quot;,&quot;en&quot;)\
            .setInputCols([&quot;document&quot;,&quot;token&quot;])\
            .setOutputCol(&quot;class&quot;)

pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier])

data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;) 
    .setOutputCol(&quot;token&quot;)  
    
val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_40&quot;,&quot;en&quot;)
            .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
            .setOutputCol(&quot;class&quot;)

val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier))

val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)


```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|6ep_bert_ft_cola_40|
|Compatibility:|Spark NLP 5.1.4+|
|License:|Open Source|
|Edition:|Official|
|Input Labels:|[documents, token]|
|Output Labels:|[class]|
|Language:|en|
|Size:|409.4 MB|

## References

https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-40</content><author><name>John Snow Labs</name></author><category term="bert" /><category term="en" /><category term="open_source" /><category term="sequence_classification" /><category term="onnx" /><summary type="html">Description Pretrained BertForSequenceClassification model, adapted from Hugging Face and curated to provide scalability and production-readiness using Spark NLP.6ep_bert_ft_cola_40 is a English model originally trained by Jeevesh8. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols(&quot;document&quot;)\ .setOutputCol(&quot;token&quot;) sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_40&quot;,&quot;en&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline().setStages([document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;PUT YOUR STRING HERE&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = BertForSequenceClassification.pretrained(&quot;6ep_bert_ft_cola_40&quot;,&quot;en&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;class&quot;) val pipeline = new Pipeline().setStages(Array(documentAssembler, tokenizer, sequenceClassifier)) val data = Seq(&quot;PUT YOUR STRING HERE&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Model Information Model Name: 6ep_bert_ft_cola_40 Compatibility: Spark NLP 5.1.4+ License: Open Source Edition: Official Input Labels: [documents, token] Output Labels: [class] Language: en Size: 409.4 MB References https://huggingface.co/Jeevesh8/6ep_bert_ft_cola-40</summary></entry></feed>