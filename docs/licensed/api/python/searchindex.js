Search.setIndex({"docnames": ["getting_started/index", "index", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.AssertionTFGraphBuilder", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.GenericClassifierTFGraphBuilder", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.NerTFGraphBuilder", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.RelationExtractionTFGraphBuilder", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.TFGraphBuilder", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.TFGraphBuilderFactory", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.TensorflowAddonsNeeded", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.WrongTFVersion", "reference/autosummary/sparknlp_jsl.annotator", "reference/autosummary/sparknlp_jsl.annotator.AnnotationMerger", "reference/autosummary/sparknlp_jsl.annotator.AssertionDLApproach", "reference/autosummary/sparknlp_jsl.annotator.AssertionDLModel", "reference/autosummary/sparknlp_jsl.annotator.AssertionFilterer", "reference/autosummary/sparknlp_jsl.annotator.AssertionLogRegApproach", "reference/autosummary/sparknlp_jsl.annotator.AssertionLogRegModel", "reference/autosummary/sparknlp_jsl.annotator.AverageEmbeddings", "reference/autosummary/sparknlp_jsl.annotator.BertSentenceChunkEmbeddings", "reference/autosummary/sparknlp_jsl.annotator.Chunk2Token", "reference/autosummary/sparknlp_jsl.annotator.ChunkConverter", "reference/autosummary/sparknlp_jsl.annotator.ChunkFilterer", "reference/autosummary/sparknlp_jsl.annotator.ChunkFiltererApproach", "reference/autosummary/sparknlp_jsl.annotator.ChunkKeyPhraseExtraction", "reference/autosummary/sparknlp_jsl.annotator.ChunkMapperApproach", "reference/autosummary/sparknlp_jsl.annotator.ChunkMapperFiltererModel", "reference/autosummary/sparknlp_jsl.annotator.ChunkMapperModel", "reference/autosummary/sparknlp_jsl.annotator.ChunkMergeApproach", "reference/autosummary/sparknlp_jsl.annotator.ChunkMergeModel", "reference/autosummary/sparknlp_jsl.annotator.ChunkSentenceSplitter", "reference/autosummary/sparknlp_jsl.annotator.CommonResolverParams", "reference/autosummary/sparknlp_jsl.annotator.ContextualParserApproach", "reference/autosummary/sparknlp_jsl.annotator.ContextualParserModel", "reference/autosummary/sparknlp_jsl.annotator.DateNormalizer", "reference/autosummary/sparknlp_jsl.annotator.DeIdentification", "reference/autosummary/sparknlp_jsl.annotator.DeIdentificationModel", "reference/autosummary/sparknlp_jsl.annotator.DocumentLogRegClassifierApproach", "reference/autosummary/sparknlp_jsl.annotator.DocumentLogRegClassifierModel", "reference/autosummary/sparknlp_jsl.annotator.DrugNormalizer", "reference/autosummary/sparknlp_jsl.annotator.EntityChunkEmbeddings", "reference/autosummary/sparknlp_jsl.annotator.GenericClassifierApproach", "reference/autosummary/sparknlp_jsl.annotator.GenericClassifierModel", "reference/autosummary/sparknlp_jsl.annotator.IOBTagger", "reference/autosummary/sparknlp_jsl.annotator.MedicalBertForSequenceClassification", "reference/autosummary/sparknlp_jsl.annotator.MedicalBertForTokenClassifier", "reference/autosummary/sparknlp_jsl.annotator.MedicalDistilBertForSequenceClassification", "reference/autosummary/sparknlp_jsl.annotator.MedicalGraphBuilderModel", "reference/autosummary/sparknlp_jsl.annotator.MedicalNerApproach", "reference/autosummary/sparknlp_jsl.annotator.MedicalNerModel", "reference/autosummary/sparknlp_jsl.annotator.NerChunker", "reference/autosummary/sparknlp_jsl.annotator.NerConverterInternal", "reference/autosummary/sparknlp_jsl.annotator.NerDisambiguator", "reference/autosummary/sparknlp_jsl.annotator.NerDisambiguatorModel", "reference/autosummary/sparknlp_jsl.annotator.PosologyREModel", "reference/autosummary/sparknlp_jsl.annotator.RENerChunksFilter", "reference/autosummary/sparknlp_jsl.annotator.ReIdentification", "reference/autosummary/sparknlp_jsl.annotator.RelationExtractionApproach", "reference/autosummary/sparknlp_jsl.annotator.RelationExtractionDLModel", "reference/autosummary/sparknlp_jsl.annotator.RelationExtractionModel", "reference/autosummary/sparknlp_jsl.annotator.ResolverMerger", "reference/autosummary/sparknlp_jsl.annotator.Router", "reference/autosummary/sparknlp_jsl.annotator.SentenceEntityResolverApproach", "reference/autosummary/sparknlp_jsl.annotator.SentenceEntityResolverModel", "reference/autosummary/sparknlp_jsl.annotator.SentenceResolverParams", "reference/autosummary/sparknlp_jsl.annotator.TFGraphBuilder", "reference/autosummary/sparknlp_jsl.annotator.ZeroShotRelationExtractionModel", "reference/autosummary/sparknlp_jsl.base", "reference/autosummary/sparknlp_jsl.base.FeaturesAssembler", "reference/autosummary/sparknlp_jsl.training", "reference/autosummary/sparknlp_jsl.training.AnnotationToolJsonReader", "reference/autosummary/sparknlp_jsl.training.CantemistReader", "reference/autosummary/sparknlp_jsl.training.CodiEspReader", "reference/index"], "filenames": ["getting_started/index.rst", "index.rst", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.rst", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.AssertionTFGraphBuilder.rst", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.GenericClassifierTFGraphBuilder.rst", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.NerTFGraphBuilder.rst", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.RelationExtractionTFGraphBuilder.rst", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.TFGraphBuilder.rst", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.TFGraphBuilderFactory.rst", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.TensorflowAddonsNeeded.rst", "reference/autosummary/sparknlp_jsl._tf_graph_builders.graph_builders.WrongTFVersion.rst", "reference/autosummary/sparknlp_jsl.annotator.rst", "reference/autosummary/sparknlp_jsl.annotator.AnnotationMerger.rst", "reference/autosummary/sparknlp_jsl.annotator.AssertionDLApproach.rst", "reference/autosummary/sparknlp_jsl.annotator.AssertionDLModel.rst", "reference/autosummary/sparknlp_jsl.annotator.AssertionFilterer.rst", "reference/autosummary/sparknlp_jsl.annotator.AssertionLogRegApproach.rst", "reference/autosummary/sparknlp_jsl.annotator.AssertionLogRegModel.rst", "reference/autosummary/sparknlp_jsl.annotator.AverageEmbeddings.rst", "reference/autosummary/sparknlp_jsl.annotator.BertSentenceChunkEmbeddings.rst", "reference/autosummary/sparknlp_jsl.annotator.Chunk2Token.rst", "reference/autosummary/sparknlp_jsl.annotator.ChunkConverter.rst", "reference/autosummary/sparknlp_jsl.annotator.ChunkFilterer.rst", "reference/autosummary/sparknlp_jsl.annotator.ChunkFiltererApproach.rst", "reference/autosummary/sparknlp_jsl.annotator.ChunkKeyPhraseExtraction.rst", "reference/autosummary/sparknlp_jsl.annotator.ChunkMapperApproach.rst", "reference/autosummary/sparknlp_jsl.annotator.ChunkMapperFiltererModel.rst", "reference/autosummary/sparknlp_jsl.annotator.ChunkMapperModel.rst", "reference/autosummary/sparknlp_jsl.annotator.ChunkMergeApproach.rst", "reference/autosummary/sparknlp_jsl.annotator.ChunkMergeModel.rst", "reference/autosummary/sparknlp_jsl.annotator.ChunkSentenceSplitter.rst", "reference/autosummary/sparknlp_jsl.annotator.CommonResolverParams.rst", "reference/autosummary/sparknlp_jsl.annotator.ContextualParserApproach.rst", "reference/autosummary/sparknlp_jsl.annotator.ContextualParserModel.rst", "reference/autosummary/sparknlp_jsl.annotator.DateNormalizer.rst", "reference/autosummary/sparknlp_jsl.annotator.DeIdentification.rst", "reference/autosummary/sparknlp_jsl.annotator.DeIdentificationModel.rst", "reference/autosummary/sparknlp_jsl.annotator.DocumentLogRegClassifierApproach.rst", "reference/autosummary/sparknlp_jsl.annotator.DocumentLogRegClassifierModel.rst", "reference/autosummary/sparknlp_jsl.annotator.DrugNormalizer.rst", "reference/autosummary/sparknlp_jsl.annotator.EntityChunkEmbeddings.rst", "reference/autosummary/sparknlp_jsl.annotator.GenericClassifierApproach.rst", "reference/autosummary/sparknlp_jsl.annotator.GenericClassifierModel.rst", "reference/autosummary/sparknlp_jsl.annotator.IOBTagger.rst", "reference/autosummary/sparknlp_jsl.annotator.MedicalBertForSequenceClassification.rst", "reference/autosummary/sparknlp_jsl.annotator.MedicalBertForTokenClassifier.rst", "reference/autosummary/sparknlp_jsl.annotator.MedicalDistilBertForSequenceClassification.rst", "reference/autosummary/sparknlp_jsl.annotator.MedicalGraphBuilderModel.rst", "reference/autosummary/sparknlp_jsl.annotator.MedicalNerApproach.rst", "reference/autosummary/sparknlp_jsl.annotator.MedicalNerModel.rst", "reference/autosummary/sparknlp_jsl.annotator.NerChunker.rst", "reference/autosummary/sparknlp_jsl.annotator.NerConverterInternal.rst", "reference/autosummary/sparknlp_jsl.annotator.NerDisambiguator.rst", "reference/autosummary/sparknlp_jsl.annotator.NerDisambiguatorModel.rst", "reference/autosummary/sparknlp_jsl.annotator.PosologyREModel.rst", "reference/autosummary/sparknlp_jsl.annotator.RENerChunksFilter.rst", "reference/autosummary/sparknlp_jsl.annotator.ReIdentification.rst", "reference/autosummary/sparknlp_jsl.annotator.RelationExtractionApproach.rst", "reference/autosummary/sparknlp_jsl.annotator.RelationExtractionDLModel.rst", "reference/autosummary/sparknlp_jsl.annotator.RelationExtractionModel.rst", "reference/autosummary/sparknlp_jsl.annotator.ResolverMerger.rst", "reference/autosummary/sparknlp_jsl.annotator.Router.rst", "reference/autosummary/sparknlp_jsl.annotator.SentenceEntityResolverApproach.rst", "reference/autosummary/sparknlp_jsl.annotator.SentenceEntityResolverModel.rst", "reference/autosummary/sparknlp_jsl.annotator.SentenceResolverParams.rst", "reference/autosummary/sparknlp_jsl.annotator.TFGraphBuilder.rst", "reference/autosummary/sparknlp_jsl.annotator.ZeroShotRelationExtractionModel.rst", "reference/autosummary/sparknlp_jsl.base.rst", "reference/autosummary/sparknlp_jsl.base.FeaturesAssembler.rst", "reference/autosummary/sparknlp_jsl.training.rst", "reference/autosummary/sparknlp_jsl.training.AnnotationToolJsonReader.rst", "reference/autosummary/sparknlp_jsl.training.CantemistReader.rst", "reference/autosummary/sparknlp_jsl.training.CodiEspReader.rst", "reference/index.rst"], "titles": ["Getting Started", "Spark NLP Documentation", "sparknlp_jsl._tf_graph_builders.graph_builders", "sparknlp_jsl._tf_graph_builders.graph_builders.AssertionTFGraphBuilder", "sparknlp_jsl._tf_graph_builders.graph_builders.GenericClassifierTFGraphBuilder", "sparknlp_jsl._tf_graph_builders.graph_builders.NerTFGraphBuilder", "sparknlp_jsl._tf_graph_builders.graph_builders.RelationExtractionTFGraphBuilder", "sparknlp_jsl._tf_graph_builders.graph_builders.TFGraphBuilder", "sparknlp_jsl._tf_graph_builders.graph_builders.TFGraphBuilderFactory", "sparknlp_jsl._tf_graph_builders.graph_builders.TensorflowAddonsNeeded", "sparknlp_jsl._tf_graph_builders.graph_builders.WrongTFVersion", "sparknlp_jsl.annotator", "sparknlp_jsl.annotator.AnnotationMerger", "sparknlp_jsl.annotator.AssertionDLApproach", "sparknlp_jsl.annotator.AssertionDLModel", "sparknlp_jsl.annotator.AssertionFilterer", "sparknlp_jsl.annotator.AssertionLogRegApproach", "sparknlp_jsl.annotator.AssertionLogRegModel", "sparknlp_jsl.annotator.AverageEmbeddings", "sparknlp_jsl.annotator.BertSentenceChunkEmbeddings", "sparknlp_jsl.annotator.Chunk2Token", "sparknlp_jsl.annotator.ChunkConverter", "sparknlp_jsl.annotator.ChunkFilterer", "sparknlp_jsl.annotator.ChunkFiltererApproach", "sparknlp_jsl.annotator.ChunkKeyPhraseExtraction", "sparknlp_jsl.annotator.ChunkMapperApproach", "sparknlp_jsl.annotator.ChunkMapperFiltererModel", "sparknlp_jsl.annotator.ChunkMapperModel", "sparknlp_jsl.annotator.ChunkMergeApproach", "sparknlp_jsl.annotator.ChunkMergeModel", "sparknlp_jsl.annotator.ChunkSentenceSplitter", "sparknlp_jsl.annotator.CommonResolverParams", "sparknlp_jsl.annotator.ContextualParserApproach", "sparknlp_jsl.annotator.ContextualParserModel", "sparknlp_jsl.annotator.DateNormalizer", "sparknlp_jsl.annotator.DeIdentification", "sparknlp_jsl.annotator.DeIdentificationModel", "sparknlp_jsl.annotator.DocumentLogRegClassifierApproach", "sparknlp_jsl.annotator.DocumentLogRegClassifierModel", "sparknlp_jsl.annotator.DrugNormalizer", "sparknlp_jsl.annotator.EntityChunkEmbeddings", "sparknlp_jsl.annotator.GenericClassifierApproach", "sparknlp_jsl.annotator.GenericClassifierModel", "sparknlp_jsl.annotator.IOBTagger", "sparknlp_jsl.annotator.MedicalBertForSequenceClassification", "sparknlp_jsl.annotator.MedicalBertForTokenClassifier", "sparknlp_jsl.annotator.MedicalDistilBertForSequenceClassification", "sparknlp_jsl.annotator.MedicalGraphBuilderModel", "sparknlp_jsl.annotator.MedicalNerApproach", "sparknlp_jsl.annotator.MedicalNerModel", "sparknlp_jsl.annotator.NerChunker", "sparknlp_jsl.annotator.NerConverterInternal", "sparknlp_jsl.annotator.NerDisambiguator", "sparknlp_jsl.annotator.NerDisambiguatorModel", "sparknlp_jsl.annotator.PosologyREModel", "sparknlp_jsl.annotator.RENerChunksFilter", "sparknlp_jsl.annotator.ReIdentification", "sparknlp_jsl.annotator.RelationExtractionApproach", "sparknlp_jsl.annotator.RelationExtractionDLModel", "sparknlp_jsl.annotator.RelationExtractionModel", "sparknlp_jsl.annotator.ResolverMerger", "sparknlp_jsl.annotator.Router", "sparknlp_jsl.annotator.SentenceEntityResolverApproach", "sparknlp_jsl.annotator.SentenceEntityResolverModel", "sparknlp_jsl.annotator.SentenceResolverParams", "sparknlp_jsl.annotator.TFGraphBuilder", "sparknlp_jsl.annotator.ZeroShotRelationExtractionModel", "sparknlp_jsl.base", "sparknlp_jsl.base.FeaturesAssembler", "sparknlp_jsl.training", "sparknlp_jsl.training.AnnotationToolJsonReader", "sparknlp_jsl.training.CantemistReader", "sparknlp_jsl.training.CodiEspReader", "API Reference"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "healthcar": [0, 1, 7, 8, 11], "commerci": 0, "extens": [0, 19], "clinic": [0, 13, 14, 16, 17, 19, 24, 27, 28, 35, 36, 39, 40, 43, 44, 45, 46, 50, 51, 55, 57, 58, 59, 66], "biomed": 0, "text": [0, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 28, 30, 32, 33, 34, 35, 36, 37, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 62, 63], "mine": 0, "If": [0, 8, 13, 15, 16, 22, 23, 24, 25, 26, 28, 29, 30, 32, 34, 35, 36, 37, 40, 41, 44, 46, 48, 51, 52, 57, 62, 65, 66], "you": [0, 8, 12, 13, 14, 25, 27, 30, 32, 33, 34, 35, 36, 61], "don": [0, 22, 23], "t": [0, 22, 23, 32, 33, 35, 36], "have": [0, 13, 23, 25, 27, 28, 29, 30, 31, 40, 48, 64], "subscript": 0, "yet": 0, "can": [0, 13, 14, 15, 16, 17, 22, 23, 24, 28, 32, 35, 36, 39, 40, 44, 45, 46, 48, 49, 52, 53, 66, 67], "ask": 0, "free": 0, "trial": 0, "click": 0, "button": 0, "below": 0, "try": [0, 34, 37, 41, 57, 62], "http": [0, 52, 53], "www": 0, "johnsnowlab": [0, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66], "com": [0, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66], "provid": [0, 13, 30, 32, 35, 36, 45, 48, 49, 50], "specif": [0, 8, 39, 40, 49, 65], "annot": [0, 3, 4, 5, 6, 7, 8, 67, 70], "pipelin": [0, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68], "model": [0, 1, 8, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 32, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 65, 66], "embed": [0, 3, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "entiti": [0, 12, 13, 14, 15, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 40, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 66], "recognit": [0, 45, 48, 49], "link": [0, 52, 53], "normal": [0, 32, 33, 34, 37, 39, 62, 63, 65], "assert": [0, 3, 13, 14, 15, 16, 17, 22, 23, 70], "statu": [0, 13, 14, 17], "detect": 0, "de": [0, 32, 35, 36], "identif": [0, 14, 17, 19, 24, 40, 49, 63], "relat": [0, 6, 25, 27, 40, 51, 54, 55, 57, 58, 59, 66], "extract": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "spell": 0, "check": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "correct": 0, "The": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68], "librari": [0, 1, 44, 45, 46], "offer": 0, "access": 0, "sever": [0, 14, 15, 35, 36], "transform": [0, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 66, 67, 68], "jsl": 0, "bert": [0, 19, 24, 40, 44, 45, 46, 48, 49, 58, 61, 66], "biobert": 0, "clinicalbert": 0, "glove": [0, 16], "med": 0, "icd": [0, 62, 63], "o": [0, 26, 43, 45, 51], "It": [0, 32, 35, 36, 41, 42, 48, 67], "also": [0, 44, 45, 46, 52, 53], "includ": [0, 13, 14, 48, 49, 51, 55, 63], "over": [0, 35, 36, 47, 65], "50": [0, 3, 4, 25, 27, 32, 33, 41, 48], "pre": 0, "train": [0, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 19, 22, 23, 28, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 57, 58, 59, 62, 63, 66, 67], "recogn": [0, 48, 51], "follow": [0, 32, 35, 36, 39, 48], "mani": [0, 30, 52, 53], "more": [0, 35, 36, 39, 44, 45, 46], "support": [0, 48], "sign": 0, "symptom": [0, 40], "treatment": [0, 66, 70], "procedur": 0, "test": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70], "lab": [0, 70], "section": [0, 57, 59], "drug": [0, 40, 66], "name": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "dosag": 0, "strength": 0, "rout": 0, "durat": 0, "frequenc": 0, "risk": 0, "factor": 0, "smoke": 0, "obes": 0, "diabet": [0, 19, 24], "hypertens": 0, "substanc": 0, "abus": 0, "anatomi": 0, "organ": [0, 45], "subdivis": 0, "cell": [0, 45, 48], "structur": [0, 66], "tissu": 0, "gene": 0, "chemic": 0, "demograph": 0, "ag": [0, 28, 35, 36, 43], "gender": [0, 28, 43], "height": 0, "weight": [0, 19, 31, 40, 65], "race": 0, "ethnic": 0, "marit": 0, "vital": 0, "sensit": [0, 19, 32, 33, 54, 55, 59], "data": [0, 13, 14, 15, 19, 22, 23, 24, 28, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 62, 63, 65, 67], "patient": [0, 14, 22, 23, 32, 33], "address": [0, 19, 24, 27, 40, 44, 45, 46, 50, 66], "phone": 0, "email": 0, "date": [0, 12, 30, 34, 35, 36, 61], "identifi": [0, 21, 28, 29, 30, 61], "For": [0, 15, 19, 35, 36, 43, 44, 45, 48, 49, 58, 66], "inform": [0, 1, 28, 32, 33, 35, 36], "visit": 0, "our": 0, "site": [0, 32, 33], "built": 0, "top": [0, 24, 44, 45, 46], "apach": 0, "x": [0, 34], "us": [0, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "need": [0, 16, 17, 19, 32, 35, 36, 50, 57, 59], "java": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "8": [0, 44, 45, 46, 48, 49], "1": [0, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70], "2": [0, 3, 4, 5, 6, 13, 16, 19, 22, 23, 24, 25, 27, 28, 32, 33, 35, 37, 39, 40, 41, 48, 52, 57, 62, 65, 70, 71, 72], "4": [0, 13, 22, 23, 24, 52, 53, 55, 58, 59], "ar": [0, 15, 19, 24, 26, 28, 29, 30, 35, 36, 37, 40, 41, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 57, 59, 61, 62, 65, 66], "pyspark": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "6": [0, 3, 5, 55], "7": [0, 34], "recommend": [0, 52, 53], "basic": 0, "knowledg": [0, 31, 52, 53], "framework": 0, "work": [0, 48], "environ": 0, "befor": [0, 16, 17, 24, 31, 48], "pleas": [0, 44, 45, 49, 58], "refer": [0, 1, 14, 17, 19, 24, 35, 36, 40, 49, 57, 63], "document": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "first": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "let": [0, 24], "s": [0, 13, 15, 16, 19, 23, 25, 28, 31, 32, 35, 36, 37, 41, 48, 52, 53, 57, 62, 63, 64, 65], "make": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "sure": [0, 35, 36], "version": [0, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "oracl": 0, "openjdk": 0, "0_292": 0, "packag": 0, "pip": 0, "extra": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "index": [0, 13, 16, 23, 25, 28, 32, 35, 37, 41, 48, 52, 57, 62, 63, 65], "url": 0, "pypi": 0, "secret": 0, "code": [0, 33, 62], "upgrad": 0, "part": 0, "split": [0, 30, 41, 57], "i": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "e": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "onli": [0, 24, 25, 27, 48], "avail": [0, 8, 11, 44, 45, 49], "user": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "valid": [0, 13, 41, 48, 55, 57], "licens": 0, "did": 0, "receiv": 0, "contact": 0, "href": 0, "mailto": 0, "info": 0, "thi": [0, 1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 73], "simpl": 0, "piec": [0, 30], "import": [0, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 19, 22, 23, 28, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 57, 58, 59, 62, 63, 67, 70], "sparknlp_jsl": 0, "Or": 0, "sparksess": [0, 19, 24, 40, 44, 45, 46, 63, 66], "modul": [0, 1, 11, 35, 36, 49], "flexibl": 0, "sql": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "builder": [0, 65], "appnam": 0, "enterpris": 0, "master": 0, "local": [0, 19, 24, 40, 44, 45, 46, 66], "config": 0, "driver": 0, "memori": [0, 44, 45, 46], "16": 0, "maxresults": 0, "2g": 0, "jar": 0, "nlp_2": 0, "11": [0, 16, 22, 23, 34, 35, 36], "version_publ": 0, "getorcr": 0, "main": [1, 17], "page": [1, 39, 73], "workshop": [1, 48, 49], "hub": [1, 44, 45, 49], "welcom": 1, "python": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "contain": [1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "how": [1, 15, 24, 28, 41, 44, 45, 46, 48, 51, 52, 53, 57], "exampl": [1, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 28, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 62, 63, 66, 67, 70], "get": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "start": [1, 3, 13, 16, 17, 28, 29, 48, 57, 59, 62], "requir": [1, 13, 14, 17, 19, 24, 37, 40, 44, 45, 46, 49], "instal": 1, "session": 1, "from": [1, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72], "api": 1, "class": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "except": [2, 9, 10, 48], "build_param": [3, 4, 5, 6, 7, 8], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72], "base": [3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72], "tfgraphbuild": [3, 4, 5], "build": [3, 4, 5, 6, 8], "tf": [3, 4, 5, 6, 8, 44, 45, 46, 66], "graph": [3, 4, 5, 6, 7, 8, 13, 48, 57, 59, 65], "assertiondlapproach": [3, 65], "tf_graph": [3, 4, 5, 6, 7, 8], "sparknlp": [3, 4, 5, 6, 13, 14, 15, 16, 17, 19, 22, 23, 24, 28, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 57, 58, 59, 62, 63, 67], "feat_siz": [3, 5], "200": [3, 4, 5, 6, 57], "n_class": [3, 5, 8], "assertion_dl": [3, 7, 8, 14], "model_loc": [3, 4, 5, 6, 8], "model_filenam": [3, 4, 5, 6, 8], "blstm_34_32_30_": 3, "_": 3, "pb": [3, 4, 8, 41, 57, 59], "format": [3, 28, 32, 34, 35, 36, 43, 48, 51, 57, 59], "setlabelcol": [3, 13, 16, 17, 41, 57, 62, 63], "label": [3, 5, 13, 14, 16, 17, 26, 28, 35, 36, 37, 38, 41, 43, 44, 45, 46, 48, 49, 51, 54, 57, 58, 59, 60, 62, 63, 65, 66], "setinputcol": [3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68], "chunk": [3, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 43, 50, 51, 52, 53, 55, 57, 58, 59, 61, 62, 63, 64, 66], "setoutputcol": [3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68], "setbatchs": [3, 4, 5, 6, 13, 19, 24, 40, 41, 44, 45, 46, 48, 49, 57, 58, 66], "128": [3, 13, 44, 45, 46, 66], "setdropout": [3, 13, 41, 48, 57], "setlearningr": [3, 4, 6, 13, 41, 57], "001": [3, 4, 6, 41, 48, 57], "setepoch": [3, 13], "setvalidationsplit": [3, 4, 5, 6, 13, 41, 48, 57], "setstartcol": [3, 13, 16], "setendcol": [3, 13, 16], "end": [3, 13, 16, 17, 28, 29, 34, 43, 48, 57], "setmaxsentlen": [3, 13], "250": [3, 13, 40], "setenableoutputlog": [3, 5, 13, 48], "true": [3, 4, 5, 6, 24, 30, 32, 34, 35, 36, 37, 41, 44, 45, 46, 48, 52, 53, 57, 62, 63, 66, 67, 70], "setoutputlogspath": [3, 4, 5, 13, 41, 48, 57], "training_log": 3, "setgraphfold": [3, 5, 13, 48, 65], "method": [3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73], "creat": [4, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "genericclassifierapproach": [4, 57], "datafram": [4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "pd": 4, "read_csv": 4, "petfind": 4, "mini": 4, "csv": [4, 23, 32, 35, 67], "dl_param": 4, "input_dim": [4, 6], "302": 4, "output_dim": [4, 6], "hidden_lay": [4, 6], "300": [4, 6, 57], "100": [4, 41], "hidden_act": [4, 6], "tanh": [4, 65], "hidden_act_l2": [4, 6], "batch_norm": [4, 6], "generic_classifi": [4, 7, 8, 41, 42], "content": 4, "gc_graph": 4, "auto": [4, 5, 8, 65], "gen_clf": [4, 37, 41, 42], "setlabelcolumn": [4, 5, 6, 37, 41, 48, 57, 65], "target": [4, 13, 14, 16, 17, 40, 41, 52, 53, 54, 58, 59], "featur": [4, 16, 41, 42, 57, 67], "predict": [4, 13, 37, 41, 42, 48, 49, 52, 53, 57], "setmodelfil": [4, 6, 41, 57, 59], "gcl": 4, "setepochsnumb": [4, 6, 41, 57], "setfeaturesc": [4, 41, 57], "zscore": [4, 41, 57], "setfiximbal": [4, 6, 41, 57], "log": [4, 13, 16, 41, 48, 57], "clf_pipelin": 4, "stage": [4, 13, 14, 15, 16, 17, 21, 22, 23, 28, 32, 33, 35, 36, 39, 43, 50, 51, 52, 53, 55, 57, 58, 59, 62, 63], "features_asm": [4, 41, 42], "medicalnerapproach": [5, 65], "ner_dl": [5, 7, 8, 49], "embeddings_dim": 5, "nchar": 5, "83": 5, "ntag": 5, "12": 5, "is_med": 5, "medical_ner_graph": 5, "nertagg": [5, 19, 48, 49, 57, 58, 59], "sentenc": [5, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 27, 28, 30, 32, 33, 35, 36, 39, 40, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 58, 60, 61, 62, 63, 64, 66], "token": [5, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 62, 63, 64, 66], "ner": [5, 14, 16, 17, 19, 24, 28, 35, 36, 43, 45, 48, 49, 50, 51, 52, 53, 66], "setmaxepoch": [5, 48], "64": [5, 22, 23, 28, 43, 48], "setrandomse": [5, 48], "setverbos": [5, 13, 48], "setevaluationlogextend": [5, 13, 48], "setincludeconfid": [5, 13, 14, 48, 49], "ner_log": 5, "setenablememoryoptim": [5, 48], "genericclassifiertfgraphbuild": 6, "relationextractionapproach": [6, 65], "relation_extract": [6, 7, 8], "6000": 6, "relu": [6, 65], "re_with_bn": 6, "re_approach": 6, "rel": [6, 19, 25, 27, 34, 40], "pos_tag": [6, 55, 59], "train_ner_chunk": [6, 57], "depend": [6, 12, 26, 30, 40, 49, 55, 57, 58, 59, 60, 61], "70": [6, 22, 23], "setfroment": [6, 57], "begin1i": 6, "end1i": 6, "label1": 6, "settoent": [6, 57], "begin2i": 6, "end2i": 6, "label2": 6, "object": [7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "gener": [7, 8, 24, 41, 42, 48, 49, 57, 70], "tensorflow": [7, 8, 13, 14, 19, 24, 40, 41, 44, 45, 46, 48, 49, 57, 59, 66], "spark": [7, 8, 11, 12, 13, 14, 19, 21, 22, 23, 24, 27, 28, 32, 33, 34, 35, 36, 39, 40, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 58, 59, 61, 63, 66, 67, 70, 71, 72, 73], "nlp": [7, 8, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 73], "In": [7, 24, 32, 33, 58], "get_model": [7, 8], "factori": 8, "differ": [8, 24, 28, 55, 67], "static": [8, 19, 24, 27, 40, 44, 45, 46, 66], "model_nam": 8, "paramet": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "str": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "want": [8, 12, 13, 14, 25, 27, 30, 32, 33, 35, 36, 39, 52, 53, 61], "dict": [8, 28, 32, 35, 40, 48, 51, 54, 57, 58, 59, 66], "configur": 8, "param": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "path": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70], "where": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "save": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "rb": 8, "file": [8, 13, 28, 32, 33, 35, 36, 41, 48, 57, 65], "put": [8, 30, 52, 53], "filenam": 8, "10": [8, 39, 62, 63], "tmp": 8, "return": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "print_model_param": 8, "allow": [8, 30, 44, 45, 46, 48, 61], "descript": [8, 24, 62], "everi": [8, 49], "all": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 73], "baseclass": 11, "classnam": [12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66], "java_model": [12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29, 30, 33, 34, 36, 38, 40, 42, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66], "none": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70], "annotatormodel": [12, 14, 15, 17, 18, 20, 21, 22, 26, 27, 29, 30, 33, 34, 36, 38, 39, 42, 43, 44, 45, 46, 49, 50, 51, 53, 55, 56, 58, 59, 60, 61, 63], "merg": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "multipl": [12, 40, 66], "column": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68], "input": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "type": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "output": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68], "ani": [12, 28, 48, 61], "inputtyp": [12, 30, 61], "possibl": [12, 13, 15, 22, 23, 28, 29, 30, 32, 41, 57, 61, 65], "valu": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "wordpiec": [12, 30, 61], "word_embed": [12, 13, 14, 16, 17, 30, 48, 49, 52, 53, 57, 59, 61], "sentence_embed": [12, 19, 30, 40, 52, 53, 61, 62, 63], "categori": [12, 30, 37, 38, 41, 42, 44, 46, 57, 58, 59, 61, 66], "sentiment": [12, 30, 61], "po": [12, 22, 23, 30, 48, 57, 59, 61, 70], "named_ent": [12, 30, 43, 45, 48, 49, 50, 51, 61], "regex": [12, 15, 21, 22, 23, 30, 32, 33, 35, 36, 39, 50, 61], "labeled_depend": [12, 25, 27, 30, 61], "languag": [12, 19, 24, 27, 30, 35, 36, 40, 44, 45, 46, 61, 66], "keyword": [12, 30, 61], "doc": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "test_data": [12, 21, 61], "createdatafram": [12, 14, 19, 21, 22, 23, 24, 28, 32, 33, 34, 35, 36, 39, 43, 44, 45, 46, 49, 51, 52, 53, 58, 59, 61], "todf": [12, 14, 19, 21, 22, 23, 24, 28, 32, 33, 34, 35, 36, 39, 43, 44, 45, 46, 49, 51, 52, 53, 55, 58, 59, 61], "document1": 12, "documentassembl": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 28, 30, 32, 33, 34, 35, 36, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 62, 63], "document2": 12, "annotation_merg": 12, "setinputtyp": [12, 61], "all_doc": 12, "setstag": [12, 19, 24, 30, 37, 41, 42, 44, 45, 46, 48, 49, 61, 67], "fit": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 28, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 55, 57, 58, 59, 62, 63, 65, 67], "lp": 12, "lightpipelin": 12, "fullannot": 12, "one": [12, 13, 16, 19, 23, 25, 28, 32, 35, 37, 39, 40, 41, 44, 46, 48, 51, 52, 57, 62, 65, 66], "replic": 12, "23": [12, 21], "attribut": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "clear": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "map": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "ha": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "been": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "explicitli": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "set": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70], "copi": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "instanc": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "same": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "uid": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "some": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "implement": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "call": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "companion": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "compon": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "so": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "both": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "wrapper": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "new": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "explainparam": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "explain": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "singl": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68], "its": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "option": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68], "default": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "suppli": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "string": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "extractparammap": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "them": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "flat": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "latter": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "exist": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "conflict": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "order": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "getinputcol": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66], "current": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66], "getlazyannot": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66], "whether": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "should": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66], "evalu": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66], "lazili": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66], "recursivepipelin": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66], "getordefault": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "rais": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "an": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73], "error": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "neither": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "getoutputcol": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66], "getparam": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "paramnam": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "getparamvalu": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "hasdefault": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "hasparam": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "given": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "isdefin": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "isset": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "classmethod": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "load": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "read": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68], "ml": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "shortcut": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "properti": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "dir": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "mlreader": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "write": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "filter": [12, 15, 22, 23, 26, 30, 51, 55, 61], "int": [12, 13, 14, 19, 24, 31, 34, 35, 36, 37, 40, 41, 44, 45, 46, 48, 49, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66], "setlazyannot": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66], "bool": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66], "setparamvalu": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "dataset": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "which": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68], "overrid": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "A": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "uniqu": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "id": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68], "mlwriter": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68], "annotatorapproach": [13, 16, 23, 25, 28, 32, 35, 37, 41, 48, 52, 62], "algorithm": [13, 16, 37, 38], "deep": [13, 14], "learn": [13, 14, 41, 48, 57], "assertionlogregmodel": 13, "obtain": [13, 14, 17, 66], "g": [13, 14, 17, 24, 39, 40, 44, 45, 46, 48, 54, 59, 62, 63], "term": [13, 22, 23, 35, 36, 37], "per": [13, 16, 30, 41, 44, 46, 48, 52, 53, 66], "present": [13, 14, 15, 28, 43, 51, 62], "absent": [13, 14, 15, 70], "hypothet": [13, 14, 15], "condit": 13, "associated_with_other_person": 13, "etc": [13, 62, 63], "startcol": [13, 16, 17], "number": [13, 16, 17, 24, 31, 35, 36, 37, 41, 48, 49, 57, 58, 62, 63, 64, 65], "endcol": [13, 16, 17], "olumn": 13, "batchsiz": [13, 41, 44, 45, 46, 48, 49, 58], "size": [13, 19, 24, 40, 41, 44, 45, 46, 48, 49, 57, 65, 66], "each": [13, 16, 19, 23, 24, 25, 28, 32, 35, 36, 37, 41, 48, 52, 57, 62, 65, 66], "batch": [13, 19, 24, 40, 41, 44, 45, 46, 48, 49, 57, 65, 66], "optim": [13, 41, 48, 57], "process": [13, 15, 19, 22, 23, 24, 28, 40, 41, 44, 45, 46, 49, 51, 54, 55, 57, 58, 59, 62, 66], "epoch": [13, 41, 48, 57], "learningr": [13, 41], "rate": [13, 41, 48, 57], "dropout": [13, 41, 48, 57], "layer": [13, 41, 44, 45, 46, 57, 65], "maxsentlen": [13, 14], "max": [13, 14, 16, 19, 24, 31, 40, 44, 45, 46, 66], "length": [13, 14, 16, 17, 19, 24, 28, 35, 36, 40, 44, 45, 46, 52, 53, 65, 66], "graphfold": [13, 48], "folder": [13, 19, 24, 40, 41, 44, 45, 46, 48, 57, 65, 66], "extern": [13, 28, 48, 51, 65], "graphfil": 13, "configprotobyt": [13, 14, 44, 45, 46, 48, 49], "configproto": [13, 14, 19, 24, 40, 44, 45, 46, 48, 49, 66], "serial": [13, 14, 19, 24, 40, 44, 45, 46, 48, 49, 66], "byte": [13, 14, 19, 24, 40, 44, 45, 46, 48, 49, 66], "arrai": [13, 14, 19, 24, 35, 36, 37, 38, 40, 44, 45, 46, 48, 49, 50, 66, 67], "config_proto": 13, "serializetostr": 13, "validationsplit": [13, 41, 48], "choos": [13, 48], "proport": [13, 48], "against": [13, 24, 48], "between": [13, 19, 35, 36, 40, 48, 50, 55, 58, 66], "off": [13, 48], "evaluationlogextend": [13, 48], "select": [13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 44, 45, 46, 58, 59, 62, 63, 64], "mode": [13, 35, 36, 41, 57], "eval": 13, "testdataset": [13, 48], "calcul": [13, 31, 48, 62, 63, 64], "statist": [13, 48], "dure": [13, 48, 49, 52, 53], "includeconfid": [13, 48, 49], "confid": [13, 14, 15, 23, 25, 27, 31, 48, 49, 51, 62, 63, 64, 66], "score": [13, 14, 48, 49, 66], "metadata": [13, 14, 21, 24, 28, 30, 31, 32, 33, 34, 43, 48, 49, 52, 53, 55, 58, 59, 61], "enableoutputlog": [13, 48], "outputlogspath": [13, 41, 48], "verbos": [13, 48], "level": [13, 15, 24, 33, 48], "scopewindow": [13, 14], "scope": [13, 14], "window": [13, 14, 48], "express": [13, 14, 15, 22, 23, 35, 36], "document_assembl": [13, 16, 17, 21, 34, 37, 50], "sentence_detector": [13, 16, 17, 21, 50], "sentencedetector": [13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 28, 30, 32, 33, 35, 36, 43, 48, 49, 50, 51, 52, 53, 55, 61, 62, 63], "wordembeddingsmodel": [13, 14, 16, 17, 19, 24, 28, 35, 36, 43, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59], "pretrain": [13, 14, 16, 17, 19, 22, 23, 24, 27, 28, 35, 36, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 61, 62, 63, 66], "embeddings_clin": [13, 14, 16, 17, 24, 28, 35, 36, 43, 50, 51, 55, 57, 58, 59], "en": [13, 14, 16, 17, 19, 24, 27, 28, 35, 36, 40, 43, 44, 45, 46, 50, 51, 52, 53, 55, 57, 58, 59, 62, 63, 66], "setcasesensit": [13, 17, 19, 24, 31, 32, 33, 37, 40, 44, 45, 46, 50, 61, 62, 63, 64, 66], "fals": [13, 14, 15, 17, 19, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 48, 49, 50, 52, 53, 55, 58, 59, 61, 62, 63, 66], "chunker": [13, 15, 16, 17, 21, 22, 23, 25, 26, 27, 30, 50], "setchunkcol": [13, 16, 17, 50], "012": 13, "015": 13, "setscopewindow": [13, 14], "assertionpipelin": [13, 14, 15, 16, 17, 62, 63], "assertionmodel": [13, 14, 15, 16, 17, 62, 63], "list": [13, 14, 15, 16, 19, 22, 23, 24, 25, 28, 29, 32, 35, 36, 37, 38, 40, 41, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 59, 61, 62, 65, 66, 73], "tupl": [13, 16, 23, 25, 28, 32, 35, 37, 41, 48, 52, 57, 62, 65], "fitmultipl": [13, 16, 23, 25, 28, 32, 35, 37, 41, 48, 52, 57, 62, 65], "parammap": [13, 16, 23, 25, 28, 32, 35, 37, 41, 48, 52, 57, 62, 65], "sequenc": [13, 16, 23, 25, 28, 32, 35, 36, 37, 41, 44, 46, 48, 52, 57, 62, 65, 66], "thread": [13, 16, 23, 25, 28, 32, 35, 37, 41, 48, 52, 57, 62, 65], "safe": [13, 16, 23, 25, 28, 32, 35, 37, 41, 48, 52, 57, 62, 65], "iter": [13, 16, 23, 25, 28, 32, 35, 37, 41, 48, 52, 57, 62, 65], "next": [13, 16, 23, 25, 28, 32, 34, 35, 37, 41, 48, 52, 57, 62, 65], "modeliter": [13, 16, 23, 25, 28, 32, 35, 37, 41, 48, 52, 57, 62, 65], "wa": [13, 14, 16, 22, 23, 25, 28, 30, 32, 35, 37, 41, 48, 52, 57, 62, 65], "mai": [13, 16, 23, 25, 28, 32, 33, 35, 37, 41, 48, 52, 57, 62, 65], "sequenti": [13, 16, 23, 25, 28, 32, 35, 37, 41, 48, 52, 57, 62, 65], "setconfigprotobyt": [13, 19, 24, 40, 44, 45, 46, 48, 49, 66], "b": [13, 19, 24, 28, 29, 40, 43, 44, 45, 46, 48, 49, 50, 51, 54, 59, 66], "float": [13, 19, 24, 31, 35, 36, 37, 40, 41, 48, 51, 52, 53, 54, 57, 58, 59, 62, 63, 64, 67], "enabl": [13, 15, 22, 23, 48], "srt": [13, 65], "row": [13, 30], "v": [13, 19, 24, 29, 40, 44, 45, 46, 48, 49, 66], "extend": [13, 48, 49], "setgraphfil": [13, 48, 65], "when": [13, 28, 29, 30, 32, 33, 35, 36, 48, 50, 62], "specifi": [13, 37, 40, 41, 43, 48, 57, 59, 66], "search": [13, 48, 52, 53, 63], "happen": [13, 48], "p": [13, 14, 25, 31, 39, 48, 51], "waht": [13, 14], "lamda": [13, 41, 57], "left": [13, 14, 55, 58, 59], "right": [13, 14, 19, 24, 55, 58, 59], "offset": [13, 14], "must": [13, 14, 16, 26], "non": [13, 14, 39, 40], "neg": [13, 14], "settestdataset": [13, 48], "read_a": [13, 28, 32, 35, 48, 51], "dl": 14, "hasstorageref": [14, 17, 49], "assertiondl": 14, "approach": [14, 25, 27, 47, 65], "targetnerlabel": [14, 16, 17], "mark": [14, 16, 24], "match": [14, 16, 19, 24, 28, 29, 31, 32, 33, 35, 36, 40, 44, 45, 46, 50, 52, 53, 62, 63, 64, 66], "tag": [14, 15, 22, 23, 35, 36, 43, 48, 49, 50, 51], "common": [14, 15, 19, 22, 23, 28, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 48, 49, 51, 57, 58, 59, 62, 63, 64, 67], "fever": [14, 15], "sore": [14, 15], "throat": [14, 15], "show": [14, 15, 19, 22, 23, 24, 28, 30, 32, 33, 35, 36, 39, 43, 44, 45, 46, 52, 53, 55, 58, 59, 70], "stomach": [14, 15, 22, 23], "pain": [14, 15, 22, 23], "she": 14, "maintain": 14, "epidur": [14, 15], "pca": [14, 15], "control": [14, 15], "nermodel": [14, 15, 43, 49, 51], "medicalnermodel": [14, 24, 28, 35, 36, 43, 48, 50, 51, 55, 57, 58, 59], "ner_clin": 14, "nerconvert": [14, 15, 19, 24, 28, 35, 36, 43, 51, 52, 53, 55, 57, 58, 59], "ner_chunk": [14, 15, 19, 24, 34, 35, 36, 43, 50, 51, 52, 53, 55, 58, 59], "clinicalassert": [14, 15], "result": [14, 15, 19, 22, 23, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 53, 55, 57, 58, 59, 66, 67], "selectexpr": [14, 15, 19, 22, 23, 24, 28, 32, 33, 34, 39, 43, 52, 53, 55, 58, 59], "truncat": [14, 15, 19, 22, 23, 24, 32, 33, 35, 36, 39, 44, 45, 46, 55, 58, 59], "getstorageref": [14, 17, 19, 24, 40, 49, 63], "setstorageref": [14, 17, 19, 24, 40, 49, 63], "come": [15, 22, 23, 24, 28, 62, 63], "via": [15, 22, 23], "white": [15, 22, 23], "regular": [15, 16, 22, 23, 35, 36, 65], "To": [15, 22, 23, 44, 45, 46, 57, 59], "criteria": [15, 22, 23, 28], "isin": [15, 22, 23], "whitelist": [15, 22, 23, 51], "defin": [15, 16, 17, 22, 23, 28, 29, 32, 33, 37, 51, 55], "rest": [15, 22, 23, 28, 29, 51], "ignor": [15, 19, 22, 23, 24, 28, 29, 31, 35, 36, 40, 44, 45, 46, 51, 62, 63, 64, 66], "repres": [15, 22, 23, 24, 35, 36], "what": [15, 22, 23, 26, 28, 29, 31, 57, 62, 63, 64], "entitiesconfid": [15, 23], "pair": [15, 22, 23, 28, 43, 51, 54, 55, 58, 59, 66], "remov": [15, 24, 39], "see": [15, 34, 44, 45, 46, 48, 49, 57, 58, 59], "assertiondlmodel": 15, "step": 15, "setcriteria": [15, 22, 23], "setwhitelist": [15, 22, 23, 51, 52, 53], "dash": [15, 23, 54, 55, 59], "separ": [15, 23, 24, 35, 54, 55, 59], "setregex": [15, 23], "llist": [15, 23], "regress": [16, 17, 37, 38, 44, 46], "exclud": [16, 17, 48], "done": [16, 17, 48], "maxit": [16, 37], "regparam": 16, "enetparam": 16, "elast": 16, "net": 16, "beforeparam": [16, 17], "context": [16, 17, 19, 24, 33], "afterparam": [16, 17], "after": [16, 17, 31, 34, 37, 44, 45, 46], "externalfeatur": 16, "addit": [16, 35, 36, 48, 62, 63], "dictionari": [16, 25, 27, 28, 30, 32, 35, 40, 51, 54, 57, 58, 59, 61, 66], "nercol": [16, 17], "either": [16, 17, 24, 43], "Then": [16, 17, 48, 52, 53], "setreg": 16, "01": [16, 34, 35, 36], "setbefor": 16, "setaft": 16, "13": [16, 35, 36, 39], "logreg": [17, 37], "assertionlogreg": 17, "famili": [17, 31, 64], "logarithm": [17, 37, 38], "assertionlogregapproach": 17, "assertionpretrain": 17, "bertsentenceembed": [19, 24, 40, 61, 62, 63], "take": [19, 35, 36, 41, 42, 44, 46, 67], "account": 19, "appear": [19, 35, 36], "combin": [19, 55], "surround": [19, 35, 36], "find": [19, 24], "correspond": [19, 24, 35, 36, 52, 53], "comput": [19, 24], "averag": [19, 24, 31, 40, 44, 46, 66], "case": [19, 24, 25, 27, 31, 32, 33, 39, 40, 44, 45, 46, 48, 49, 54, 55, 59, 62, 63, 64, 66], "numer": [19, 67], "represent": [19, 32, 51], "chunkweight": 19, "comparison": 19, "5": [19, 22, 23, 28, 32, 33, 35, 36, 39, 43, 48, 52, 53, 58], "mean": [19, 33, 34, 40, 48], "equal": [19, 40], "prerequisit": [19, 48], "nerdlmodel": [19, 48, 49, 52, 53], "medicalnerdlmodel": [19, 49], "sbluebert_base_uncased_mli": 19, "sentence_chunk_embed": 19, "her": [19, 24], "becom": [19, 24], "last": [19, 24, 31, 62, 63, 64], "year": [19, 24, 28, 34, 35, 36, 43, 51], "he": [19, 24], "complain": [19, 24], "swell": [19, 24], "hi": [19, 24], "forearm": [19, 24], "explod": [19, 22, 23, 24, 28, 32, 33, 39, 43, 52, 53, 55, 58, 59], "AS": [19, 24], "slice": 19, "averageembed": 19, "31995273": 19, "04710883": 19, "28973156": 19, "1294758": 19, "12481072": 19, "027161136": 19, "24613449": 19, "0949309": 19, "1825444": 19, "2252143": 19, "45139068": 19, "12400375": 19, "0075617577": 19, "90806055": 19, "12871636": 19, "getbatchs": [19, 24, 40, 44, 45, 46, 49, 66], "getcasesensit": [19, 24, 31, 40, 44, 45, 46, 62, 63, 64, 66], "getdimens": [19, 24, 40, 63], "dimens": [19, 24, 40, 63], "loadsavedmodel": [19, 24, 40, 44, 45, 46, 66], "spark_sess": [19, 24, 40, 44, 45, 46, 66], "restor": [19, 24, 27, 40, 44, 45, 46, 48, 66], "sent_small_bert_l2_768": [19, 24, 40], "lang": [19, 24, 27, 40, 44, 45, 46, 66], "remote_loc": [19, 24, 27, 40, 44, 45, 46, 66], "download": [19, 24, 27, 40, 44, 45, 46, 66], "remot": [19, 24, 27, 40, 44, 45, 46, 66], "resourc": [19, 21, 24, 27, 28, 30, 40, 44, 45, 46, 48, 51, 61, 66, 67, 70], "Will": [19, 24, 27, 40, 44, 45, 46, 66], "repositori": [19, 24, 27, 40, 44, 45, 46, 66], "otherwis": [19, 24, 27, 35, 36, 40, 44, 45, 46, 66, 67], "setchunkweight": 19, "setdimens": [19, 24, 40, 63], "setislong": [19, 24, 40], "long": [19, 24, 40], "instead": [19, 24, 40, 44, 46, 66], "buffer": [19, 24, 40], "setmaxsentencelength": [19, 24, 40, 44, 45, 46, 61, 66], "convert": [21, 39, 51, 61], "regexmatch": [21, 30, 32, 33, 61], "field": [21, 28, 29, 30, 32, 33, 34, 61, 67], "my": 21, "rule": [21, 32, 33], "second": 21, "ceremoni": 21, "regex_match": 21, "setexternalrul": [21, 30, 61], "src": [21, 30, 48, 61, 70], "matcher": [21, 61], "txt": [21, 30, 35, 61, 70], "delimit": [21, 28], "outdf": 21, "col": [21, 22, 23, 32, 33, 52, 53, 62, 63], "31": 21, "71": 21, "80": 21, "chunkfiltererapproach": 22, "confidencethreshold": [22, 23], "past": [22, 23], "histori": [22, 23], "gastroenter": [22, 23], "howev": [22, 23], "docassembl": [22, 23], "postagg": [22, 23, 57, 58, 59], "perceptronmodel": [22, 23, 55, 57, 58, 59], "setregexpars": [22, 23, 50], "nn": [22, 23, 50], "chunkerfilt": [22, 23], "17": [22, 23, 28, 43], "22": [22, 23, 25, 27], "36": [22, 23], "42": [22, 23], "53": [22, 23], "81": [22, 23, 55], "110": [22, 23, 28, 43], "now": [22, 23], "we": [22, 23, 25, 26, 27, 30, 32, 35, 36, 37, 41, 52, 53, 57, 62], "care": [22, 23], "118": [22, 23], "132": [22, 23], "lower": [23, 25, 27, 39, 49], "than": [23, 35, 36], "threshold": [23, 31, 35, 36, 51, 52, 53, 54, 58, 59, 62, 63, 64], "setfilterent": 23, "keyphras": 24, "determin": [24, 55, 59, 66], "most": [24, 48, 49], "relev": 24, "kei": [24, 25, 27, 30, 61, 66], "phrase": [24, 50], "describ": 24, "consist": [24, 35, 36, 66], "compar": 24, "broader": 24, "thei": [24, 49], "belong": 24, "candid": [24, 52, 53], "variou": 24, "wai": 24, "ngramgener": 24, "textmatch": 24, "oper": 24, "topn": [24, 52, 53], "selectmostdiffer": 24, "other": [24, 28, 40], "diverg": 24, "maxim": [24, 40, 54, 59], "margin": 24, "mmr": 24, "conjunct": 24, "aim": 24, "achiev": [24, 48, 49], "goal": 24, "documentlevelprocess": 24, "whole": 24, "particular": [24, 62, 63, 66], "concatenatesent": 24, "concaten": 24, "ner_tagg": 24, "ner_jsl_slim": 24, "ner_tag": [24, 55, 57, 58, 59], "ner_convert": [24, 52, 53], "key_phrase_extractor": 24, "settopn": 24, "setdocumentlevelprocess": 24, "setdiverg": 24, "ner_chunk_key_phras": 24, "key_phras": 24, "documentsimilar": 24, "mmrscore": 24, "gestat": 24, "mellitu": 24, "28": 24, "old": [24, 28, 35, 36, 43, 48, 51, 54, 57, 58, 59], "two": [24, 28, 29, 35, 36], "7391447825527298": 24, "4366776288430703": 24, "7323921930094919": 24, "44348688715422274": 24, "13577881610104517": 24, "085800103824974": 24, "sbert_jsl_medium_uncas": 24, "setconcatenatesent": 24, "vector": [24, 37, 38, 41, 42, 67], "boolean": [24, 30, 35, 36, 54, 55, 59, 65], "interv": 24, "setselectmostdiffer": 24, "constraint": 24, "setdroppunctu": 24, "punctuat": 24, "affect": 24, "n": [24, 49, 52, 53], "paramt": 24, "sens": 24, "integ": [24, 35, 36], "mapper": [25, 27], "jsondictionari": [25, 27], "chunkmappermodel": 25, "label_depend": [25, 26, 27, 60], "json": [25, 27, 32, 33, 70], "mappinmg": [25, 27], "go": [25, 27], "lowercas": [25, 27, 39], "decid": [25, 27], "35": [25, 27, 55], "analges": [25, 27], "action": [25, 27], "56995": [25, 27], "all_rel": [25, 27], "antipyret": [25, 27], "warfarina": [25, 27], "lusa": [25, 27], "41": [25, 27, 55], "amlodipin": [25, 27], "9989": [25, 27], "55": [25, 27], "56": [25, 27], "mg": [25, 27, 40], "9123": [25, 27], "setallowmultitokenchunk": [25, 27], "mc": [25, 27], "skyp": 25, "multitoken": 25, "send": [25, 27], "multi": [25, 27, 44, 45, 46], "setdictionari": [25, 32], "bow": [25, 32, 52, 53], "word": [25, 31, 32, 35, 36, 43, 52, 53], "setlowercas": [25, 27, 39], "lc": [25, 27], "setmultivaluesrel": [25, 27], "chunkmapperfilter": 26, "kind": 26, "setreturncriteria": 26, "fail": [26, 67], "success": 26, "contextualpars": [28, 32, 33], "produc": [28, 29], "merger": 28, "made": 28, "accord": 28, "certain": [28, 50], "decis": 28, "indic": [28, 29, 41, 57], "longer": 28, "highest": [28, 48], "kept": 28, "chang": [28, 70, 71, 72], "setreplacedictresourc": [28, 51], "mergeoverlap": [28, 29], "overlap": [28, 29], "falsepositivesresourc": 28, "posit": [28, 51], "replacedictresourc": 28, "replac": [28, 35, 36, 51], "chunkpreced": [28, 29], "preced": [28, 29], "blacklist": [28, 29, 35, 36, 51], "proccess": [28, 29, 51], "63": [28, 43, 51], "man": [28, 43, 51], "hospit": [28, 43, 51], "emb": [28, 43, 51], "ner_jsl": [28, 43, 51], "jsl_ner": 28, "jsl_ner_chunk": 28, "ner_bionlp": 28, "bionlp_ner": 28, "bionlp_ner_chunk": 28, "merged_chunk": 28, "cach": [28, 62, 63, 67], "begin": [28, 34, 43, 55, 57, 62], "15": [28, 34, 43], "19": [28, 43], "72": [28, 43], "recurr": [28, 43], "modifi": [28, 43, 51], "98": [28, 43], "107": [28, 43], "cellul": [28, 43], "diagnosi": [28, 43], "119": [28, 43], "pneumonia": [28, 43], "setblacklist": [28, 35, 36, 51], "setchunkpreced": [28, 29], "setfalsepositivesresourc": 28, "reada": [28, 32, 35, 48, 51], "setmergeoverlap": [28, 29], "chunkmergeraproach": 29, "documento": 30, "header": [30, 67], "title_regex": 30, "paragraph": 30, "setdefaultent": 30, "setgroupbysent": 30, "groupbysent": 30, "group": [30, 50], "assum": [30, 40], "your": [30, 49], "detector": 30, "setinsertchunk": 30, "insert": 30, "hascasesensitiveproperti": [31, 44, 45, 46, 64], "interfac": [31, 64], "resolv": [31, 35, 36, 60, 62, 63, 64], "distancefunct": [31, 64], "distanc": [31, 35, 36, 40, 52, 53, 54, 55, 58, 59, 62, 63, 64], "function": [31, 62, 63, 64, 65, 73], "wmd": [31, 62, 63, 64], "euclidean": [31, 62, 63, 64], "cosin": [31, 62, 63, 64], "neighbour": [31, 62, 63, 64], "consid": [31, 35, 36, 40, 52, 53, 55, 58, 62, 63, 64], "knn": [31, 62, 63, 64], "queri": [31, 62, 63, 64], "altern": 31, "sort": 31, "extramasspenalti": 31, "penalti": 31, "enablewmd": 31, "enabletfidf": 31, "tfidf": 31, "enablejaccard": 31, "jaccard": 31, "enablesorensendic": 31, "sorensen": 31, "dice": 31, "enablejarowinkl": 31, "jaro": 31, "winkler": 31, "charact": [31, 35, 39, 52, 53], "enablelevenshtein": 31, "levenshtein": [31, 35, 36, 52, 53], "distanceweight": 31, "appli": [31, 35, 36, 39], "pool": [31, 44, 46], "sorensendic": 31, "jarowinkl": 31, "poolingstrategi": 31, "strategi": 31, "aggreg": 31, "min": 31, "confidencefunct": [31, 64], "invers": [31, 62, 63, 64], "softmax": [31, 62, 63, 64], "alldistancesmetadata": 31, "missasempti": [31, 64], "empti": [31, 40, 41, 57, 62, 63, 64], "unmatch": [31, 62, 63, 64], "setalldistancesmetadata": 31, "setaltern": 31, "setconfidencefunct": [31, 62, 63, 64], "setdistancefunct": [31, 62, 63, 64], "dist": [31, 37, 62, 63, 64], "setdistanceweight": 31, "l": [31, 35, 36], "setenablejaccard": 31, "setenablejarowinkl": 31, "setenablelevenshtein": 31, "setenablesorensendic": 31, "setenabletfidf": 31, "setenablewmd": 31, "setextramasspenalti": 31, "emp": 31, "setmissasempti": [31, 62, 63, 64], "setneighbour": [31, 62, 63, 64], "k": [31, 37, 62, 63, 64], "setpoolingstrategi": 31, "setthreshold": [31, 51, 62, 63, 64], "thre": [31, 62, 63, 64], "through": 32, "setjsonpath": 32, "along": [32, 33], "addition": [32, 49], "unifi": 32, "jsonpath": [32, 33], "casesensit": [32, 33, 44, 45, 46], "prefixandsuffixmatch": [32, 33], "prefix": [32, 33, 51, 52, 53], "suffix": [32, 33], "hit": [32, 33], "tsv": 32, "parser": 32, "liver": [32, 33], "metastas": [32, 33], "pt1bn0m0": [32, 33], "t5": [32, 33], "primari": [32, 33], "colon": [32, 33], "regex_token": 32, "32": [32, 33, 61], "39": [32, 33], "confidencevalu": [32, 33], "00": [32, 33], "49": [32, 33], "148": [32, 33], "156": [32, 33], "ct4bcn2m1": [32, 33], "189": [32, 33], "194": [32, 33], "n3m1": [32, 33], "316": [32, 33], "323": [32, 33], "wher": [32, 35], "setprefixandsuffixmatch": [32, 33], "could": [33, 37, 52, 53], "like": [33, 35, 36, 37], "mycontextualparsermodel": 33, "expect": 34, "yyyi": [34, 35, 36, 67], "mm": [34, 35, 36, 67], "dd": [34, 35, 36, 67], "els": 34, "anchordateyear": 34, "add": 34, "anchor": 34, "dai": [34, 35, 36], "tomorrow": 34, "2021": 34, "anchordatemonth": 34, "month": 34, "januari": 34, "anchordatedai": 34, "chunksdf": 34, "df": [34, 70], "aa": 34, "map_annotations_col": 34, "lambda": 34, "chunk_dat": 34, "setanchordateyear": 34, "2000": 34, "setanchordatemonth": 34, "setanchordatedai": 34, "fri": 34, "21": 34, "nov": 34, "1997": 34, "week": 34, "30": 34, "08": 34, "02": 34, "2018": 34, "mondai": 34, "todai": 34, "deidentificationmodel": 35, "obfusc": [35, 36], "mask": [35, 36], "person": [35, 36, 52, 53], "These": [35, 36, 66], "pattern": [35, 36, 39, 50], "setregexpatternsdictionari": [35, 36], "line": [35, 36], "regexpatternsdictionari": [35, 36], "ictionari": [35, 36], "protect": [35, 36], "anonim": [35, 36], "obfuscated": [35, 36], "help": [35, 36, 44, 46, 66], "dateformat": [35, 36], "visibl": [35, 36], "obfuscatereffil": 35, "reffileformat": 35, "refsep": 35, "sep": 35, "reffil": 35, "datetag": [35, 36], "displac": [35, 36], "random": [35, 36, 48], "60": [35, 36], "datetoyear": [35, 36], "minyear": [35, 36], "minimum": [35, 36, 48], "automat": [35, 36, 66], "pars": [35, 36], "consistentobfusc": [35, 36], "veri": [35, 36], "similar": [35, 36], "sameentitythreshold": [35, 36], "9": [35, 36, 59], "obfuscaterefsourc": [35, 36], "doesnt": [35, 36], "tha": [35, 36], "obfuscatorreffil": [35, 36], "faker": [35, 36], "randomli": [35, 36], "regexoverrid": [35, 36], "priorit": [35, 36], "seed": [35, 36, 48], "With": [35, 36], "repli": [35, 36], "execut": [35, 36], "time": [35, 36, 48], "ouptut": [35, 36], "ignoreregex": [35, 36], "israndomdatedisplac": [35, 36], "deidentificationparam": [35, 36], "mappingscolumn": [35, 36], "fake": [35, 36], "returnentitymap": [35, 36], "ssn": [35, 36], "passport": [35, 36], "dln": [35, 36], "npi": [35, 36], "c_card": [35, 36], "iban": [35, 36], "dea": [35, 36], "maskingpolici": [35, 36], "polici": [35, 36, 39], "same_length_char": [35, 36], "compos": [35, 36], "asterisk": [35, 36], "squar": [35, 36], "bracket": [35, 36], "being": [35, 36, 48, 61], "total": [35, 36], "origin": [35, 36, 37, 38, 51, 62], "smith": [35, 36], "less": [35, 36], "char": [35, 36, 48, 49], "jo": [35, 36], "without": [35, 36], "entity_label": [35, 36], "fixed_length_char": [35, 36], "fix": [35, 36], "setuseabbrevi": [35, 36], "clinical_sensitive_ent": [35, 36], "ner_deid_enrich": [35, 36], "ner_con": [35, 36], "dei": [35, 36], "custom": [35, 51, 54, 57, 58, 59], "dic_regex_patterns_main_categori": 35, "setobfuscatereffil": 35, "obfuscate_fixed_ent": 35, "setreffileformat": 35, "setrefsep": 35, "setmod": [35, 36], "setdateformat": [35, 36], "yy": [35, 36], "setobfuscated": [35, 36], "setdatetag": [35, 36], "setdai": [35, 36], "setobfuscaterefsourc": [35, 36], "7194334": [35, 36], "93": [35, 36], "pcp": [35, 36], "oliveira": [35, 36], "25": [35, 36, 62, 63], "record": [35, 36], "2079": [35, 36], "09": [35, 36], "01010101": [35, 36], "18": [35, 36], "dr": [35, 36], "gregori": [35, 36], "hous": [35, 36], "14": [35, 36], "setconsistentobfusc": [35, 36], "f": [35, 36, 43, 67], "setdatetoyear": [35, 36], "d": [35, 36], "setfixedmasklength": [35, 36], "setignoreregex": [35, 36], "setisrandomdatedisplac": [35, 36], "setlanguag": [35, 36], "english": [35, 36], "es": [35, 36], "spanish": [35, 36], "setmappingscolumn": [35, 36], "setmaskingpolici": [35, 36], "m": [35, 36], "setminyear": [35, 36], "auxiliari": [35, 36, 62, 63], "c": 35, "setregexoverrid": [35, 36], "setreturnentitymap": [35, 36], "setsameentitythreshold": [35, 36], "setse": [35, 36], "deid": [36, 56], "regexent": 36, "keep": [36, 41, 62], "regexpatterndictionari": 36, "fixedmasklength": 36, "deidentif": 36, "deidentify_larg": 36, "classifi": [37, 38, 41, 42, 58], "genericclassifiermodel": 37, "labelcol": [37, 62], "maximum": [37, 48, 55, 58, 65], "tol": 37, "converg": 37, "toler": 37, "fitintercept": 37, "intercept": 37, "form": [37, 38, 52, 53], "vectorizationmodelpath": 37, "alreadi": [37, 38, 48, 62], "classificationmodelpath": 37, "classif": [37, 38, 41, 44, 45, 46], "stopwords_clean": 37, "stopwordsclean": 37, "cleantoken": 37, "stemmer": 37, "stem": [37, 55, 58, 59], "clf_model": [37, 41, 42], "setclassificationmodelpath": 37, "setfitintercept": 37, "setlabel": [37, 38], "setmaxit": 37, "settol": 37, "setvectorizationmodelpath": 37, "mergechunk": 38, "vectorizationmodel": 38, "classificationmodel": 38, "setclassificationmodel": 38, "pipelinemodel": [38, 48], "setmergechunk": 38, "setvectorizationmodel": 38, "raw": 39, "scrape": 39, "web": 39, "xml": 39, "dirti": 39, "sodium": 39, "chlorid": 39, "potassium": 39, "13bag": 39, "interferon": 39, "alfa": 39, "2b": 39, "million": 39, "unit": [39, 54, 58, 59, 65], "injec": 39, "aspirin": [39, 44, 46], "meq": 39, "oral": 39, "sol": 39, "document_norm": 39, "trainingpipelin": 39, "normalized_text": [39, 62, 63], "bag": 39, "10000000": 39, "unt": 39, "inject": 39, "solut": 39, "setpolici": 39, "targetent": 40, "entityweight": 40, "maxsyntacticdist": [40, 55, 59], "syntact": [40, 54, 55, 58, 59], "drug_embed": 40, "metformin": 40, "125": 40, "coumadin": 40, "pill": 40, "paracetamol": 40, "267413": 40, "07614058": 40, "5620966": 40, "83838946": 40, "8911504": 40, "22319649": 40, "07094894": 40, "6885556": 40, "79176235": 40, "82672405": 40, "10939768": 40, "29242": 40, "3574444": 40, "3981813": 40, "79609615": 40, "sbiobert_base_cased_mli": 40, "setentityweight": 40, "By": 40, "weigh": 40, "notat": 40, "target_ent": 40, "related_ent": 40, "insensit": 40, "setmaxsyntacticdist": [40, 54, 55, 58, 59], "settargetent": 40, "related1": 40, "related2": 40, "feature_vector": [41, 42, 67], "featuresassembl": [41, 42, 67], "labelcolumn": [41, 48], "epochsn": 41, "proce": 41, "dropou": 41, "lay": 41, "validaiton": [41, 57], "much": [41, 57], "modelfil": 41, "fiximbal": 41, "flag": [41, 57], "whenther": [41, 57], "balanc": [41, 57], "trainig": [41, 57], "featuresc": 41, "scale": [41, 57], "minmax": [41, 57], "feature_1": [41, 42], "feature_2": [41, 42], "feature_n": [41, 42], "graph_fil": [41, 57], "20": 41, "purpos": 41, "drouptup": [41, 57], "feature_sc": [41, 57], "fix_imbal": [41, 57], "label_column": [41, 57], "mode_fil": [41, 57], "output_logs_path": [41, 57], "validation_split": [41, 57], "scheme": [43, 70, 71, 72], "iob": [43, 48, 51, 70, 71, 72], "bioe": 43, "ner_label": 43, "setschem": 43, "hasbatchedannot": [44, 45, 46, 49], "medicalbertfortokenclassifi": [44, 46], "head": [44, 45, 46, 49], "linear": [44, 45, 46, 65], "task": [44, 45, 46, 66], "huggingfac": [44, 45, 46], "compat": [44, 45, 46, 48], "larg": [44, 45, 46, 48], "faster": [44, 45, 46], "maxsentencelength": [44, 45, 46], "tokenclassifi": [44, 45], "felt": [44, 46], "bit": [44, 46], "drowsi": [44, 46], "had": [44, 46, 52, 53], "blur": [44, 46], "vision": [44, 46], "getclass": [44, 45, 46, 54, 58, 59, 66], "loadsavedmodelopensourc": [44, 45, 46, 66], "bertfortokenclassifierpath": [44, 45, 46, 66], "tfmodelpath": [44, 45, 46, 66], "bertfortokenclassifi": [44, 45, 46, 66], "taht": [44, 45, 46, 66], "bert_sequence_classifier_ad": 44, "setcoalescesent": [44, 46, 66], "inputcol": [44, 46, 66], "probabl": [44, 46, 66], "due": [44, 46, 66], "limit": [44, 46, 52, 53, 66], "almost": [44, 46, 66], "512": [44, 46, 66], "feed": [44, 46, 66], "entir": [44, 46, 66], "hidden": [45, 65], "state": [45, 48, 49], "bert_token_classifier_ner_bionlp": 45, "erba": 45, "ir": 45, "myb": 45, "viru": 45, "construct": 45, "erythroid": 45, "infect": 45, "bone": 45, "marrow": 45, "blastoderm": 45, "cultur": 45, "tissue_structur": 45, "bert_base_token_classifier_conll03": 45, "distilbert": 46, "sequenceclassifi": 46, "coalescesent": 46, "distilbertforsequenceclassif": 46, "destilbertfortokenclassifierpath": 46, "medicalbertforsequenceclassif": [46, 66], "distilbert_sequence_classifier_ad": 46, "defaultparamswrit": [47, 65], "defaultparamsread": [47, 65], "shallow": [47, 65], "subclass": [47, 65], "suffici": [47, 65], "nerapproach": 48, "neural": [48, 49], "network": [48, 49], "architectur": [48, 49], "cnn": [48, 49], "bilstm": [48, 49], "crf": [48, 49], "art": [48, 49], "instanti": [48, 49, 52, 53], "conll": 48, "2003": 48, "chosen": 48, "bertembed": [48, 62, 63], "usag": [48, 49], "minepoch": 48, "maxepoch": 48, "randomse": 48, "lr": 48, "decai": 48, "coeffici": 48, "real": 48, "rage": 48, "005": 48, "usecontrib": 48, "contrib": 48, "lstm": 48, "Not": 48, "might": 48, "slightli": 48, "improv": [48, 66], "accuraci": 48, "includeallconfidencescor": [48, 49], "just": [48, 49], "stdout": 48, "enablememoryoptim": 48, "slow": 48, "down": 48, "nerdlapproach": [48, 49], "trainingdata": 48, "readdataset": [48, 70], "conll2003": 48, "eng": 48, "getlabelcolumn": [48, 65], "setearlystoppingcriterion": 48, "criterion": 48, "earli": 48, "stop": 48, "setearlystoppingpati": 48, "patienc": 48, "perform": 48, "termin": 48, "setent": 48, "displai": 48, "ff": 48, "setincludeallconfidencescor": 48, "setlogprefix": 48, "setlr": 48, "setminepoch": 48, "setoverrideexistingtag": 48, "initi": [48, 52, 53], "setpo": 48, "setpretrainedmodelpath": 48, "point": [48, 62], "shuffl": 48, "settagsmap": 48, "ones": 48, "parquet": 48, "setusebestmodel": 48, "best": 48, "metric": 48, "monitor": 48, "macro": 48, "f1": 48, "precend": 48, "across": 48, "setusecontrib": 48, "verbosevalu": 48, "own": 49, "note": 49, "were": 49, "wordembed": 49, "glove_100d": 49, "inferencebatchs": 49, "infer": [49, 66], "labelcas": 49, "upper": [49, 55, 58, 59], "u": 49, "offici": 49, "ekeu": 49, "baghdad": 49, "setinferencebatchs": 49, "setlabelcas": 49, "known": 50, "neighbor": 50, "issu": 50, "dt": 50, "jj": 50, "ner_radiolog": 50, "imagingfind": 50, "bodypart": 50, "iob2": 51, "friendli": 51, "associ": 51, "do": 51, "preserveposit": 51, "preserv": 51, "greedymod": 51, "contigu": 51, "setgreedymod": 51, "setpreserveposit": 51, "setreplacelabel": 51, "interest": [52, 53], "locat": [52, 53], "compani": [52, 53], "kb": [52, 53], "ne": [52, 53], "mention": [52, 53], "surfac": [52, 53], "disambigu": [52, 53], "embeddingtypeparam": [52, 53], "numfirstchar": [52, 53], "tokensearch": [52, 53], "narrowwithapproximatematch": [52, 53], "narrow": [52, 53], "levenstein": [52, 53], "levenshteindistancethresholdparam": [52, 53], "nearmatchinggapparam": [52, 53], "trim": [52, 53], "len": [52, 53], "nearmatchinggap": [52, 53], "predictionslimit": [52, 53], "amount": [52, 53], "s3knowledgebasenam": [52, 53], "s3": [52, 53], "contest": [52, 53], "donald": [52, 53], "trump": [52, 53], "who": [52, 53], "later": [52, 53], "defeat": [52, 53], "christina": [52, 53], "aguilera": [52, 53], "sentenceembed": [52, 53], "ner_model": [52, 53], "sets3knowledgebasenam": 52, "setnumfirstchar": [52, 53], "nlppipelin": [52, 53], "wikipedia": [52, 53], "org": [52, 53], "curid": [52, 53], "4848272": [52, 53], "31698421": [52, 53], "55907961": [52, 53], "144171": [52, 53], "6636454": [52, 53], "setembeddingtyp": [52, 53], "setlevenshteindistancethresholdparam": [52, 53], "setnarrowwithapproximatematch": [52, 53], "setnearmatchinggapparam": [52, 53], "setpredictionlimit": [52, 53], "settokensearch": [52, 53], "nerdisambigu": 53, "re": [54, 55, 57, 58, 59, 66], "relationextractionmodel": [54, 57, 58], "setcustomlabel": [54, 57, 58, 59], "setpredictionthreshold": [54, 58, 59], "minim": [54, 58, 59, 66], "activ": [54, 58, 59, 65], "encod": [54, 55, 58, 59, 66], "setrelationpair": [54, 55, 58, 59], "entity1": [54, 58, 59], "entity2": [54, 58, 59], "biomark": [54, 59], "relativedai": [54, 59], "setrelationpairscasesensit": [54, 55, 59], "further": 55, "especi": 55, "relationextractiondlmodel": 55, "relationpair": [55, 58, 59], "relationpairscasesensit": [55, 59], "doclevelrel": 55, "words_embedd": 55, "pos_tagg": 55, "pos_clin": [55, 57, 58, 59], "dependency_pars": 55, "dependencyparsermodel": [55, 57, 58, 59], "dependency_conllu": [55, 57, 58, 59], "clinical_ner_tagg": 55, "jsl_ner_wip_greedy_clin": 55, "direct": [55, 58, 59], "external_body_part_or_region": [55, 58, 59], "internal_organ_or_compon": [55, 58, 59], "re_ner_chunk_filt": [55, 58], "re_ner_chunk": [55, 58], "trained_pipelin": 55, "cre": 55, "mri": [55, 58, 59], "demonstr": [55, 58, 59], "infarct": [55, 58, 59], "brain": [55, 58, 59], "cerebellum": [55, 58, 59], "basil": [55, 58, 59], "ganglia": [55, 58, 59], "re_chunk": 55, "paired_to": 55, "59": 55, "setdoclevelrel": 55, "fromentitybegincol": 57, "fromentityendcol": 57, "fromentitylabelcol": 57, "toentitybegincol": 57, "toentityendcol": 57, "toentitylabelcol": 57, "embedd": [57, 58, 59], "postag": [57, 58, 59], "ner_events_clin": [57, 58, 59], "nerchunk": [57, 58, 59], "depencypars": [57, 58, 59], "relations_t": 57, "target_rel": 57, "05": 57, "from_begin": 57, "from_end": 57, "from_label": 57, "to_begin": 57, "to_end": 57, "to_label": 57, "traindata": [57, 58, 59], "begin_col": 57, "end_col": 57, "label_col": 57, "contrast": 58, "predictionthreshold": [58, 59, 66], "onc": 58, "renerchunksfilt": [58, 66], "re_model": [58, 59], "redl_bodypart_direction_biobert": 58, "chunk1": [58, 59], "chunk2": [58, 59], "re_bodypart_direct": 59, "resolut": [60, 63], "enit": 60, "filterfieldsel": 61, "metadatafield": 61, "rules2": 61, "setstrategi": 61, "match_al": 61, "chunk2doc": 61, "doc_chunk": 61, "sent_small_bert_l2_128": 61, "router_name_embed": 61, "setmetadatafield": 61, "setfilterfieldsel": 61, "names_embed": 61, "router_city_embed": 61, "citi": 61, "cities_embed": 61, "router_nam": 61, "names_chunk": 61, "sentenceresolverparam": [62, 63], "thiu": [62, 63], "sentenceentityresolvermodel": 62, "ontolog": [62, 63], "curat": [62, 63], "rxnorm": [62, 63], "snome": [62, 63], "normalizedcol": 62, "pretrainedmodelpath": 62, "overrideexistingcod": 62, "while": 62, "continu": 62, "returncosinedist": [62, 63], "aux_label_col": [62, 63], "useauxlabel": [62, 63], "auxlabel": [62, 63], "dropcodeslist": 62, "omit": 62, "sent_biobert_pubmed_base_cas": [62, 63], "snomedtrainingpipelin": [62, 63], "snomedtrainingmodel": [62, 63], "snomeddata": [62, 63], "bertextractor": [62, 63], "1000": [62, 63], "bert_embed": [62, 63], "setnormalizedcol": [62, 63], "snomed_cod": [62, 63], "euclidian": [62, 63], "snomedmodel": [62, 63], "setauxlabelcol": [62, 63], "setextractcosinedist": 62, "setuseauxlabel": [62, 63], "hasembeddingsproperti": 63, "hasstoragemodel": 63, "searchtre": 63, "tree": 63, "sentenceentityresolverapproach": 63, "getincludestorag": 63, "storag": 63, "savestorag": 63, "setincludestorag": 63, "setsearchtre": 63, "estim": 65, "getbatchnorm": 65, "getgraphfil": 65, "getgraphfold": 65, "gethiddenact": 65, "gethiddenactl2": 65, "l2": 65, "gethiddenlay": 65, "hiudden": 65, "gethiddenunitsnumb": 65, "gethiddenweightsl2": 65, "getmaxsequencelength": 65, "getmodelnam": 65, "setbatchnorm": 65, "greaph": 65, "sethiddenact": 65, "sigmoid": 65, "sethiddenactl2": 65, "sethiddenlay": 65, "sethiddenunitsnumb": 65, "sethiddenweightsl2": 65, "setmaxsequencelength": 65, "setmodelnam": 65, "zero": 66, "shot": 66, "binari": 66, "util": 66, "nli": 66, "natur": 66, "usual": 66, "definit": 66, "statement": 66, "regard": 66, "relationship": 66, "append": 66, "relationalcategori": 66, "hypothesi": 66, "templat": 66, "cure": 66, "problem": 66, "5f": 66, "multilabel": 66, "categor": 66, "reveal": 66, "9760039": 66, "98819494": 66, "9929625": 66, "setrelationalcategori": 66, "xxx": 66, "collect": 67, "anyth": 67, "cast": 67, "tri": 67, "timestampformat": 67, "hh": 67, "ss": 67, "zz": 67, "test_jsl": 67, "relfeatur": 67, "withcolumn": 67, "array_column": 67, "words_in_ent1": 67, "words_in_ent2": 67, "features_asm1": 67, "words_between": 67, "features_t": 67, "self": 67, "__data": 67, "annotatortransform": 68, "pipeline_model": 70, "assertion_label": 70, "excluded_label": 70, "cleanup_mod": 70, "disabl": 70, "split_char": 70, "context_char": 70, "min_chars_tol": 70, "align_chars_tol": 70, "merge_overlap": 70, "sddlpath": 70, "extendedjavawrapp": [70, 71, 72], "reader": 70, "export": 70, "aspres": 70, "rdr": 70, "anc": 70, "corpu": 70, "small": 70, "json_path": 70, "assertion_df": 70, "generateassertiontrainset": 70, "new_java_arrai": [70, 71, 72], "pylist": [70, 71, 72], "java_class": [70, 71, 72], "todo": [70, 71, 72], "inspir": [70, 71, 72], "review": [70, 71, 72], "overview": 73}, "objects": {"sparknlp_jsl._tf_graph_builders": [[2, 0, 0, "-", "graph_builders"]], "sparknlp_jsl._tf_graph_builders.graph_builders": [[3, 1, 1, "", "AssertionTFGraphBuilder"], [4, 1, 1, "", "GenericClassifierTFGraphBuilder"], [5, 1, 1, "", "NerTFGraphBuilder"], [6, 1, 1, "", "RelationExtractionTFGraphBuilder"], [7, 1, 1, "", "TFGraphBuilder"], [8, 1, 1, "", "TFGraphBuilderFactory"], [9, 3, 1, "", "TensorflowAddonsNeeded"], [10, 3, 1, "", "WrongTFVersion"]], "sparknlp_jsl._tf_graph_builders.graph_builders.TFGraphBuilderFactory": [[8, 2, 1, "", "build"], [8, 2, 1, "", "get_models"], [8, 2, 1, "", "print_model_params"]], "sparknlp_jsl": [[11, 0, 0, "-", "annotator"], [67, 0, 0, "-", "base"], [69, 0, 0, "-", "training"]], "sparknlp_jsl.annotator": [[12, 1, 1, "", "AnnotationMerger"], [13, 1, 1, "", "AssertionDLApproach"], [14, 1, 1, "", "AssertionDLModel"], [15, 1, 1, "", "AssertionFilterer"], [16, 1, 1, "", "AssertionLogRegApproach"], [17, 1, 1, "", "AssertionLogRegModel"], [18, 1, 1, "", "AverageEmbeddings"], [19, 1, 1, "", "BertSentenceChunkEmbeddings"], [20, 1, 1, "", "Chunk2Token"], [21, 1, 1, "", "ChunkConverter"], [22, 1, 1, "", "ChunkFilterer"], [23, 1, 1, "", "ChunkFiltererApproach"], [24, 1, 1, "", "ChunkKeyPhraseExtraction"], [25, 1, 1, "", "ChunkMapperApproach"], [26, 1, 1, "", "ChunkMapperFiltererModel"], [27, 1, 1, "", "ChunkMapperModel"], [28, 1, 1, "", "ChunkMergeApproach"], [29, 1, 1, "", "ChunkMergeModel"], [30, 1, 1, "", "ChunkSentenceSplitter"], [31, 1, 1, "", "CommonResolverParams"], [32, 1, 1, "", "ContextualParserApproach"], [33, 1, 1, "", "ContextualParserModel"], [34, 1, 1, "", "DateNormalizer"], [35, 1, 1, "", "DeIdentification"], [36, 1, 1, "", "DeIdentificationModel"], [37, 1, 1, "", "DocumentLogRegClassifierApproach"], [38, 1, 1, "", "DocumentLogRegClassifierModel"], [39, 1, 1, "", "DrugNormalizer"], [40, 1, 1, "", "EntityChunkEmbeddings"], [41, 1, 1, "", "GenericClassifierApproach"], [42, 1, 1, "", "GenericClassifierModel"], [43, 1, 1, "", "IOBTagger"], [44, 1, 1, "", "MedicalBertForSequenceClassification"], [45, 1, 1, "", "MedicalBertForTokenClassifier"], [46, 1, 1, "", "MedicalDistilBertForSequenceClassification"], [47, 1, 1, "", "MedicalGraphBuilderModel"], [48, 1, 1, "", "MedicalNerApproach"], [49, 1, 1, "", "MedicalNerModel"], [50, 1, 1, "", "NerChunker"], [51, 1, 1, "", "NerConverterInternal"], [52, 1, 1, "", "NerDisambiguator"], [53, 1, 1, "", "NerDisambiguatorModel"], [54, 1, 1, "", "PosologyREModel"], [55, 1, 1, "", "RENerChunksFilter"], [56, 1, 1, "", "ReIdentification"], [57, 1, 1, "", "RelationExtractionApproach"], [58, 1, 1, "", "RelationExtractionDLModel"], [59, 1, 1, "", "RelationExtractionModel"], [60, 1, 1, "", "ResolverMerger"], [61, 1, 1, "", "Router"], [62, 1, 1, "", "SentenceEntityResolverApproach"], [63, 1, 1, "", "SentenceEntityResolverModel"], [64, 1, 1, "", "SentenceResolverParams"], [65, 1, 1, "", "TFGraphBuilder"], [66, 1, 1, "", "ZeroShotRelationExtractionModel"]], "sparknlp_jsl.annotator.AnnotationMerger": [[12, 2, 1, "", "clear"], [12, 2, 1, "", "copy"], [12, 2, 1, "", "explainParam"], [12, 2, 1, "", "explainParams"], [12, 2, 1, "", "extractParamMap"], [12, 2, 1, "", "getInputCols"], [12, 2, 1, "", "getLazyAnnotator"], [12, 2, 1, "", "getOrDefault"], [12, 2, 1, "", "getOutputCol"], [12, 2, 1, "", "getParam"], [12, 2, 1, "", "getParamValue"], [12, 2, 1, "", "hasDefault"], [12, 2, 1, "", "hasParam"], [12, 2, 1, "", "isDefined"], [12, 2, 1, "", "isSet"], [12, 2, 1, "", "load"], [12, 4, 1, "", "params"], [12, 2, 1, "", "read"], [12, 2, 1, "", "save"], [12, 2, 1, "", "set"], [12, 2, 1, "", "setInputCols"], [12, 2, 1, "", "setInputType"], [12, 2, 1, "", "setLazyAnnotator"], [12, 2, 1, "", "setOutputCol"], [12, 2, 1, "", "setParamValue"], [12, 2, 1, "", "transform"], [12, 5, 1, "", "uid"], [12, 2, 1, "", "write"]], "sparknlp_jsl.annotator.AssertionDLApproach": [[13, 2, 1, "", "clear"], [13, 2, 1, "", "copy"], [13, 2, 1, "", "explainParam"], [13, 2, 1, "", "explainParams"], [13, 2, 1, "", "extractParamMap"], [13, 2, 1, "", "fit"], [13, 2, 1, "", "fitMultiple"], [13, 2, 1, "", "getInputCols"], [13, 2, 1, "", "getLazyAnnotator"], [13, 2, 1, "", "getOrDefault"], [13, 2, 1, "", "getOutputCol"], [13, 2, 1, "", "getParam"], [13, 2, 1, "", "getParamValue"], [13, 2, 1, "", "hasDefault"], [13, 2, 1, "", "hasParam"], [13, 2, 1, "", "isDefined"], [13, 2, 1, "", "isSet"], [13, 2, 1, "", "load"], [13, 4, 1, "", "params"], [13, 2, 1, "", "read"], [13, 2, 1, "", "save"], [13, 2, 1, "", "set"], [13, 2, 1, "", "setBatchSize"], [13, 2, 1, "", "setConfigProtoBytes"], [13, 2, 1, "", "setDropout"], [13, 2, 1, "", "setEnableOutputLogs"], [13, 2, 1, "", "setEndCol"], [13, 2, 1, "", "setEpochs"], [13, 2, 1, "", "setEvaluationLogExtended"], [13, 2, 1, "", "setGraphFile"], [13, 2, 1, "", "setGraphFolder"], [13, 2, 1, "", "setIncludeConfidence"], [13, 2, 1, "", "setInputCols"], [13, 2, 1, "", "setLabelCol"], [13, 2, 1, "", "setLazyAnnotator"], [13, 2, 1, "", "setLearningRate"], [13, 2, 1, "", "setMaxSentLen"], [13, 2, 1, "", "setOutputCol"], [13, 2, 1, "", "setOutputLogsPath"], [13, 2, 1, "", "setParamValue"], [13, 2, 1, "", "setScopeWindow"], [13, 2, 1, "", "setStartCol"], [13, 2, 1, "", "setTestDataset"], [13, 2, 1, "", "setValidationSplit"], [13, 2, 1, "", "setVerbose"], [13, 5, 1, "", "uid"], [13, 2, 1, "", "write"]], "sparknlp_jsl.annotator.AssertionDLModel": [[14, 2, 1, "", "clear"], [14, 2, 1, "", "copy"], [14, 2, 1, "", "explainParam"], [14, 2, 1, "", "explainParams"], [14, 2, 1, "", "extractParamMap"], [14, 2, 1, "", "getInputCols"], [14, 2, 1, "", "getLazyAnnotator"], [14, 2, 1, "", "getOrDefault"], [14, 2, 1, "", "getOutputCol"], [14, 2, 1, "", "getParam"], [14, 2, 1, "", "getParamValue"], [14, 2, 1, "", "getStorageRef"], [14, 2, 1, "", "hasDefault"], [14, 2, 1, "", "hasParam"], [14, 2, 1, "", "isDefined"], [14, 2, 1, "", "isSet"], [14, 2, 1, "", "load"], [14, 4, 1, "", "params"], [14, 2, 1, "", "read"], [14, 2, 1, "", "save"], [14, 2, 1, "", "set"], [14, 2, 1, "", "setIncludeConfidence"], [14, 2, 1, "", "setInputCols"], [14, 2, 1, "", "setLazyAnnotator"], [14, 2, 1, "", "setOutputCol"], [14, 2, 1, "", "setParamValue"], [14, 2, 1, "", "setScopeWindow"], [14, 2, 1, "", "setStorageRef"], [14, 2, 1, "", "transform"], [14, 5, 1, "", "uid"], [14, 2, 1, "", "write"]], "sparknlp_jsl.annotator.AssertionFilterer": [[15, 2, 1, "", "clear"], [15, 2, 1, "", "copy"], [15, 2, 1, "", "explainParam"], [15, 2, 1, "", "explainParams"], [15, 2, 1, "", "extractParamMap"], [15, 2, 1, "", "getInputCols"], [15, 2, 1, "", "getLazyAnnotator"], [15, 2, 1, "", "getOrDefault"], [15, 2, 1, "", "getOutputCol"], [15, 2, 1, "", "getParam"], [15, 2, 1, "", "getParamValue"], [15, 2, 1, "", "hasDefault"], [15, 2, 1, "", "hasParam"], [15, 2, 1, "", "isDefined"], [15, 2, 1, "", "isSet"], [15, 2, 1, "", "load"], [15, 4, 1, "", "params"], [15, 2, 1, "", "read"], [15, 2, 1, "", "save"], [15, 2, 1, "", "set"], [15, 2, 1, "", "setCriteria"], [15, 2, 1, "", "setInputCols"], [15, 2, 1, "", "setLazyAnnotator"], [15, 2, 1, "", "setOutputCol"], [15, 2, 1, "", "setParamValue"], [15, 2, 1, "", "setRegex"], [15, 2, 1, "", "setWhiteList"], [15, 2, 1, "", "transform"], [15, 5, 1, "", "uid"], [15, 2, 1, "", "write"]], "sparknlp_jsl.annotator.AssertionLogRegApproach": [[16, 2, 1, "", "clear"], [16, 2, 1, "", "copy"], [16, 2, 1, "", "explainParam"], [16, 2, 1, "", "explainParams"], [16, 2, 1, "", "extractParamMap"], [16, 2, 1, "", "fit"], [16, 2, 1, "", "fitMultiple"], [16, 2, 1, "", "getInputCols"], [16, 2, 1, "", "getLazyAnnotator"], [16, 2, 1, "", "getOrDefault"], [16, 2, 1, "", "getOutputCol"], [16, 2, 1, "", "getParam"], [16, 2, 1, "", "getParamValue"], [16, 2, 1, "", "hasDefault"], [16, 2, 1, "", "hasParam"], [16, 2, 1, "", "isDefined"], [16, 2, 1, "", "isSet"], [16, 2, 1, "", "load"], [16, 4, 1, "", "params"], [16, 2, 1, "", "read"], [16, 2, 1, "", "save"], [16, 2, 1, "", "set"], [16, 2, 1, "", "setInputCols"], [16, 2, 1, "", "setLazyAnnotator"], [16, 2, 1, "", "setOutputCol"], [16, 2, 1, "", "setParamValue"], [16, 5, 1, "", "uid"], [16, 2, 1, "", "write"]], "sparknlp_jsl.annotator.AssertionLogRegModel": [[17, 2, 1, "", "clear"], [17, 2, 1, "", "copy"], [17, 2, 1, "", "explainParam"], [17, 2, 1, "", "explainParams"], [17, 2, 1, "", "extractParamMap"], [17, 2, 1, "", "getInputCols"], [17, 2, 1, "", "getLazyAnnotator"], [17, 2, 1, "", "getOrDefault"], [17, 2, 1, "", "getOutputCol"], [17, 2, 1, "", "getParam"], [17, 2, 1, "", "getParamValue"], [17, 2, 1, "", "getStorageRef"], [17, 2, 1, "", "hasDefault"], [17, 2, 1, "", "hasParam"], [17, 2, 1, "", "isDefined"], [17, 2, 1, "", "isSet"], [17, 2, 1, "", "load"], [17, 4, 1, "", "params"], [17, 2, 1, "", "read"], [17, 2, 1, "", "save"], [17, 2, 1, "", "set"], [17, 2, 1, "", "setInputCols"], [17, 2, 1, "", "setLazyAnnotator"], [17, 2, 1, "", "setOutputCol"], [17, 2, 1, "", "setParamValue"], [17, 2, 1, "", "setStorageRef"], [17, 2, 1, "", "transform"], [17, 5, 1, "", "uid"], [17, 2, 1, "", "write"]], "sparknlp_jsl.annotator.AverageEmbeddings": [[18, 2, 1, "", "clear"], [18, 2, 1, "", "copy"], [18, 2, 1, "", "explainParam"], [18, 2, 1, "", "explainParams"], [18, 2, 1, "", "extractParamMap"], [18, 2, 1, "", "getInputCols"], [18, 2, 1, "", "getLazyAnnotator"], [18, 2, 1, "", "getOrDefault"], [18, 2, 1, "", "getOutputCol"], [18, 2, 1, "", "getParam"], [18, 2, 1, "", "getParamValue"], [18, 2, 1, "", "hasDefault"], [18, 2, 1, "", "hasParam"], [18, 2, 1, "", "isDefined"], [18, 2, 1, "", "isSet"], [18, 2, 1, "", "load"], [18, 4, 1, "", "params"], [18, 2, 1, "", "read"], [18, 2, 1, "", "save"], [18, 2, 1, "", "set"], [18, 2, 1, "", "setInputCols"], [18, 2, 1, "", "setLazyAnnotator"], [18, 2, 1, "", "setOutputCol"], [18, 2, 1, "", "setParamValue"], [18, 2, 1, "", "transform"], [18, 5, 1, "", "uid"], [18, 2, 1, "", "write"]], "sparknlp_jsl.annotator.BertSentenceChunkEmbeddings": [[19, 2, 1, "", "clear"], [19, 2, 1, "", "copy"], [19, 2, 1, "", "explainParam"], [19, 2, 1, "", "explainParams"], [19, 2, 1, "", "extractParamMap"], [19, 2, 1, "", "getBatchSize"], [19, 2, 1, "", "getCaseSensitive"], [19, 2, 1, "", "getDimension"], [19, 2, 1, "", "getInputCols"], [19, 2, 1, "", "getLazyAnnotator"], [19, 2, 1, "", "getOrDefault"], [19, 2, 1, "", "getOutputCol"], [19, 2, 1, "", "getParam"], [19, 2, 1, "", "getParamValue"], [19, 2, 1, "", "getStorageRef"], [19, 2, 1, "", "hasDefault"], [19, 2, 1, "", "hasParam"], [19, 2, 1, "", "isDefined"], [19, 2, 1, "", "isSet"], [19, 2, 1, "", "load"], [19, 2, 1, "", "loadSavedModel"], [19, 4, 1, "", "params"], [19, 2, 1, "", "pretrained"], [19, 2, 1, "", "read"], [19, 2, 1, "", "save"], [19, 2, 1, "", "set"], [19, 2, 1, "", "setBatchSize"], [19, 2, 1, "", "setCaseSensitive"], [19, 2, 1, "", "setChunkWeight"], [19, 2, 1, "", "setConfigProtoBytes"], [19, 2, 1, "", "setDimension"], [19, 2, 1, "", "setInputCols"], [19, 2, 1, "", "setIsLong"], [19, 2, 1, "", "setLazyAnnotator"], [19, 2, 1, "", "setMaxSentenceLength"], [19, 2, 1, "", "setOutputCol"], [19, 2, 1, "", "setParamValue"], [19, 2, 1, "", "setStorageRef"], [19, 2, 1, "", "transform"], [19, 5, 1, "", "uid"], [19, 2, 1, "", "write"]], "sparknlp_jsl.annotator.Chunk2Token": [[20, 2, 1, "", "clear"], [20, 2, 1, "", "copy"], [20, 2, 1, "", "explainParam"], [20, 2, 1, "", "explainParams"], [20, 2, 1, "", "extractParamMap"], [20, 2, 1, "", "getInputCols"], [20, 2, 1, "", "getLazyAnnotator"], [20, 2, 1, "", "getOrDefault"], [20, 2, 1, "", "getOutputCol"], [20, 2, 1, "", "getParam"], [20, 2, 1, "", "getParamValue"], [20, 2, 1, "", "hasDefault"], [20, 2, 1, "", "hasParam"], [20, 2, 1, "", "isDefined"], [20, 2, 1, "", "isSet"], [20, 2, 1, "", "load"], [20, 4, 1, "", "params"], [20, 2, 1, "", "read"], [20, 2, 1, "", "save"], [20, 2, 1, "", "set"], [20, 2, 1, "", "setInputCols"], [20, 2, 1, "", "setLazyAnnotator"], [20, 2, 1, "", "setOutputCol"], [20, 2, 1, "", "setParamValue"], [20, 2, 1, "", "transform"], [20, 5, 1, "", "uid"], [20, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ChunkConverter": [[21, 2, 1, "", "clear"], [21, 2, 1, "", "copy"], [21, 2, 1, "", "explainParam"], [21, 2, 1, "", "explainParams"], [21, 2, 1, "", "extractParamMap"], [21, 2, 1, "", "getInputCols"], [21, 2, 1, "", "getLazyAnnotator"], [21, 2, 1, "", "getOrDefault"], [21, 2, 1, "", "getOutputCol"], [21, 2, 1, "", "getParam"], [21, 2, 1, "", "getParamValue"], [21, 2, 1, "", "hasDefault"], [21, 2, 1, "", "hasParam"], [21, 2, 1, "", "isDefined"], [21, 2, 1, "", "isSet"], [21, 2, 1, "", "load"], [21, 4, 1, "", "params"], [21, 2, 1, "", "read"], [21, 2, 1, "", "save"], [21, 2, 1, "", "set"], [21, 2, 1, "", "setInputCols"], [21, 2, 1, "", "setLazyAnnotator"], [21, 2, 1, "", "setOutputCol"], [21, 2, 1, "", "setParamValue"], [21, 2, 1, "", "transform"], [21, 5, 1, "", "uid"], [21, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ChunkFilterer": [[22, 2, 1, "", "clear"], [22, 2, 1, "", "copy"], [22, 2, 1, "", "explainParam"], [22, 2, 1, "", "explainParams"], [22, 2, 1, "", "extractParamMap"], [22, 2, 1, "", "getInputCols"], [22, 2, 1, "", "getLazyAnnotator"], [22, 2, 1, "", "getOrDefault"], [22, 2, 1, "", "getOutputCol"], [22, 2, 1, "", "getParam"], [22, 2, 1, "", "getParamValue"], [22, 2, 1, "", "hasDefault"], [22, 2, 1, "", "hasParam"], [22, 2, 1, "", "isDefined"], [22, 2, 1, "", "isSet"], [22, 2, 1, "", "load"], [22, 4, 1, "", "params"], [22, 2, 1, "", "read"], [22, 2, 1, "", "save"], [22, 2, 1, "", "set"], [22, 2, 1, "", "setInputCols"], [22, 2, 1, "", "setLazyAnnotator"], [22, 2, 1, "", "setOutputCol"], [22, 2, 1, "", "setParamValue"], [22, 2, 1, "", "transform"], [22, 5, 1, "", "uid"], [22, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ChunkFiltererApproach": [[23, 2, 1, "", "clear"], [23, 2, 1, "", "copy"], [23, 2, 1, "", "explainParam"], [23, 2, 1, "", "explainParams"], [23, 2, 1, "", "extractParamMap"], [23, 2, 1, "", "fit"], [23, 2, 1, "", "fitMultiple"], [23, 2, 1, "", "getInputCols"], [23, 2, 1, "", "getLazyAnnotator"], [23, 2, 1, "", "getOrDefault"], [23, 2, 1, "", "getOutputCol"], [23, 2, 1, "", "getParam"], [23, 2, 1, "", "getParamValue"], [23, 2, 1, "", "hasDefault"], [23, 2, 1, "", "hasParam"], [23, 2, 1, "", "isDefined"], [23, 2, 1, "", "isSet"], [23, 2, 1, "", "load"], [23, 4, 1, "", "params"], [23, 2, 1, "", "read"], [23, 2, 1, "", "save"], [23, 2, 1, "", "set"], [23, 2, 1, "", "setCriteria"], [23, 2, 1, "", "setFilterEntity"], [23, 2, 1, "", "setInputCols"], [23, 2, 1, "", "setLazyAnnotator"], [23, 2, 1, "", "setOutputCol"], [23, 2, 1, "", "setParamValue"], [23, 2, 1, "", "setRegex"], [23, 2, 1, "", "setWhiteList"], [23, 5, 1, "", "uid"], [23, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ChunkKeyPhraseExtraction": [[24, 2, 1, "", "clear"], [24, 2, 1, "", "copy"], [24, 2, 1, "", "explainParam"], [24, 2, 1, "", "explainParams"], [24, 2, 1, "", "extractParamMap"], [24, 2, 1, "", "getBatchSize"], [24, 2, 1, "", "getCaseSensitive"], [24, 2, 1, "", "getDimension"], [24, 2, 1, "", "getInputCols"], [24, 2, 1, "", "getLazyAnnotator"], [24, 2, 1, "", "getOrDefault"], [24, 2, 1, "", "getOutputCol"], [24, 2, 1, "", "getParam"], [24, 2, 1, "", "getParamValue"], [24, 2, 1, "", "getStorageRef"], [24, 2, 1, "", "hasDefault"], [24, 2, 1, "", "hasParam"], [24, 2, 1, "", "isDefined"], [24, 2, 1, "", "isSet"], [24, 2, 1, "", "load"], [24, 2, 1, "", "loadSavedModel"], [24, 4, 1, "", "params"], [24, 2, 1, "", "pretrained"], [24, 2, 1, "", "read"], [24, 2, 1, "", "save"], [24, 2, 1, "", "set"], [24, 2, 1, "", "setBatchSize"], [24, 2, 1, "", "setCaseSensitive"], [24, 2, 1, "", "setConcatenateSentences"], [24, 2, 1, "", "setConfigProtoBytes"], [24, 2, 1, "", "setDimension"], [24, 2, 1, "", "setDivergence"], [24, 2, 1, "", "setDocumentLevelProcessing"], [24, 2, 1, "", "setDropPunctuation"], [24, 2, 1, "", "setInputCols"], [24, 2, 1, "", "setIsLong"], [24, 2, 1, "", "setLazyAnnotator"], [24, 2, 1, "", "setMaxSentenceLength"], [24, 2, 1, "", "setOutputCol"], [24, 2, 1, "", "setParamValue"], [24, 2, 1, "", "setSelectMostDifferent"], [24, 2, 1, "", "setStorageRef"], [24, 2, 1, "", "setTopN"], [24, 2, 1, "", "transform"], [24, 5, 1, "", "uid"], [24, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ChunkMapperApproach": [[25, 2, 1, "", "clear"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "explainParam"], [25, 2, 1, "", "explainParams"], [25, 2, 1, "", "extractParamMap"], [25, 2, 1, "", "fit"], [25, 2, 1, "", "fitMultiple"], [25, 2, 1, "", "getInputCols"], [25, 2, 1, "", "getLazyAnnotator"], [25, 2, 1, "", "getOrDefault"], [25, 2, 1, "", "getOutputCol"], [25, 2, 1, "", "getParam"], [25, 2, 1, "", "getParamValue"], [25, 2, 1, "", "hasDefault"], [25, 2, 1, "", "hasParam"], [25, 2, 1, "", "isDefined"], [25, 2, 1, "", "isSet"], [25, 2, 1, "", "load"], [25, 4, 1, "", "params"], [25, 2, 1, "", "read"], [25, 2, 1, "", "save"], [25, 2, 1, "", "set"], [25, 2, 1, "", "setAllowMultiTokenChunk"], [25, 2, 1, "", "setDictionary"], [25, 2, 1, "", "setInputCols"], [25, 2, 1, "", "setLazyAnnotator"], [25, 2, 1, "", "setLowerCase"], [25, 2, 1, "", "setMultivaluesRelations"], [25, 2, 1, "", "setOutputCol"], [25, 2, 1, "", "setParamValue"], [25, 5, 1, "", "uid"], [25, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ChunkMapperFiltererModel": [[26, 2, 1, "", "clear"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "explainParam"], [26, 2, 1, "", "explainParams"], [26, 2, 1, "", "extractParamMap"], [26, 2, 1, "", "getInputCols"], [26, 2, 1, "", "getLazyAnnotator"], [26, 2, 1, "", "getOrDefault"], [26, 2, 1, "", "getOutputCol"], [26, 2, 1, "", "getParam"], [26, 2, 1, "", "getParamValue"], [26, 2, 1, "", "hasDefault"], [26, 2, 1, "", "hasParam"], [26, 2, 1, "", "isDefined"], [26, 2, 1, "", "isSet"], [26, 2, 1, "", "load"], [26, 4, 1, "", "params"], [26, 2, 1, "", "read"], [26, 2, 1, "", "save"], [26, 2, 1, "", "set"], [26, 2, 1, "", "setInputCols"], [26, 2, 1, "", "setLazyAnnotator"], [26, 2, 1, "", "setOutputCol"], [26, 2, 1, "", "setParamValue"], [26, 2, 1, "", "transform"], [26, 5, 1, "", "uid"], [26, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ChunkMapperModel": [[27, 2, 1, "", "clear"], [27, 2, 1, "", "copy"], [27, 2, 1, "", "explainParam"], [27, 2, 1, "", "explainParams"], [27, 2, 1, "", "extractParamMap"], [27, 2, 1, "", "getInputCols"], [27, 2, 1, "", "getLazyAnnotator"], [27, 2, 1, "", "getOrDefault"], [27, 2, 1, "", "getOutputCol"], [27, 2, 1, "", "getParam"], [27, 2, 1, "", "getParamValue"], [27, 2, 1, "", "hasDefault"], [27, 2, 1, "", "hasParam"], [27, 2, 1, "", "isDefined"], [27, 2, 1, "", "isSet"], [27, 2, 1, "", "load"], [27, 4, 1, "", "params"], [27, 2, 1, "", "pretrained"], [27, 2, 1, "", "read"], [27, 2, 1, "", "save"], [27, 2, 1, "", "set"], [27, 2, 1, "", "setAllowMultiTokenChunk"], [27, 2, 1, "", "setInputCols"], [27, 2, 1, "", "setLazyAnnotator"], [27, 2, 1, "", "setLowerCase"], [27, 2, 1, "", "setMultivaluesRelations"], [27, 2, 1, "", "setOutputCol"], [27, 2, 1, "", "setParamValue"], [27, 2, 1, "", "transform"], [27, 5, 1, "", "uid"], [27, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ChunkMergeApproach": [[28, 2, 1, "", "clear"], [28, 2, 1, "", "copy"], [28, 2, 1, "", "explainParam"], [28, 2, 1, "", "explainParams"], [28, 2, 1, "", "extractParamMap"], [28, 2, 1, "", "fit"], [28, 2, 1, "", "fitMultiple"], [28, 2, 1, "", "getInputCols"], [28, 2, 1, "", "getLazyAnnotator"], [28, 2, 1, "", "getOrDefault"], [28, 2, 1, "", "getOutputCol"], [28, 2, 1, "", "getParam"], [28, 2, 1, "", "getParamValue"], [28, 2, 1, "", "hasDefault"], [28, 2, 1, "", "hasParam"], [28, 2, 1, "", "isDefined"], [28, 2, 1, "", "isSet"], [28, 2, 1, "", "load"], [28, 4, 1, "", "params"], [28, 2, 1, "", "read"], [28, 2, 1, "", "save"], [28, 2, 1, "", "set"], [28, 2, 1, "", "setBlackList"], [28, 2, 1, "", "setChunkPrecedence"], [28, 2, 1, "", "setFalsePositivesResource"], [28, 2, 1, "", "setInputCols"], [28, 2, 1, "", "setLazyAnnotator"], [28, 2, 1, "", "setMergeOverlapping"], [28, 2, 1, "", "setOutputCol"], [28, 2, 1, "", "setParamValue"], [28, 2, 1, "", "setReplaceDictResource"], [28, 5, 1, "", "uid"], [28, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ChunkMergeModel": [[29, 2, 1, "", "clear"], [29, 2, 1, "", "copy"], [29, 2, 1, "", "explainParam"], [29, 2, 1, "", "explainParams"], [29, 2, 1, "", "extractParamMap"], [29, 2, 1, "", "getInputCols"], [29, 2, 1, "", "getLazyAnnotator"], [29, 2, 1, "", "getOrDefault"], [29, 2, 1, "", "getOutputCol"], [29, 2, 1, "", "getParam"], [29, 2, 1, "", "getParamValue"], [29, 2, 1, "", "hasDefault"], [29, 2, 1, "", "hasParam"], [29, 2, 1, "", "isDefined"], [29, 2, 1, "", "isSet"], [29, 2, 1, "", "load"], [29, 4, 1, "", "params"], [29, 2, 1, "", "read"], [29, 2, 1, "", "save"], [29, 2, 1, "", "set"], [29, 2, 1, "", "setChunkPrecedence"], [29, 2, 1, "", "setInputCols"], [29, 2, 1, "", "setLazyAnnotator"], [29, 2, 1, "", "setMergeOverlapping"], [29, 2, 1, "", "setOutputCol"], [29, 2, 1, "", "setParamValue"], [29, 2, 1, "", "transform"], [29, 5, 1, "", "uid"], [29, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ChunkSentenceSplitter": [[30, 2, 1, "", "clear"], [30, 2, 1, "", "copy"], [30, 2, 1, "", "explainParam"], [30, 2, 1, "", "explainParams"], [30, 2, 1, "", "extractParamMap"], [30, 2, 1, "", "getInputCols"], [30, 2, 1, "", "getLazyAnnotator"], [30, 2, 1, "", "getOrDefault"], [30, 2, 1, "", "getOutputCol"], [30, 2, 1, "", "getParam"], [30, 2, 1, "", "getParamValue"], [30, 2, 1, "", "hasDefault"], [30, 2, 1, "", "hasParam"], [30, 2, 1, "", "isDefined"], [30, 2, 1, "", "isSet"], [30, 2, 1, "", "load"], [30, 4, 1, "", "params"], [30, 2, 1, "", "read"], [30, 2, 1, "", "save"], [30, 2, 1, "", "set"], [30, 2, 1, "", "setDefaultEntity"], [30, 2, 1, "", "setGroupBySentences"], [30, 2, 1, "", "setInputCols"], [30, 2, 1, "", "setInsertChunk"], [30, 2, 1, "", "setLazyAnnotator"], [30, 2, 1, "", "setOutputCol"], [30, 2, 1, "", "setParamValue"], [30, 2, 1, "", "transform"], [30, 5, 1, "", "uid"], [30, 2, 1, "", "write"]], "sparknlp_jsl.annotator.CommonResolverParams": [[31, 2, 1, "", "getCaseSensitive"], [31, 2, 1, "", "setAllDistancesMetadata"], [31, 2, 1, "", "setAlternatives"], [31, 2, 1, "", "setCaseSensitive"], [31, 2, 1, "", "setConfidenceFunction"], [31, 2, 1, "", "setDistanceFunction"], [31, 2, 1, "", "setDistanceWeights"], [31, 2, 1, "", "setEnableJaccard"], [31, 2, 1, "", "setEnableJaroWinkler"], [31, 2, 1, "", "setEnableLevenshtein"], [31, 2, 1, "", "setEnableSorensenDice"], [31, 2, 1, "", "setEnableTfidf"], [31, 2, 1, "", "setEnableWmd"], [31, 2, 1, "", "setExtramassPenalty"], [31, 2, 1, "", "setMissAsEmpty"], [31, 2, 1, "", "setNeighbours"], [31, 2, 1, "", "setPoolingStrategy"], [31, 2, 1, "", "setThreshold"]], "sparknlp_jsl.annotator.ContextualParserApproach": [[32, 2, 1, "", "clear"], [32, 2, 1, "", "copy"], [32, 2, 1, "", "explainParam"], [32, 2, 1, "", "explainParams"], [32, 2, 1, "", "extractParamMap"], [32, 2, 1, "", "fit"], [32, 2, 1, "", "fitMultiple"], [32, 2, 1, "", "getInputCols"], [32, 2, 1, "", "getLazyAnnotator"], [32, 2, 1, "", "getOrDefault"], [32, 2, 1, "", "getOutputCol"], [32, 2, 1, "", "getParam"], [32, 2, 1, "", "getParamValue"], [32, 2, 1, "", "hasDefault"], [32, 2, 1, "", "hasParam"], [32, 2, 1, "", "isDefined"], [32, 2, 1, "", "isSet"], [32, 2, 1, "", "load"], [32, 4, 1, "", "params"], [32, 2, 1, "", "read"], [32, 2, 1, "", "save"], [32, 2, 1, "", "set"], [32, 2, 1, "", "setCaseSensitive"], [32, 2, 1, "", "setDictionary"], [32, 2, 1, "", "setInputCols"], [32, 2, 1, "", "setJsonPath"], [32, 2, 1, "", "setLazyAnnotator"], [32, 2, 1, "", "setOutputCol"], [32, 2, 1, "", "setParamValue"], [32, 2, 1, "", "setPrefixAndSuffixMatch"], [32, 5, 1, "", "uid"], [32, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ContextualParserModel": [[33, 2, 1, "", "clear"], [33, 2, 1, "", "copy"], [33, 2, 1, "", "explainParam"], [33, 2, 1, "", "explainParams"], [33, 2, 1, "", "extractParamMap"], [33, 2, 1, "", "getInputCols"], [33, 2, 1, "", "getLazyAnnotator"], [33, 2, 1, "", "getOrDefault"], [33, 2, 1, "", "getOutputCol"], [33, 2, 1, "", "getParam"], [33, 2, 1, "", "getParamValue"], [33, 2, 1, "", "hasDefault"], [33, 2, 1, "", "hasParam"], [33, 2, 1, "", "isDefined"], [33, 2, 1, "", "isSet"], [33, 2, 1, "", "load"], [33, 4, 1, "", "params"], [33, 2, 1, "", "read"], [33, 2, 1, "", "save"], [33, 2, 1, "", "set"], [33, 2, 1, "", "setCaseSensitive"], [33, 2, 1, "", "setInputCols"], [33, 2, 1, "", "setLazyAnnotator"], [33, 2, 1, "", "setOutputCol"], [33, 2, 1, "", "setParamValue"], [33, 2, 1, "", "setPrefixAndSuffixMatch"], [33, 2, 1, "", "transform"], [33, 5, 1, "", "uid"], [33, 2, 1, "", "write"]], "sparknlp_jsl.annotator.DateNormalizer": [[34, 2, 1, "", "clear"], [34, 2, 1, "", "copy"], [34, 2, 1, "", "explainParam"], [34, 2, 1, "", "explainParams"], [34, 2, 1, "", "extractParamMap"], [34, 2, 1, "", "getInputCols"], [34, 2, 1, "", "getLazyAnnotator"], [34, 2, 1, "", "getOrDefault"], [34, 2, 1, "", "getOutputCol"], [34, 2, 1, "", "getParam"], [34, 2, 1, "", "getParamValue"], [34, 2, 1, "", "hasDefault"], [34, 2, 1, "", "hasParam"], [34, 2, 1, "", "isDefined"], [34, 2, 1, "", "isSet"], [34, 2, 1, "", "load"], [34, 4, 1, "", "params"], [34, 2, 1, "", "read"], [34, 2, 1, "", "save"], [34, 2, 1, "", "set"], [34, 2, 1, "", "setAnchorDateDay"], [34, 2, 1, "", "setAnchorDateMonth"], [34, 2, 1, "", "setAnchorDateYear"], [34, 2, 1, "", "setInputCols"], [34, 2, 1, "", "setLazyAnnotator"], [34, 2, 1, "", "setOutputCol"], [34, 2, 1, "", "setParamValue"], [34, 2, 1, "", "transform"], [34, 5, 1, "", "uid"], [34, 2, 1, "", "write"]], "sparknlp_jsl.annotator.DeIdentification": [[35, 2, 1, "", "clear"], [35, 2, 1, "", "copy"], [35, 2, 1, "", "explainParam"], [35, 2, 1, "", "explainParams"], [35, 2, 1, "", "extractParamMap"], [35, 2, 1, "", "fit"], [35, 2, 1, "", "fitMultiple"], [35, 2, 1, "", "getInputCols"], [35, 2, 1, "", "getLazyAnnotator"], [35, 2, 1, "", "getOrDefault"], [35, 2, 1, "", "getOutputCol"], [35, 2, 1, "", "getParam"], [35, 2, 1, "", "getParamValue"], [35, 2, 1, "", "hasDefault"], [35, 2, 1, "", "hasParam"], [35, 2, 1, "", "isDefined"], [35, 2, 1, "", "isSet"], [35, 2, 1, "", "load"], [35, 4, 1, "", "params"], [35, 2, 1, "", "read"], [35, 2, 1, "", "save"], [35, 2, 1, "", "set"], [35, 2, 1, "", "setBlackList"], [35, 2, 1, "", "setConsistentObfuscation"], [35, 2, 1, "", "setDateFormats"], [35, 2, 1, "", "setDateTag"], [35, 2, 1, "", "setDateToYear"], [35, 2, 1, "", "setDays"], [35, 2, 1, "", "setFixedMaskLength"], [35, 2, 1, "", "setIgnoreRegex"], [35, 2, 1, "", "setInputCols"], [35, 2, 1, "", "setIsRandomDateDisplacement"], [35, 2, 1, "", "setLanguage"], [35, 2, 1, "", "setLazyAnnotator"], [35, 2, 1, "", "setMappingsColumn"], [35, 2, 1, "", "setMaskingPolicy"], [35, 2, 1, "", "setMinYear"], [35, 2, 1, "", "setMode"], [35, 2, 1, "", "setObfuscateDate"], [35, 2, 1, "", "setObfuscateRefFile"], [35, 2, 1, "", "setObfuscateRefSource"], [35, 2, 1, "", "setOutputCol"], [35, 2, 1, "", "setParamValue"], [35, 2, 1, "", "setRefFileFormat"], [35, 2, 1, "", "setRefSep"], [35, 2, 1, "", "setRegexOverride"], [35, 2, 1, "", "setRegexPatternsDictionary"], [35, 2, 1, "", "setReturnEntityMappings"], [35, 2, 1, "", "setSameEntityThreshold"], [35, 2, 1, "", "setSeed"], [35, 5, 1, "", "uid"], [35, 2, 1, "", "write"]], "sparknlp_jsl.annotator.DeIdentificationModel": [[36, 2, 1, "", "clear"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "explainParam"], [36, 2, 1, "", "explainParams"], [36, 2, 1, "", "extractParamMap"], [36, 2, 1, "", "getInputCols"], [36, 2, 1, "", "getLazyAnnotator"], [36, 2, 1, "", "getOrDefault"], [36, 2, 1, "", "getOutputCol"], [36, 2, 1, "", "getParam"], [36, 2, 1, "", "getParamValue"], [36, 2, 1, "", "hasDefault"], [36, 2, 1, "", "hasParam"], [36, 2, 1, "", "isDefined"], [36, 2, 1, "", "isSet"], [36, 2, 1, "", "load"], [36, 4, 1, "", "params"], [36, 2, 1, "", "read"], [36, 2, 1, "", "save"], [36, 2, 1, "", "set"], [36, 2, 1, "", "setBlackList"], [36, 2, 1, "", "setConsistentObfuscation"], [36, 2, 1, "", "setDateFormats"], [36, 2, 1, "", "setDateTag"], [36, 2, 1, "", "setDateToYear"], [36, 2, 1, "", "setDays"], [36, 2, 1, "", "setFixedMaskLength"], [36, 2, 1, "", "setIgnoreRegex"], [36, 2, 1, "", "setInputCols"], [36, 2, 1, "", "setIsRandomDateDisplacement"], [36, 2, 1, "", "setLanguage"], [36, 2, 1, "", "setLazyAnnotator"], [36, 2, 1, "", "setMappingsColumn"], [36, 2, 1, "", "setMaskingPolicy"], [36, 2, 1, "", "setMinYear"], [36, 2, 1, "", "setMode"], [36, 2, 1, "", "setObfuscateDate"], [36, 2, 1, "", "setObfuscateRefSource"], [36, 2, 1, "", "setOutputCol"], [36, 2, 1, "", "setParamValue"], [36, 2, 1, "", "setRegexOverride"], [36, 2, 1, "", "setReturnEntityMappings"], [36, 2, 1, "", "setSameEntityThreshold"], [36, 2, 1, "", "setSeed"], [36, 2, 1, "", "transform"], [36, 5, 1, "", "uid"], [36, 2, 1, "", "write"]], "sparknlp_jsl.annotator.DocumentLogRegClassifierApproach": [[37, 2, 1, "", "clear"], [37, 2, 1, "", "copy"], [37, 2, 1, "", "explainParam"], [37, 2, 1, "", "explainParams"], [37, 2, 1, "", "extractParamMap"], [37, 2, 1, "", "fit"], [37, 2, 1, "", "fitMultiple"], [37, 2, 1, "", "getInputCols"], [37, 2, 1, "", "getLazyAnnotator"], [37, 2, 1, "", "getOrDefault"], [37, 2, 1, "", "getOutputCol"], [37, 2, 1, "", "getParam"], [37, 2, 1, "", "getParamValue"], [37, 2, 1, "", "hasDefault"], [37, 2, 1, "", "hasParam"], [37, 2, 1, "", "isDefined"], [37, 2, 1, "", "isSet"], [37, 2, 1, "", "load"], [37, 4, 1, "", "params"], [37, 2, 1, "", "read"], [37, 2, 1, "", "save"], [37, 2, 1, "", "set"], [37, 2, 1, "", "setClassificationModelPath"], [37, 2, 1, "", "setFitIntercept"], [37, 2, 1, "", "setInputCols"], [37, 2, 1, "", "setLabelColumn"], [37, 2, 1, "", "setLabels"], [37, 2, 1, "", "setLazyAnnotator"], [37, 2, 1, "", "setMaxIter"], [37, 2, 1, "", "setOutputCol"], [37, 2, 1, "", "setParamValue"], [37, 2, 1, "", "setTol"], [37, 2, 1, "", "setVectorizationModelPath"], [37, 5, 1, "", "uid"], [37, 2, 1, "", "write"]], "sparknlp_jsl.annotator.DocumentLogRegClassifierModel": [[38, 2, 1, "", "clear"], [38, 2, 1, "", "copy"], [38, 2, 1, "", "explainParam"], [38, 2, 1, "", "explainParams"], [38, 2, 1, "", "extractParamMap"], [38, 2, 1, "", "getInputCols"], [38, 2, 1, "", "getLazyAnnotator"], [38, 2, 1, "", "getOrDefault"], [38, 2, 1, "", "getOutputCol"], [38, 2, 1, "", "getParam"], [38, 2, 1, "", "getParamValue"], [38, 2, 1, "", "hasDefault"], [38, 2, 1, "", "hasParam"], [38, 2, 1, "", "isDefined"], [38, 2, 1, "", "isSet"], [38, 2, 1, "", "load"], [38, 4, 1, "", "params"], [38, 2, 1, "", "read"], [38, 2, 1, "", "save"], [38, 2, 1, "", "set"], [38, 2, 1, "", "setClassificationModel"], [38, 2, 1, "", "setInputCols"], [38, 2, 1, "", "setLabels"], [38, 2, 1, "", "setLazyAnnotator"], [38, 2, 1, "", "setMergeChunks"], [38, 2, 1, "", "setOutputCol"], [38, 2, 1, "", "setParamValue"], [38, 2, 1, "", "setVectorizationModel"], [38, 2, 1, "", "transform"], [38, 5, 1, "", "uid"], [38, 2, 1, "", "write"]], "sparknlp_jsl.annotator.DrugNormalizer": [[39, 2, 1, "", "clear"], [39, 2, 1, "", "copy"], [39, 2, 1, "", "explainParam"], [39, 2, 1, "", "explainParams"], [39, 2, 1, "", "extractParamMap"], [39, 2, 1, "", "getInputCols"], [39, 2, 1, "", "getLazyAnnotator"], [39, 2, 1, "", "getOrDefault"], [39, 2, 1, "", "getOutputCol"], [39, 2, 1, "", "getParam"], [39, 2, 1, "", "getParamValue"], [39, 2, 1, "", "hasDefault"], [39, 2, 1, "", "hasParam"], [39, 2, 1, "", "isDefined"], [39, 2, 1, "", "isSet"], [39, 2, 1, "", "load"], [39, 4, 1, "", "params"], [39, 2, 1, "", "read"], [39, 2, 1, "", "save"], [39, 2, 1, "", "set"], [39, 2, 1, "", "setInputCols"], [39, 2, 1, "", "setLazyAnnotator"], [39, 2, 1, "", "setLowercase"], [39, 2, 1, "", "setOutputCol"], [39, 2, 1, "", "setParamValue"], [39, 2, 1, "", "setPolicy"], [39, 2, 1, "", "transform"], [39, 5, 1, "", "uid"], [39, 2, 1, "", "write"]], "sparknlp_jsl.annotator.EntityChunkEmbeddings": [[40, 2, 1, "", "clear"], [40, 2, 1, "", "copy"], [40, 2, 1, "", "explainParam"], [40, 2, 1, "", "explainParams"], [40, 2, 1, "", "extractParamMap"], [40, 2, 1, "", "getBatchSize"], [40, 2, 1, "", "getCaseSensitive"], [40, 2, 1, "", "getDimension"], [40, 2, 1, "", "getInputCols"], [40, 2, 1, "", "getLazyAnnotator"], [40, 2, 1, "", "getOrDefault"], [40, 2, 1, "", "getOutputCol"], [40, 2, 1, "", "getParam"], [40, 2, 1, "", "getParamValue"], [40, 2, 1, "", "getStorageRef"], [40, 2, 1, "", "hasDefault"], [40, 2, 1, "", "hasParam"], [40, 2, 1, "", "isDefined"], [40, 2, 1, "", "isSet"], [40, 2, 1, "", "load"], [40, 2, 1, "", "loadSavedModel"], [40, 4, 1, "", "params"], [40, 2, 1, "", "pretrained"], [40, 2, 1, "", "read"], [40, 2, 1, "", "save"], [40, 2, 1, "", "set"], [40, 2, 1, "", "setBatchSize"], [40, 2, 1, "", "setCaseSensitive"], [40, 2, 1, "", "setConfigProtoBytes"], [40, 2, 1, "", "setDimension"], [40, 2, 1, "", "setEntityWeights"], [40, 2, 1, "", "setInputCols"], [40, 2, 1, "", "setIsLong"], [40, 2, 1, "", "setLazyAnnotator"], [40, 2, 1, "", "setMaxSentenceLength"], [40, 2, 1, "", "setMaxSyntacticDistance"], [40, 2, 1, "", "setOutputCol"], [40, 2, 1, "", "setParamValue"], [40, 2, 1, "", "setStorageRef"], [40, 2, 1, "", "setTargetEntities"], [40, 2, 1, "", "transform"], [40, 5, 1, "", "uid"], [40, 2, 1, "", "write"]], "sparknlp_jsl.annotator.GenericClassifierApproach": [[41, 2, 1, "", "clear"], [41, 2, 1, "", "copy"], [41, 2, 1, "", "explainParam"], [41, 2, 1, "", "explainParams"], [41, 2, 1, "", "extractParamMap"], [41, 2, 1, "", "fit"], [41, 2, 1, "", "fitMultiple"], [41, 2, 1, "", "getInputCols"], [41, 2, 1, "", "getLazyAnnotator"], [41, 2, 1, "", "getOrDefault"], [41, 2, 1, "", "getOutputCol"], [41, 2, 1, "", "getParam"], [41, 2, 1, "", "getParamValue"], [41, 2, 1, "", "hasDefault"], [41, 2, 1, "", "hasParam"], [41, 2, 1, "", "isDefined"], [41, 2, 1, "", "isSet"], [41, 2, 1, "", "load"], [41, 4, 1, "", "params"], [41, 2, 1, "", "read"], [41, 2, 1, "", "save"], [41, 2, 1, "", "set"], [41, 2, 1, "", "setBatchSize"], [41, 2, 1, "", "setDropout"], [41, 2, 1, "", "setEpochsNumber"], [41, 2, 1, "", "setFeatureScaling"], [41, 2, 1, "", "setFixImbalance"], [41, 2, 1, "", "setInputCols"], [41, 2, 1, "", "setLabelCol"], [41, 2, 1, "", "setLazyAnnotator"], [41, 2, 1, "", "setLearningRate"], [41, 2, 1, "", "setModelFile"], [41, 2, 1, "", "setOutputCol"], [41, 2, 1, "", "setOutputLogsPath"], [41, 2, 1, "", "setParamValue"], [41, 2, 1, "", "setValidationSplit"], [41, 5, 1, "", "uid"], [41, 2, 1, "", "write"]], "sparknlp_jsl.annotator.GenericClassifierModel": [[42, 2, 1, "", "clear"], [42, 2, 1, "", "copy"], [42, 2, 1, "", "explainParam"], [42, 2, 1, "", "explainParams"], [42, 2, 1, "", "extractParamMap"], [42, 2, 1, "", "getInputCols"], [42, 2, 1, "", "getLazyAnnotator"], [42, 2, 1, "", "getOrDefault"], [42, 2, 1, "", "getOutputCol"], [42, 2, 1, "", "getParam"], [42, 2, 1, "", "getParamValue"], [42, 2, 1, "", "hasDefault"], [42, 2, 1, "", "hasParam"], [42, 2, 1, "", "isDefined"], [42, 2, 1, "", "isSet"], [42, 2, 1, "", "load"], [42, 4, 1, "", "params"], [42, 2, 1, "", "read"], [42, 2, 1, "", "save"], [42, 2, 1, "", "set"], [42, 2, 1, "", "setInputCols"], [42, 2, 1, "", "setLazyAnnotator"], [42, 2, 1, "", "setOutputCol"], [42, 2, 1, "", "setParamValue"], [42, 2, 1, "", "transform"], [42, 5, 1, "", "uid"], [42, 2, 1, "", "write"]], "sparknlp_jsl.annotator.IOBTagger": [[43, 2, 1, "", "clear"], [43, 2, 1, "", "copy"], [43, 2, 1, "", "explainParam"], [43, 2, 1, "", "explainParams"], [43, 2, 1, "", "extractParamMap"], [43, 2, 1, "", "getInputCols"], [43, 2, 1, "", "getLazyAnnotator"], [43, 2, 1, "", "getOrDefault"], [43, 2, 1, "", "getOutputCol"], [43, 2, 1, "", "getParam"], [43, 2, 1, "", "getParamValue"], [43, 2, 1, "", "hasDefault"], [43, 2, 1, "", "hasParam"], [43, 2, 1, "", "isDefined"], [43, 2, 1, "", "isSet"], [43, 2, 1, "", "load"], [43, 4, 1, "", "params"], [43, 2, 1, "", "read"], [43, 2, 1, "", "save"], [43, 2, 1, "", "set"], [43, 2, 1, "", "setInputCols"], [43, 2, 1, "", "setLazyAnnotator"], [43, 2, 1, "", "setOutputCol"], [43, 2, 1, "", "setParamValue"], [43, 2, 1, "", "setScheme"], [43, 2, 1, "", "transform"], [43, 5, 1, "", "uid"], [43, 2, 1, "", "write"]], "sparknlp_jsl.annotator.MedicalBertForSequenceClassification": [[44, 2, 1, "", "clear"], [44, 2, 1, "", "copy"], [44, 2, 1, "", "explainParam"], [44, 2, 1, "", "explainParams"], [44, 2, 1, "", "extractParamMap"], [44, 2, 1, "", "getBatchSize"], [44, 2, 1, "", "getCaseSensitive"], [44, 2, 1, "", "getClasses"], [44, 2, 1, "", "getInputCols"], [44, 2, 1, "", "getLazyAnnotator"], [44, 2, 1, "", "getOrDefault"], [44, 2, 1, "", "getOutputCol"], [44, 2, 1, "", "getParam"], [44, 2, 1, "", "getParamValue"], [44, 2, 1, "", "hasDefault"], [44, 2, 1, "", "hasParam"], [44, 2, 1, "", "isDefined"], [44, 2, 1, "", "isSet"], [44, 2, 1, "", "load"], [44, 2, 1, "", "loadSavedModel"], [44, 2, 1, "", "loadSavedModelOpenSource"], [44, 4, 1, "", "params"], [44, 2, 1, "", "pretrained"], [44, 2, 1, "", "read"], [44, 2, 1, "", "save"], [44, 2, 1, "", "set"], [44, 2, 1, "", "setBatchSize"], [44, 2, 1, "", "setCaseSensitive"], [44, 2, 1, "", "setCoalesceSentences"], [44, 2, 1, "", "setConfigProtoBytes"], [44, 2, 1, "", "setInputCols"], [44, 2, 1, "", "setLazyAnnotator"], [44, 2, 1, "", "setMaxSentenceLength"], [44, 2, 1, "", "setOutputCol"], [44, 2, 1, "", "setParamValue"], [44, 2, 1, "", "transform"], [44, 5, 1, "", "uid"], [44, 2, 1, "", "write"]], "sparknlp_jsl.annotator.MedicalBertForTokenClassifier": [[45, 2, 1, "", "clear"], [45, 2, 1, "", "copy"], [45, 2, 1, "", "explainParam"], [45, 2, 1, "", "explainParams"], [45, 2, 1, "", "extractParamMap"], [45, 2, 1, "", "getBatchSize"], [45, 2, 1, "", "getCaseSensitive"], [45, 2, 1, "", "getClasses"], [45, 2, 1, "", "getInputCols"], [45, 2, 1, "", "getLazyAnnotator"], [45, 2, 1, "", "getOrDefault"], [45, 2, 1, "", "getOutputCol"], [45, 2, 1, "", "getParam"], [45, 2, 1, "", "getParamValue"], [45, 2, 1, "", "hasDefault"], [45, 2, 1, "", "hasParam"], [45, 2, 1, "", "isDefined"], [45, 2, 1, "", "isSet"], [45, 2, 1, "", "load"], [45, 2, 1, "", "loadSavedModel"], [45, 2, 1, "", "loadSavedModelOpenSource"], [45, 4, 1, "", "params"], [45, 2, 1, "", "pretrained"], [45, 2, 1, "", "read"], [45, 2, 1, "", "save"], [45, 2, 1, "", "set"], [45, 2, 1, "", "setBatchSize"], [45, 2, 1, "", "setCaseSensitive"], [45, 2, 1, "", "setConfigProtoBytes"], [45, 2, 1, "", "setInputCols"], [45, 2, 1, "", "setLazyAnnotator"], [45, 2, 1, "", "setMaxSentenceLength"], [45, 2, 1, "", "setOutputCol"], [45, 2, 1, "", "setParamValue"], [45, 2, 1, "", "transform"], [45, 5, 1, "", "uid"], [45, 2, 1, "", "write"]], "sparknlp_jsl.annotator.MedicalDistilBertForSequenceClassification": [[46, 2, 1, "", "clear"], [46, 2, 1, "", "copy"], [46, 2, 1, "", "explainParam"], [46, 2, 1, "", "explainParams"], [46, 2, 1, "", "extractParamMap"], [46, 2, 1, "", "getBatchSize"], [46, 2, 1, "", "getCaseSensitive"], [46, 2, 1, "", "getClasses"], [46, 2, 1, "", "getInputCols"], [46, 2, 1, "", "getLazyAnnotator"], [46, 2, 1, "", "getOrDefault"], [46, 2, 1, "", "getOutputCol"], [46, 2, 1, "", "getParam"], [46, 2, 1, "", "getParamValue"], [46, 2, 1, "", "hasDefault"], [46, 2, 1, "", "hasParam"], [46, 2, 1, "", "isDefined"], [46, 2, 1, "", "isSet"], [46, 2, 1, "", "load"], [46, 2, 1, "", "loadSavedModel"], [46, 2, 1, "", "loadSavedModelOpenSource"], [46, 4, 1, "", "params"], [46, 2, 1, "", "pretrained"], [46, 2, 1, "", "read"], [46, 2, 1, "", "save"], [46, 2, 1, "", "set"], [46, 2, 1, "", "setBatchSize"], [46, 2, 1, "", "setCaseSensitive"], [46, 2, 1, "", "setCoalesceSentences"], [46, 2, 1, "", "setConfigProtoBytes"], [46, 2, 1, "", "setInputCols"], [46, 2, 1, "", "setLazyAnnotator"], [46, 2, 1, "", "setMaxSentenceLength"], [46, 2, 1, "", "setOutputCol"], [46, 2, 1, "", "setParamValue"], [46, 2, 1, "", "transform"], [46, 5, 1, "", "uid"], [46, 2, 1, "", "write"]], "sparknlp_jsl.annotator.MedicalGraphBuilderModel": [[47, 2, 1, "", "clear"], [47, 2, 1, "", "copy"], [47, 2, 1, "", "explainParam"], [47, 2, 1, "", "explainParams"], [47, 2, 1, "", "extractParamMap"], [47, 2, 1, "", "getOrDefault"], [47, 2, 1, "", "getParam"], [47, 2, 1, "", "hasDefault"], [47, 2, 1, "", "hasParam"], [47, 2, 1, "", "isDefined"], [47, 2, 1, "", "isSet"], [47, 2, 1, "", "load"], [47, 4, 1, "", "params"], [47, 2, 1, "", "read"], [47, 2, 1, "", "save"], [47, 2, 1, "", "set"], [47, 2, 1, "", "transform"], [47, 5, 1, "", "uid"], [47, 2, 1, "", "write"]], "sparknlp_jsl.annotator.MedicalNerApproach": [[48, 2, 1, "", "clear"], [48, 2, 1, "", "copy"], [48, 2, 1, "", "explainParam"], [48, 2, 1, "", "explainParams"], [48, 2, 1, "", "extractParamMap"], [48, 2, 1, "", "fit"], [48, 2, 1, "", "fitMultiple"], [48, 2, 1, "", "getInputCols"], [48, 2, 1, "", "getLabelColumn"], [48, 2, 1, "", "getLazyAnnotator"], [48, 2, 1, "", "getOrDefault"], [48, 2, 1, "", "getOutputCol"], [48, 2, 1, "", "getParam"], [48, 2, 1, "", "getParamValue"], [48, 2, 1, "", "hasDefault"], [48, 2, 1, "", "hasParam"], [48, 2, 1, "", "isDefined"], [48, 2, 1, "", "isSet"], [48, 2, 1, "", "load"], [48, 4, 1, "", "params"], [48, 2, 1, "", "read"], [48, 2, 1, "", "save"], [48, 2, 1, "", "set"], [48, 2, 1, "", "setBatchSize"], [48, 2, 1, "", "setConfigProtoBytes"], [48, 2, 1, "", "setDropout"], [48, 2, 1, "", "setEarlyStoppingCriterion"], [48, 2, 1, "", "setEarlyStoppingPatience"], [48, 2, 1, "", "setEnableMemoryOptimizer"], [48, 2, 1, "", "setEnableOutputLogs"], [48, 2, 1, "", "setEntities"], [48, 2, 1, "", "setEvaluationLogExtended"], [48, 2, 1, "", "setGraphFile"], [48, 2, 1, "", "setGraphFolder"], [48, 2, 1, "", "setIncludeAllConfidenceScores"], [48, 2, 1, "", "setIncludeConfidence"], [48, 2, 1, "", "setInputCols"], [48, 2, 1, "", "setLabelColumn"], [48, 2, 1, "", "setLazyAnnotator"], [48, 2, 1, "", "setLogPrefix"], [48, 2, 1, "", "setLr"], [48, 2, 1, "", "setMaxEpochs"], [48, 2, 1, "", "setMinEpochs"], [48, 2, 1, "", "setOutputCol"], [48, 2, 1, "", "setOutputLogsPath"], [48, 2, 1, "", "setOverrideExistingTags"], [48, 2, 1, "", "setParamValue"], [48, 2, 1, "", "setPo"], [48, 2, 1, "", "setPretrainedModelPath"], [48, 2, 1, "", "setRandomSeed"], [48, 2, 1, "", "setTagsMapping"], [48, 2, 1, "", "setTestDataset"], [48, 2, 1, "", "setUseBestModel"], [48, 2, 1, "", "setUseContrib"], [48, 2, 1, "", "setValidationSplit"], [48, 2, 1, "", "setVerbose"], [48, 5, 1, "", "uid"], [48, 2, 1, "", "write"]], "sparknlp_jsl.annotator.MedicalNerModel": [[49, 2, 1, "", "clear"], [49, 2, 1, "", "copy"], [49, 2, 1, "", "explainParam"], [49, 2, 1, "", "explainParams"], [49, 2, 1, "", "extractParamMap"], [49, 2, 1, "", "getBatchSize"], [49, 2, 1, "", "getInputCols"], [49, 2, 1, "", "getLazyAnnotator"], [49, 2, 1, "", "getOrDefault"], [49, 2, 1, "", "getOutputCol"], [49, 2, 1, "", "getParam"], [49, 2, 1, "", "getParamValue"], [49, 2, 1, "", "getStorageRef"], [49, 2, 1, "", "hasDefault"], [49, 2, 1, "", "hasParam"], [49, 2, 1, "", "isDefined"], [49, 2, 1, "", "isSet"], [49, 2, 1, "", "load"], [49, 4, 1, "", "params"], [49, 2, 1, "", "read"], [49, 2, 1, "", "save"], [49, 2, 1, "", "set"], [49, 2, 1, "", "setBatchSize"], [49, 2, 1, "", "setConfigProtoBytes"], [49, 2, 1, "", "setIncludeConfidence"], [49, 2, 1, "", "setInferenceBatchSize"], [49, 2, 1, "", "setInputCols"], [49, 2, 1, "", "setLabelCasing"], [49, 2, 1, "", "setLazyAnnotator"], [49, 2, 1, "", "setOutputCol"], [49, 2, 1, "", "setParamValue"], [49, 2, 1, "", "setStorageRef"], [49, 2, 1, "", "transform"], [49, 5, 1, "", "uid"], [49, 2, 1, "", "write"]], "sparknlp_jsl.annotator.NerChunker": [[50, 2, 1, "", "clear"], [50, 2, 1, "", "copy"], [50, 2, 1, "", "explainParam"], [50, 2, 1, "", "explainParams"], [50, 2, 1, "", "extractParamMap"], [50, 2, 1, "", "getInputCols"], [50, 2, 1, "", "getLazyAnnotator"], [50, 2, 1, "", "getOrDefault"], [50, 2, 1, "", "getOutputCol"], [50, 2, 1, "", "getParam"], [50, 2, 1, "", "getParamValue"], [50, 2, 1, "", "hasDefault"], [50, 2, 1, "", "hasParam"], [50, 2, 1, "", "isDefined"], [50, 2, 1, "", "isSet"], [50, 2, 1, "", "load"], [50, 4, 1, "", "params"], [50, 2, 1, "", "read"], [50, 2, 1, "", "save"], [50, 2, 1, "", "set"], [50, 2, 1, "", "setInputCols"], [50, 2, 1, "", "setLazyAnnotator"], [50, 2, 1, "", "setOutputCol"], [50, 2, 1, "", "setParamValue"], [50, 2, 1, "", "setRegexParsers"], [50, 2, 1, "", "transform"], [50, 5, 1, "", "uid"], [50, 2, 1, "", "write"]], "sparknlp_jsl.annotator.NerConverterInternal": [[51, 2, 1, "", "clear"], [51, 2, 1, "", "copy"], [51, 2, 1, "", "explainParam"], [51, 2, 1, "", "explainParams"], [51, 2, 1, "", "extractParamMap"], [51, 2, 1, "", "getInputCols"], [51, 2, 1, "", "getLazyAnnotator"], [51, 2, 1, "", "getOrDefault"], [51, 2, 1, "", "getOutputCol"], [51, 2, 1, "", "getParam"], [51, 2, 1, "", "getParamValue"], [51, 2, 1, "", "hasDefault"], [51, 2, 1, "", "hasParam"], [51, 2, 1, "", "isDefined"], [51, 2, 1, "", "isSet"], [51, 2, 1, "", "load"], [51, 4, 1, "", "params"], [51, 2, 1, "", "read"], [51, 2, 1, "", "save"], [51, 2, 1, "", "set"], [51, 2, 1, "", "setBlackList"], [51, 2, 1, "", "setGreedyMode"], [51, 2, 1, "", "setInputCols"], [51, 2, 1, "", "setLazyAnnotator"], [51, 2, 1, "", "setOutputCol"], [51, 2, 1, "", "setParamValue"], [51, 2, 1, "", "setPreservePosition"], [51, 2, 1, "", "setReplaceDictResource"], [51, 2, 1, "", "setReplaceLabels"], [51, 2, 1, "", "setThreshold"], [51, 2, 1, "", "setWhiteList"], [51, 2, 1, "", "transform"], [51, 5, 1, "", "uid"], [51, 2, 1, "", "write"]], "sparknlp_jsl.annotator.NerDisambiguator": [[52, 2, 1, "", "clear"], [52, 2, 1, "", "copy"], [52, 2, 1, "", "explainParam"], [52, 2, 1, "", "explainParams"], [52, 2, 1, "", "extractParamMap"], [52, 2, 1, "", "fit"], [52, 2, 1, "", "fitMultiple"], [52, 2, 1, "", "getInputCols"], [52, 2, 1, "", "getLazyAnnotator"], [52, 2, 1, "", "getOrDefault"], [52, 2, 1, "", "getOutputCol"], [52, 2, 1, "", "getParam"], [52, 2, 1, "", "getParamValue"], [52, 2, 1, "", "hasDefault"], [52, 2, 1, "", "hasParam"], [52, 2, 1, "", "isDefined"], [52, 2, 1, "", "isSet"], [52, 2, 1, "", "load"], [52, 4, 1, "", "params"], [52, 2, 1, "", "read"], [52, 2, 1, "", "save"], [52, 2, 1, "", "set"], [52, 2, 1, "", "setEmbeddingType"], [52, 2, 1, "", "setInputCols"], [52, 2, 1, "", "setLazyAnnotator"], [52, 2, 1, "", "setLevenshteinDistanceThresholdParam"], [52, 2, 1, "", "setNarrowWithApproximateMatching"], [52, 2, 1, "", "setNearMatchingGapParam"], [52, 2, 1, "", "setNumFirstChars"], [52, 2, 1, "", "setOutputCol"], [52, 2, 1, "", "setParamValue"], [52, 2, 1, "", "setPredictionLimit"], [52, 2, 1, "", "setS3KnowledgeBaseName"], [52, 2, 1, "", "setTokenSearch"], [52, 5, 1, "", "uid"], [52, 2, 1, "", "write"]], "sparknlp_jsl.annotator.NerDisambiguatorModel": [[53, 2, 1, "", "clear"], [53, 2, 1, "", "copy"], [53, 2, 1, "", "explainParam"], [53, 2, 1, "", "explainParams"], [53, 2, 1, "", "extractParamMap"], [53, 2, 1, "", "getInputCols"], [53, 2, 1, "", "getLazyAnnotator"], [53, 2, 1, "", "getOrDefault"], [53, 2, 1, "", "getOutputCol"], [53, 2, 1, "", "getParam"], [53, 2, 1, "", "getParamValue"], [53, 2, 1, "", "hasDefault"], [53, 2, 1, "", "hasParam"], [53, 2, 1, "", "isDefined"], [53, 2, 1, "", "isSet"], [53, 2, 1, "", "load"], [53, 4, 1, "", "params"], [53, 2, 1, "", "read"], [53, 2, 1, "", "save"], [53, 2, 1, "", "set"], [53, 2, 1, "", "setEmbeddingType"], [53, 2, 1, "", "setInputCols"], [53, 2, 1, "", "setLazyAnnotator"], [53, 2, 1, "", "setLevenshteinDistanceThresholdParam"], [53, 2, 1, "", "setNarrowWithApproximateMatching"], [53, 2, 1, "", "setNearMatchingGapParam"], [53, 2, 1, "", "setNumFirstChars"], [53, 2, 1, "", "setOutputCol"], [53, 2, 1, "", "setParamValue"], [53, 2, 1, "", "setPredictionLimit"], [53, 2, 1, "", "setTokenSearch"], [53, 2, 1, "", "transform"], [53, 5, 1, "", "uid"], [53, 2, 1, "", "write"]], "sparknlp_jsl.annotator.PosologyREModel": [[54, 2, 1, "", "clear"], [54, 2, 1, "", "copy"], [54, 2, 1, "", "explainParam"], [54, 2, 1, "", "explainParams"], [54, 2, 1, "", "extractParamMap"], [54, 2, 1, "", "getClasses"], [54, 2, 1, "", "getInputCols"], [54, 2, 1, "", "getLazyAnnotator"], [54, 2, 1, "", "getOrDefault"], [54, 2, 1, "", "getOutputCol"], [54, 2, 1, "", "getParam"], [54, 2, 1, "", "getParamValue"], [54, 2, 1, "", "hasDefault"], [54, 2, 1, "", "hasParam"], [54, 2, 1, "", "isDefined"], [54, 2, 1, "", "isSet"], [54, 2, 1, "", "load"], [54, 4, 1, "", "params"], [54, 2, 1, "", "read"], [54, 2, 1, "", "save"], [54, 2, 1, "", "set"], [54, 2, 1, "", "setCustomLabels"], [54, 2, 1, "", "setInputCols"], [54, 2, 1, "", "setLazyAnnotator"], [54, 2, 1, "", "setMaxSyntacticDistance"], [54, 2, 1, "", "setOutputCol"], [54, 2, 1, "", "setParamValue"], [54, 2, 1, "", "setPredictionThreshold"], [54, 2, 1, "", "setRelationPairs"], [54, 2, 1, "", "setRelationPairsCaseSensitive"], [54, 2, 1, "", "transform"], [54, 5, 1, "", "uid"], [54, 2, 1, "", "write"]], "sparknlp_jsl.annotator.RENerChunksFilter": [[55, 2, 1, "", "clear"], [55, 2, 1, "", "copy"], [55, 2, 1, "", "explainParam"], [55, 2, 1, "", "explainParams"], [55, 2, 1, "", "extractParamMap"], [55, 2, 1, "", "getInputCols"], [55, 2, 1, "", "getLazyAnnotator"], [55, 2, 1, "", "getOrDefault"], [55, 2, 1, "", "getOutputCol"], [55, 2, 1, "", "getParam"], [55, 2, 1, "", "getParamValue"], [55, 2, 1, "", "hasDefault"], [55, 2, 1, "", "hasParam"], [55, 2, 1, "", "isDefined"], [55, 2, 1, "", "isSet"], [55, 2, 1, "", "load"], [55, 4, 1, "", "params"], [55, 2, 1, "", "read"], [55, 2, 1, "", "save"], [55, 2, 1, "", "set"], [55, 2, 1, "", "setDocLevelRelations"], [55, 2, 1, "", "setInputCols"], [55, 2, 1, "", "setLazyAnnotator"], [55, 2, 1, "", "setMaxSyntacticDistance"], [55, 2, 1, "", "setOutputCol"], [55, 2, 1, "", "setParamValue"], [55, 2, 1, "", "setRelationPairs"], [55, 2, 1, "", "setRelationPairsCaseSensitive"], [55, 2, 1, "", "transform"], [55, 5, 1, "", "uid"], [55, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ReIdentification": [[56, 2, 1, "", "clear"], [56, 2, 1, "", "copy"], [56, 2, 1, "", "explainParam"], [56, 2, 1, "", "explainParams"], [56, 2, 1, "", "extractParamMap"], [56, 2, 1, "", "getInputCols"], [56, 2, 1, "", "getLazyAnnotator"], [56, 2, 1, "", "getOrDefault"], [56, 2, 1, "", "getOutputCol"], [56, 2, 1, "", "getParam"], [56, 2, 1, "", "getParamValue"], [56, 2, 1, "", "hasDefault"], [56, 2, 1, "", "hasParam"], [56, 2, 1, "", "isDefined"], [56, 2, 1, "", "isSet"], [56, 2, 1, "", "load"], [56, 4, 1, "", "params"], [56, 2, 1, "", "read"], [56, 2, 1, "", "save"], [56, 2, 1, "", "set"], [56, 2, 1, "", "setInputCols"], [56, 2, 1, "", "setLazyAnnotator"], [56, 2, 1, "", "setOutputCol"], [56, 2, 1, "", "setParamValue"], [56, 2, 1, "", "transform"], [56, 5, 1, "", "uid"], [56, 2, 1, "", "write"]], "sparknlp_jsl.annotator.RelationExtractionApproach": [[57, 2, 1, "", "clear"], [57, 2, 1, "", "copy"], [57, 2, 1, "", "explainParam"], [57, 2, 1, "", "explainParams"], [57, 2, 1, "", "extractParamMap"], [57, 2, 1, "", "fit"], [57, 2, 1, "", "fitMultiple"], [57, 2, 1, "", "getInputCols"], [57, 2, 1, "", "getLazyAnnotator"], [57, 2, 1, "", "getOrDefault"], [57, 2, 1, "", "getOutputCol"], [57, 2, 1, "", "getParam"], [57, 2, 1, "", "getParamValue"], [57, 2, 1, "", "hasDefault"], [57, 2, 1, "", "hasParam"], [57, 2, 1, "", "isDefined"], [57, 2, 1, "", "isSet"], [57, 2, 1, "", "load"], [57, 4, 1, "", "params"], [57, 2, 1, "", "read"], [57, 2, 1, "", "save"], [57, 2, 1, "", "set"], [57, 2, 1, "", "setBatchSize"], [57, 2, 1, "", "setCustomLabels"], [57, 2, 1, "", "setDropout"], [57, 2, 1, "", "setEpochsNumber"], [57, 2, 1, "", "setFeatureScaling"], [57, 2, 1, "", "setFixImbalance"], [57, 2, 1, "", "setFromEntity"], [57, 2, 1, "", "setInputCols"], [57, 2, 1, "", "setLabelCol"], [57, 2, 1, "", "setLazyAnnotator"], [57, 2, 1, "", "setLearningRate"], [57, 2, 1, "", "setModelFile"], [57, 2, 1, "", "setOutputCol"], [57, 2, 1, "", "setOutputLogsPath"], [57, 2, 1, "", "setParamValue"], [57, 2, 1, "", "setToEntity"], [57, 2, 1, "", "setValidationSplit"], [57, 5, 1, "", "uid"], [57, 2, 1, "", "write"]], "sparknlp_jsl.annotator.RelationExtractionDLModel": [[58, 2, 1, "", "clear"], [58, 2, 1, "", "copy"], [58, 2, 1, "", "explainParam"], [58, 2, 1, "", "explainParams"], [58, 2, 1, "", "extractParamMap"], [58, 2, 1, "", "getClasses"], [58, 2, 1, "", "getInputCols"], [58, 2, 1, "", "getLazyAnnotator"], [58, 2, 1, "", "getOrDefault"], [58, 2, 1, "", "getOutputCol"], [58, 2, 1, "", "getParam"], [58, 2, 1, "", "getParamValue"], [58, 2, 1, "", "hasDefault"], [58, 2, 1, "", "hasParam"], [58, 2, 1, "", "isDefined"], [58, 2, 1, "", "isSet"], [58, 2, 1, "", "load"], [58, 4, 1, "", "params"], [58, 2, 1, "", "read"], [58, 2, 1, "", "save"], [58, 2, 1, "", "set"], [58, 2, 1, "", "setBatchSize"], [58, 2, 1, "", "setCustomLabels"], [58, 2, 1, "", "setInputCols"], [58, 2, 1, "", "setLazyAnnotator"], [58, 2, 1, "", "setOutputCol"], [58, 2, 1, "", "setParamValue"], [58, 2, 1, "", "setPredictionThreshold"], [58, 2, 1, "", "transform"], [58, 5, 1, "", "uid"], [58, 2, 1, "", "write"]], "sparknlp_jsl.annotator.RelationExtractionModel": [[59, 2, 1, "", "clear"], [59, 2, 1, "", "copy"], [59, 2, 1, "", "explainParam"], [59, 2, 1, "", "explainParams"], [59, 2, 1, "", "extractParamMap"], [59, 2, 1, "", "getClasses"], [59, 2, 1, "", "getInputCols"], [59, 2, 1, "", "getLazyAnnotator"], [59, 2, 1, "", "getOrDefault"], [59, 2, 1, "", "getOutputCol"], [59, 2, 1, "", "getParam"], [59, 2, 1, "", "getParamValue"], [59, 2, 1, "", "hasDefault"], [59, 2, 1, "", "hasParam"], [59, 2, 1, "", "isDefined"], [59, 2, 1, "", "isSet"], [59, 2, 1, "", "load"], [59, 4, 1, "", "params"], [59, 2, 1, "", "read"], [59, 2, 1, "", "save"], [59, 2, 1, "", "set"], [59, 2, 1, "", "setCustomLabels"], [59, 2, 1, "", "setInputCols"], [59, 2, 1, "", "setLazyAnnotator"], [59, 2, 1, "", "setMaxSyntacticDistance"], [59, 2, 1, "", "setOutputCol"], [59, 2, 1, "", "setParamValue"], [59, 2, 1, "", "setPredictionThreshold"], [59, 2, 1, "", "setRelationPairs"], [59, 2, 1, "", "setRelationPairsCaseSensitive"], [59, 2, 1, "", "transform"], [59, 5, 1, "", "uid"], [59, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ResolverMerger": [[60, 2, 1, "", "clear"], [60, 2, 1, "", "copy"], [60, 2, 1, "", "explainParam"], [60, 2, 1, "", "explainParams"], [60, 2, 1, "", "extractParamMap"], [60, 2, 1, "", "getInputCols"], [60, 2, 1, "", "getLazyAnnotator"], [60, 2, 1, "", "getOrDefault"], [60, 2, 1, "", "getOutputCol"], [60, 2, 1, "", "getParam"], [60, 2, 1, "", "getParamValue"], [60, 2, 1, "", "hasDefault"], [60, 2, 1, "", "hasParam"], [60, 2, 1, "", "isDefined"], [60, 2, 1, "", "isSet"], [60, 2, 1, "", "load"], [60, 4, 1, "", "params"], [60, 2, 1, "", "read"], [60, 2, 1, "", "save"], [60, 2, 1, "", "set"], [60, 2, 1, "", "setInputCols"], [60, 2, 1, "", "setLazyAnnotator"], [60, 2, 1, "", "setOutputCol"], [60, 2, 1, "", "setParamValue"], [60, 2, 1, "", "transform"], [60, 5, 1, "", "uid"], [60, 2, 1, "", "write"]], "sparknlp_jsl.annotator.Router": [[61, 2, 1, "", "clear"], [61, 2, 1, "", "copy"], [61, 2, 1, "", "explainParam"], [61, 2, 1, "", "explainParams"], [61, 2, 1, "", "extractParamMap"], [61, 2, 1, "", "getInputCols"], [61, 2, 1, "", "getLazyAnnotator"], [61, 2, 1, "", "getOrDefault"], [61, 2, 1, "", "getOutputCol"], [61, 2, 1, "", "getParam"], [61, 2, 1, "", "getParamValue"], [61, 2, 1, "", "hasDefault"], [61, 2, 1, "", "hasParam"], [61, 2, 1, "", "isDefined"], [61, 2, 1, "", "isSet"], [61, 2, 1, "", "load"], [61, 4, 1, "", "params"], [61, 2, 1, "", "read"], [61, 2, 1, "", "save"], [61, 2, 1, "", "set"], [61, 2, 1, "", "setFilterFieldsElements"], [61, 2, 1, "", "setInputCols"], [61, 2, 1, "", "setInputType"], [61, 2, 1, "", "setLazyAnnotator"], [61, 2, 1, "", "setMetadataField"], [61, 2, 1, "", "setOutputCol"], [61, 2, 1, "", "setParamValue"], [61, 2, 1, "", "transform"], [61, 5, 1, "", "uid"], [61, 2, 1, "", "write"]], "sparknlp_jsl.annotator.SentenceEntityResolverApproach": [[62, 2, 1, "", "clear"], [62, 2, 1, "", "copy"], [62, 2, 1, "", "explainParam"], [62, 2, 1, "", "explainParams"], [62, 2, 1, "", "extractParamMap"], [62, 2, 1, "", "fit"], [62, 2, 1, "", "fitMultiple"], [62, 2, 1, "", "getCaseSensitive"], [62, 2, 1, "", "getInputCols"], [62, 2, 1, "", "getLazyAnnotator"], [62, 2, 1, "", "getOrDefault"], [62, 2, 1, "", "getOutputCol"], [62, 2, 1, "", "getParam"], [62, 2, 1, "", "getParamValue"], [62, 2, 1, "", "hasDefault"], [62, 2, 1, "", "hasParam"], [62, 2, 1, "", "isDefined"], [62, 2, 1, "", "isSet"], [62, 2, 1, "", "load"], [62, 4, 1, "", "params"], [62, 2, 1, "", "read"], [62, 2, 1, "", "save"], [62, 2, 1, "", "set"], [62, 2, 1, "", "setAuxLabelCol"], [62, 2, 1, "", "setCaseSensitive"], [62, 2, 1, "", "setConfidenceFunction"], [62, 2, 1, "", "setDistanceFunction"], [62, 2, 1, "", "setExtractCosineDistances"], [62, 2, 1, "", "setInputCols"], [62, 2, 1, "", "setLabelCol"], [62, 2, 1, "", "setLazyAnnotator"], [62, 2, 1, "", "setMissAsEmpty"], [62, 2, 1, "", "setNeighbours"], [62, 2, 1, "", "setNormalizedCol"], [62, 2, 1, "", "setOutputCol"], [62, 2, 1, "", "setParamValue"], [62, 2, 1, "", "setThreshold"], [62, 2, 1, "", "setUseAuxLabel"], [62, 5, 1, "", "uid"], [62, 2, 1, "", "write"]], "sparknlp_jsl.annotator.SentenceEntityResolverModel": [[63, 2, 1, "", "clear"], [63, 2, 1, "", "copy"], [63, 2, 1, "", "explainParam"], [63, 2, 1, "", "explainParams"], [63, 2, 1, "", "extractParamMap"], [63, 2, 1, "", "getCaseSensitive"], [63, 2, 1, "", "getDimension"], [63, 2, 1, "", "getIncludeStorage"], [63, 2, 1, "", "getInputCols"], [63, 2, 1, "", "getLazyAnnotator"], [63, 2, 1, "", "getOrDefault"], [63, 2, 1, "", "getOutputCol"], [63, 2, 1, "", "getParam"], [63, 2, 1, "", "getParamValue"], [63, 2, 1, "", "getStorageRef"], [63, 2, 1, "", "hasDefault"], [63, 2, 1, "", "hasParam"], [63, 2, 1, "", "isDefined"], [63, 2, 1, "", "isSet"], [63, 2, 1, "", "load"], [63, 4, 1, "", "params"], [63, 2, 1, "", "read"], [63, 2, 1, "", "save"], [63, 2, 1, "", "saveStorage"], [63, 2, 1, "", "set"], [63, 2, 1, "", "setAuxLabelCol"], [63, 2, 1, "", "setCaseSensitive"], [63, 2, 1, "", "setConfidenceFunction"], [63, 2, 1, "", "setDimension"], [63, 2, 1, "", "setDistanceFunction"], [63, 2, 1, "", "setIncludeStorage"], [63, 2, 1, "", "setInputCols"], [63, 2, 1, "", "setLazyAnnotator"], [63, 2, 1, "", "setMissAsEmpty"], [63, 2, 1, "", "setNeighbours"], [63, 2, 1, "", "setOutputCol"], [63, 2, 1, "", "setParamValue"], [63, 2, 1, "", "setSearchTree"], [63, 2, 1, "", "setStorageRef"], [63, 2, 1, "", "setThreshold"], [63, 2, 1, "", "setUseAuxLabel"], [63, 2, 1, "", "transform"], [63, 5, 1, "", "uid"], [63, 2, 1, "", "write"]], "sparknlp_jsl.annotator.SentenceResolverParams": [[64, 2, 1, "", "getCaseSensitive"], [64, 2, 1, "", "setCaseSensitive"], [64, 2, 1, "", "setConfidenceFunction"], [64, 2, 1, "", "setDistanceFunction"], [64, 2, 1, "", "setMissAsEmpty"], [64, 2, 1, "", "setNeighbours"], [64, 2, 1, "", "setThreshold"]], "sparknlp_jsl.annotator.TFGraphBuilder": [[65, 2, 1, "", "clear"], [65, 2, 1, "", "copy"], [65, 2, 1, "", "explainParam"], [65, 2, 1, "", "explainParams"], [65, 2, 1, "", "extractParamMap"], [65, 2, 1, "", "fit"], [65, 2, 1, "", "fitMultiple"], [65, 2, 1, "", "getBatchNorm"], [65, 2, 1, "", "getGraphFile"], [65, 2, 1, "", "getGraphFolder"], [65, 2, 1, "", "getHiddenAct"], [65, 2, 1, "", "getHiddenActL2"], [65, 2, 1, "", "getHiddenLayers"], [65, 2, 1, "", "getHiddenUnitsNumber"], [65, 2, 1, "", "getHiddenWeightsL2"], [65, 2, 1, "", "getInputCols"], [65, 2, 1, "", "getLabelColumn"], [65, 2, 1, "", "getMaxSequenceLength"], [65, 2, 1, "", "getModelName"], [65, 2, 1, "", "getOrDefault"], [65, 2, 1, "", "getParam"], [65, 2, 1, "", "hasDefault"], [65, 2, 1, "", "hasParam"], [65, 2, 1, "", "isDefined"], [65, 2, 1, "", "isSet"], [65, 2, 1, "", "load"], [65, 4, 1, "", "params"], [65, 2, 1, "", "read"], [65, 2, 1, "", "save"], [65, 2, 1, "", "set"], [65, 2, 1, "", "setBatchNorm"], [65, 2, 1, "", "setGraphFile"], [65, 2, 1, "", "setGraphFolder"], [65, 2, 1, "", "setHiddenAct"], [65, 2, 1, "", "setHiddenActL2"], [65, 2, 1, "", "setHiddenLayers"], [65, 2, 1, "", "setHiddenUnitsNumber"], [65, 2, 1, "", "setHiddenWeightsL2"], [65, 2, 1, "", "setInputCols"], [65, 2, 1, "", "setLabelColumn"], [65, 2, 1, "", "setMaxSequenceLength"], [65, 2, 1, "", "setModelName"], [65, 5, 1, "", "uid"], [65, 2, 1, "", "write"]], "sparknlp_jsl.annotator.ZeroShotRelationExtractionModel": [[66, 2, 1, "", "clear"], [66, 2, 1, "", "copy"], [66, 2, 1, "", "explainParam"], [66, 2, 1, "", "explainParams"], [66, 2, 1, "", "extractParamMap"], [66, 2, 1, "", "getBatchSize"], [66, 2, 1, "", "getCaseSensitive"], [66, 2, 1, "", "getClasses"], [66, 2, 1, "", "getInputCols"], [66, 2, 1, "", "getLazyAnnotator"], [66, 2, 1, "", "getOrDefault"], [66, 2, 1, "", "getOutputCol"], [66, 2, 1, "", "getParam"], [66, 2, 1, "", "getParamValue"], [66, 2, 1, "", "hasDefault"], [66, 2, 1, "", "hasParam"], [66, 2, 1, "", "isDefined"], [66, 2, 1, "", "isSet"], [66, 2, 1, "", "load"], [66, 2, 1, "", "loadSavedModel"], [66, 2, 1, "", "loadSavedModelOpenSource"], [66, 4, 1, "", "params"], [66, 2, 1, "", "pretrained"], [66, 2, 1, "", "read"], [66, 2, 1, "", "save"], [66, 2, 1, "", "set"], [66, 2, 1, "", "setBatchSize"], [66, 2, 1, "", "setCaseSensitive"], [66, 2, 1, "", "setCoalesceSentences"], [66, 2, 1, "", "setConfigProtoBytes"], [66, 2, 1, "", "setInputCols"], [66, 2, 1, "", "setLazyAnnotator"], [66, 2, 1, "", "setMaxSentenceLength"], [66, 2, 1, "", "setOutputCol"], [66, 2, 1, "", "setParamValue"], [66, 2, 1, "", "setRelationalCategories"], [66, 2, 1, "", "transform"], [66, 5, 1, "", "uid"], [66, 2, 1, "", "write"]], "sparknlp_jsl.base": [[68, 1, 1, "", "FeaturesAssembler"]], "sparknlp_jsl.base.FeaturesAssembler": [[68, 2, 1, "", "clear"], [68, 2, 1, "", "copy"], [68, 2, 1, "", "explainParam"], [68, 2, 1, "", "explainParams"], [68, 2, 1, "", "extractParamMap"], [68, 2, 1, "", "getOrDefault"], [68, 2, 1, "", "getParam"], [68, 2, 1, "", "getParamValue"], [68, 2, 1, "", "hasDefault"], [68, 2, 1, "", "hasParam"], [68, 2, 1, "", "isDefined"], [68, 2, 1, "", "isSet"], [68, 2, 1, "", "load"], [68, 4, 1, "", "params"], [68, 2, 1, "", "read"], [68, 2, 1, "", "save"], [68, 2, 1, "", "set"], [68, 2, 1, "", "setInputCols"], [68, 2, 1, "", "setOutputCol"], [68, 2, 1, "", "setParamValue"], [68, 2, 1, "", "transform"], [68, 5, 1, "", "uid"], [68, 2, 1, "", "write"]], "sparknlp_jsl.training": [[70, 1, 1, "", "AnnotationToolJsonReader"], [71, 1, 1, "", "CantemistReader"], [72, 1, 1, "", "CodiEspReader"]], "sparknlp_jsl.training.AnnotationToolJsonReader": [[70, 2, 1, "", "new_java_array"]], "sparknlp_jsl.training.CantemistReader": [[71, 2, 1, "", "new_java_array"]], "sparknlp_jsl.training.CodiEspReader": [[72, 2, 1, "", "new_java_array"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"get": 0, "start": 0, "requir": 0, "instal": 0, "spark": [0, 1], "nlp": [0, 1], "session": 0, "from": 0, "python": 0, "document": 1, "content": 1, "sparknlp_jsl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "_tf_graph_build": [2, 3, 4, 5, 6, 7, 8, 9, 10], "graph_build": [2, 3, 4, 5, 6, 7, 8, 9, 10], "assertiontfgraphbuild": 3, "genericclassifiertfgraphbuild": 4, "nertfgraphbuild": 5, "relationextractiontfgraphbuild": 6, "tfgraphbuild": [7, 65], "tfgraphbuilderfactori": 8, "tensorflowaddonsneed": 9, "wrongtfvers": 10, "annot": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "annotationmerg": 12, "assertiondlapproach": 13, "assertiondlmodel": 14, "assertionfilter": 15, "assertionlogregapproach": 16, "assertionlogregmodel": 17, "averageembed": 18, "bertsentencechunkembed": 19, "chunk2token": 20, "chunkconvert": 21, "chunkfilter": 22, "chunkfiltererapproach": 23, "chunkkeyphraseextract": 24, "chunkmapperapproach": 25, "chunkmapperfilterermodel": 26, "chunkmappermodel": 27, "chunkmergeapproach": 28, "chunkmergemodel": 29, "chunksentencesplitt": 30, "commonresolverparam": 31, "contextualparserapproach": 32, "contextualparsermodel": 33, "datenorm": 34, "deidentif": 35, "deidentificationmodel": 36, "documentlogregclassifierapproach": 37, "documentlogregclassifiermodel": 38, "drugnorm": 39, "entitychunkembed": 40, "genericclassifierapproach": 41, "genericclassifiermodel": 42, "iobtagg": 43, "medicalbertforsequenceclassif": 44, "medicalbertfortokenclassifi": 45, "medicaldistilbertforsequenceclassif": 46, "medicalgraphbuildermodel": 47, "medicalnerapproach": 48, "medicalnermodel": 49, "nerchunk": 50, "nerconverterintern": 51, "nerdisambigu": 52, "nerdisambiguatormodel": 53, "posologyremodel": 54, "renerchunksfilt": 55, "reidentif": 56, "relationextractionapproach": 57, "relationextractiondlmodel": 58, "relationextractionmodel": 59, "resolvermerg": 60, "router": 61, "sentenceentityresolverapproach": 62, "sentenceentityresolvermodel": 63, "sentenceresolverparam": 64, "zeroshotrelationextractionmodel": 66, "base": [67, 68], "featuresassembl": 68, "train": [69, 70, 71, 72], "annotationtooljsonread": 70, "cantemistread": 71, "codiespread": 72, "api": 73, "refer": 73, "modul": 73}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})