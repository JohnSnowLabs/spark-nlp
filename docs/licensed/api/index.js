Index.PACKAGES = {"com.johnsnowlabs.nlp.training" : [{"name" : "com.johnsnowlabs.nlp.training.AnnotationDefinition", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.training.AnnotationDefinition#<init>", "error" : "unsupported entity"}, {"label" : "to_id", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.AnnotationDefinition.to_id", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#to_id:Option[String]", "kind" : "val"}, {"label" : "from_id", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.AnnotationDefinition.from_id", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#from_id:Option[String]", "kind" : "val"}, {"label" : "direction", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.AnnotationDefinition.direction", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#direction:Option[String]", "kind" : "val"}, {"label" : "value", "tail" : ": Option[AnnotationValue]", "member" : "com.johnsnowlabs.nlp.training.AnnotationDefinition.value", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#value:Option[com.johnsnowlabs.nlp.training.AnnotationValue]", "kind" : "val"}, {"label" : "type", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.AnnotationDefinition.type", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#type:String", "kind" : "val"}, {"label" : "to_name", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.AnnotationDefinition.to_name", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#to_name:Option[String]", "kind" : "val"}, {"label" : "source", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.AnnotationDefinition.source", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#source:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.AnnotationDefinition.id", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#id:Option[String]", "kind" : "val"}, {"label" : "from_name", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.AnnotationDefinition.from_name", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#from_name:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/training\/AnnotationDefinition.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html", "members_class" : [{"label" : "generateAssertionTrainSet", "tail" : "(df: DataFrame, sentenceCol: String, assertionCol: String): DataFrame", "member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader.generateAssertionTrainSet", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#generateAssertionTrainSet(df:org.apache.spark.sql.DataFrame,sentenceCol:String,assertionCol:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readDataset", "tail" : "(spark: SparkSession, path: String): DataFrame", "member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader.readDataset", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#readDataset(spark:org.apache.spark.sql.SparkSession,path:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getEntityDefinition", "tail" : "(jsonContent: String): Option[Seq[TaskDefinition]]", "member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader.getEntityDefinition", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#getEntityDefinition(jsonContent:String):Option[Seq[com.johnsnowlabs.nlp.training.TaskDefinition]]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader#<init>", "error" : "unsupported entity"}, {"label" : "mergeOverlapping", "tail" : ": Boolean", "member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader.mergeOverlapping", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#mergeOverlapping:Boolean", "kind" : "val"}, {"label" : "alignCharsTol", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader.alignCharsTol", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#alignCharsTol:Int", "kind" : "val"}, {"label" : "minCharsTol", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader.minCharsTol", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#minCharsTol:Int", "kind" : "val"}, {"label" : "scheme", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader.scheme", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#scheme:String", "kind" : "val"}, {"label" : "excludedLabels", "tail" : ": List[String]", "member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader.excludedLabels", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#excludedLabels:java.util.List[String]", "kind" : "val"}, {"label" : "assertionLabels", "tail" : ": List[String]", "member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader.assertionLabels", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#assertionLabels:java.util.List[String]", "kind" : "val"}, {"label" : "pipelineModel", "tail" : ": PipelineModel", "member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader.pipelineModel", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#pipelineModel:org.apache.spark.ml.PipelineModel", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "buildPipeline", "tail" : "(cleanupMode: String, splitChars: Array[String], contextChars: Array[String], SDDLPath: String): PipelineModel", "member" : "com.johnsnowlabs.nlp.training.AnnotationToolJsonReader.buildPipeline", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#buildPipeline(cleanupMode:String,splitChars:Array[String],contextChars:Array[String],SDDLPath:String):org.apache.spark.ml.PipelineModel", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/training\/AnnotationToolJsonReader.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.training.AnnotationValue", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.training.AnnotationValue#<init>", "error" : "unsupported entity"}, {"label" : "choices", "tail" : ": Option[List[String]]", "member" : "com.johnsnowlabs.nlp.training.AnnotationValue.choices", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#choices:Option[List[String]]", "kind" : "val"}, {"label" : "labels", "tail" : ": Option[List[String]]", "member" : "com.johnsnowlabs.nlp.training.AnnotationValue.labels", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#labels:Option[List[String]]", "kind" : "val"}, {"label" : "text", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.AnnotationValue.text", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#text:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": Option[Int]", "member" : "com.johnsnowlabs.nlp.training.AnnotationValue.end", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#end:Option[Int]", "kind" : "val"}, {"label" : "start", "tail" : ": Option[Int]", "member" : "com.johnsnowlabs.nlp.training.AnnotationValue.start", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#start:Option[Int]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValue.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.training.AnnotationValueChoices", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.training.AnnotationValueChoices#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.training.AnnotationValueChoices#<init>", "error" : "unsupported entity"}, {"label" : "choices", "tail" : ": List[String]", "member" : "com.johnsnowlabs.nlp.training.AnnotationValueChoices.choices", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#choices:List[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueChoices.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.training.AnnotationValueLabel", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.training.AnnotationValueLabel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.training.AnnotationValueLabel#<init>", "error" : "unsupported entity"}, {"label" : "labels", "tail" : ": List[String]", "member" : "com.johnsnowlabs.nlp.training.AnnotationValueLabel.labels", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#labels:List[String]", "kind" : "val"}, {"label" : "text", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.AnnotationValueLabel.text", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#text:String", "kind" : "val"}, {"label" : "end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.training.AnnotationValueLabel.end", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#end:Int", "kind" : "val"}, {"label" : "start", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.training.AnnotationValueLabel.start", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#start:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/training\/AnnotationValueLabel.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.training.CantemistReader", "shortDescription" : "", "members_class" : [{"label" : "readDatasetTaskNer", "tail" : "(spark: SparkSession, textFolder: String): DataFrame", "member" : "com.johnsnowlabs.nlp.training.CantemistReader.readDatasetTaskNer", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#readDatasetTaskNer(spark:org.apache.spark.sql.SparkSession,textFolder:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.training.CantemistReader#<init>", "error" : "unsupported entity"}, {"label" : "scheme", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.CantemistReader.scheme", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#scheme:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/training\/CantemistReader.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.training.CodiEspReader", "shortDescription" : "", "members_class" : [{"label" : "readDatasetTaskX", "tail" : "(spark: SparkSession, path: String, textFolder: String, sep: String): DataFrame", "member" : "com.johnsnowlabs.nlp.training.CodiEspReader.readDatasetTaskX", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#readDatasetTaskX(spark:org.apache.spark.sql.SparkSession,path:String,textFolder:String,sep:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.training.CodiEspReader#<init>", "error" : "unsupported entity"}, {"label" : "scheme", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.CodiEspReader.scheme", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#scheme:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/training\/CodiEspReader.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.training.CompletionDefinition", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.training.CompletionDefinition#<init>", "error" : "unsupported entity"}, {"label" : "lead_time", "tail" : ": Option[Double]", "member" : "com.johnsnowlabs.nlp.training.CompletionDefinition.lead_time", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#lead_time:Option[Double]", "kind" : "val"}, {"label" : "created_ago", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.CompletionDefinition.created_ago", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#created_ago:Option[String]", "kind" : "val"}, {"label" : "result", "tail" : ": Seq[AnnotationDefinition]", "member" : "com.johnsnowlabs.nlp.training.CompletionDefinition.result", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#result:Seq[com.johnsnowlabs.nlp.training.AnnotationDefinition]", "kind" : "val"}, {"label" : "created_username", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.CompletionDefinition.created_username", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#created_username:String", "kind" : "val"}, {"label" : "id", "tail" : ": Long", "member" : "com.johnsnowlabs.nlp.training.CompletionDefinition.id", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#id:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/training\/CompletionDefinition.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.training.NerAnnotationDefinition", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.training.NerAnnotationDefinition#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.training.NerAnnotationDefinition#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": AnnotationValue", "member" : "com.johnsnowlabs.nlp.training.NerAnnotationDefinition.value", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#value:com.johnsnowlabs.nlp.training.AnnotationValue", "kind" : "val"}, {"label" : "type", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.NerAnnotationDefinition.type", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#type:String", "kind" : "val"}, {"label" : "to_name", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.NerAnnotationDefinition.to_name", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#to_name:String", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.NerAnnotationDefinition.id", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#id:String", "kind" : "val"}, {"label" : "from_name", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.NerAnnotationDefinition.from_name", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#from_name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/training\/NerAnnotationDefinition.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.training.RelAnnotationDefinition", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.training.RelAnnotationDefinition#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.training.RelAnnotationDefinition#<init>", "error" : "unsupported entity"}, {"label" : "type", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.RelAnnotationDefinition.type", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#type:String", "kind" : "val"}, {"label" : "direction", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.RelAnnotationDefinition.direction", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#direction:String", "kind" : "val"}, {"label" : "to_id", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.RelAnnotationDefinition.to_id", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#to_id:String", "kind" : "val"}, {"label" : "from_id", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.RelAnnotationDefinition.from_id", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#from_id:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/training\/RelAnnotationDefinition.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.training.TaskDataDefinition", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.training.TaskDataDefinition#<init>", "error" : "unsupported entity"}, {"label" : "title", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.TaskDataDefinition.title", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#title:Option[String]", "kind" : "val"}, {"label" : "text", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.training.TaskDataDefinition.text", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#text:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/training\/TaskDataDefinition.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.training.TaskDefinition", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.training.TaskDefinition#<init>", "error" : "unsupported entity"}, {"label" : "title", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.TaskDefinition.title", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#title:Option[String]", "kind" : "val"}, {"label" : "created_by", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.TaskDefinition.created_by", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#created_by:Option[String]", "kind" : "val"}, {"label" : "created_at", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.training.TaskDefinition.created_at", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#created_at:Option[String]", "kind" : "val"}, {"label" : "completions", "tail" : ": Seq[CompletionDefinition]", "member" : "com.johnsnowlabs.nlp.training.TaskDefinition.completions", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#completions:Seq[com.johnsnowlabs.nlp.training.CompletionDefinition]", "kind" : "val"}, {"label" : "data", "tail" : ": TaskDataDefinition", "member" : "com.johnsnowlabs.nlp.training.TaskDefinition.data", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#data:com.johnsnowlabs.nlp.training.TaskDataDefinition", "kind" : "val"}, {"label" : "id", "tail" : ": Long", "member" : "com.johnsnowlabs.nlp.training.TaskDefinition.id", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#id:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/training\/TaskDefinition.html", "kind" : "case class"}], "com.johnsnowlabs.ml.tensorflow.text2sql" : [{"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.ActionInfo", "shortDescription" : "", "members_class" : [{"label" : "srcTokenPosition", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.ActionInfo.srcTokenPosition", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#srcTokenPosition:Int", "kind" : "var"}, {"label" : "copyFromSrc", "tail" : ": Boolean", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.ActionInfo.copyFromSrc", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#copyFromSrc:Boolean", "kind" : "var"}, {"label" : "action", "tail" : ": Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.ActionInfo.action", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#action:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "var"}, {"label" : "frontierField", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.ActionInfo.frontierField", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#frontierField:Option[String]", "kind" : "var"}, {"label" : "frontierProd", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.ActionInfo.frontierProd", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#frontierProd:Option[String]", "kind" : "var"}, {"label" : "parent_t", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.ActionInfo.parent_t", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#parent_t:Int", "kind" : "var"}, {"label" : "score", "tail" : ": Float", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.ActionInfo.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#score:Float", "kind" : "var"}, {"label" : "t", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.ActionInfo.t", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#t:Int", "kind" : "var"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.ActionInfo#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/ActionInfo.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam", "shortDescription" : "", "members_class" : [{"label" : "isValid", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.isValid", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#isValid():Boolean", "kind" : "def"}, {"label" : "checkSelValid", "tail" : "(a: ListBuffer[Action]): Boolean", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.checkSelValid", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#checkSelValid(a:scala.collection.mutable.ListBuffer[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]):Boolean", "kind" : "def"}, {"label" : "completed", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.completed", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#completed():Boolean", "kind" : "def"}, {"label" : "inferN", "tail" : "(): List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.inferN", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#inferN():List[String]", "kind" : "def"}, {"label" : "cloneAndApplyActionInfo", "tail" : "(actionInfo: ActionInfo): Beam", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.cloneAndApplyActionInfo", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#cloneAndApplyActionInfo(actionInfo:com.johnsnowlabs.ml.tensorflow.text2sql.ActionInfo):com.johnsnowlabs.ml.tensorflow.text2sql.Beam", "kind" : "def"}, {"label" : "cloneAndApplyAction", "tail" : "(action: Action): Beam", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.cloneAndApplyAction", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#cloneAndApplyAction(action:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):com.johnsnowlabs.ml.tensorflow.text2sql.Beam", "kind" : "def"}, {"label" : "applyAction", "tail" : "(action: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.applyAction", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#applyAction(action:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "getAvailableClass", "tail" : "(): Option[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.getAvailableClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#getAvailableClass():Option[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "copy", "tail" : "(is_sketch: Boolean): Beam", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.copy", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#copy(is_sketch:Boolean):com.johnsnowlabs.ml.tensorflow.text2sql.Beam", "kind" : "def"}, {"label" : "mapToActionType", "tail" : "(actionType: String): Class[_ <: Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.mapToActionType", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#mapToActionType(actionType:String):Class[_<:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "actionClasses", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.actionClasses", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#actionClasses:List[String]", "kind" : "var"}, {"label" : "sketchStep", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.sketchStep", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#sketchStep:Int", "kind" : "var"}, {"label" : "t", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.t", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#t:Int", "kind" : "var"}, {"label" : "score", "tail" : ": Double", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#score:Double", "kind" : "var"}, {"label" : "actionInfo", "tail" : ": ListBuffer[ActionInfo]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.actionInfo", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#actionInfo:scala.collection.mutable.ListBuffer[com.johnsnowlabs.ml.tensorflow.text2sql.ActionInfo]", "kind" : "var"}, {"label" : "actions", "tail" : ": ListBuffer[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam.actions", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#actions:scala.collection.mutable.ListBuffer[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "var"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Beam#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Beam.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition#<init>", "error" : "unsupported entity"}, {"label" : "table_names_original", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition.table_names_original", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#table_names_original:List[String]", "kind" : "val"}, {"label" : "table_names", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition.table_names", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#table_names:List[String]", "kind" : "val"}, {"label" : "primary_keys", "tail" : ": List[Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition.primary_keys", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#primary_keys:List[Int]", "kind" : "val"}, {"label" : "foreign_keys", "tail" : ": List[(Int, Int)]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition.foreign_keys", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#foreign_keys:List[(Int,Int)]", "kind" : "val"}, {"label" : "db_id", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition.db_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#db_id:String", "kind" : "val"}, {"label" : "column_types", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition.column_types", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#column_types:List[String]", "kind" : "val"}, {"label" : "column_names_original", "tail" : ": List[(Int, String)]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition.column_names_original", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#column_names_original:List[(Int,String)]", "kind" : "val"}, {"label" : "column_names", "tail" : ": List[(Int, String)]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition.column_names", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#column_names:List[(Int,String)]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/DatabaseDefinition.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.HypMeta", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.HypMeta#<init>", "error" : "unsupported entity"}, {"label" : "prevHypId", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.HypMeta.prevHypId", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#prevHypId:Int", "kind" : "val"}, {"label" : "newHypScore", "tail" : ": Double", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.HypMeta.newHypScore", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#newHypScore:Double", "kind" : "val"}, {"label" : "score", "tail" : ": Float", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.HypMeta.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#score:Float", "kind" : "val"}, {"label" : "colId", "tail" : ": Option[Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.HypMeta.colId", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#colId:Option[Int]", "kind" : "val"}, {"label" : "tId", "tail" : ": Option[Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.HypMeta.tId", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#tId:Option[Int]", "kind" : "val"}, {"label" : "prodId", "tail" : ": Option[Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.HypMeta.prodId", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#prodId:Option[Int]", "kind" : "val"}, {"label" : "actionType", "tail" : ": Option[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.HypMeta.actionType", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#actionType:Option[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/HypMeta.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB#<init>", "error" : "unsupported entity"}, {"label" : "dbDefinition", "tail" : ": DatabaseDefinition", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB.dbDefinition", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#dbDefinition:com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition", "kind" : "var"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB.graph", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#graph:com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph", "kind" : "var"}, {"label" : "col_table", "tail" : ": List[Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB.col_table", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#col_table:List[Int]", "kind" : "var"}, {"label" : "schema_content", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB.schema_content", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#schema_content:List[String]", "kind" : "var"}, {"label" : "col_set", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB.col_set", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#col_set:List[String]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/PreprocessedDB.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.SchemaJSON", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.SchemaJSON#<init>", "error" : "unsupported entity"}, {"label" : "schemaEmbedding", "tail" : ": Array[Array[Array[Float]]]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.SchemaJSON.schemaEmbedding", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#schemaEmbedding:Array[Array[Array[Float]]]", "kind" : "val"}, {"label" : "tableEmbedding", "tail" : ": Array[Array[Array[Float]]]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.SchemaJSON.tableEmbedding", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#tableEmbedding:Array[Array[Array[Float]]]", "kind" : "val"}, {"label" : "embColumn", "tail" : ": Seq[Float]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.SchemaJSON.embColumn", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#embColumn:Seq[Float]", "kind" : "val"}, {"label" : "embTable", "tail" : ": Seq[Float]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.SchemaJSON.embTable", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#embTable:Seq[Float]", "kind" : "val"}, {"label" : "columnNames", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.SchemaJSON.columnNames", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#columnNames:Seq[String]", "kind" : "val"}, {"label" : "tableNames", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.SchemaJSON.tableNames", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#tableNames:Seq[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/SchemaJSON.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL", "shortDescription" : "", "members_class" : [{"label" : "getKeys", "tail" : "(tables: (String, String), graph: Graph): Option[(String, String)]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.getKeys", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#getKeys(tables:(String,String),graph:com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph):Option[(String,String)]", "kind" : "def"}, {"label" : "inferFromClause", "tail" : "(tableNames: LinkedHashMap[String, String], schema: PreprocessedDB, columns: ListBuffer[(String, String, String)]): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.inferFromClause", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#inferFromClause(tableNames:scala.collection.mutable.LinkedHashMap[String,String],schema:com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB,columns:scala.collection.mutable.ListBuffer[(String,String,String)]):String", "kind" : "def"}, {"label" : "toStr", "tail" : "(sqlJSON: LinkedHashMap[String, LinkedHashMap[String, ListBuffer[Any]]], nT: Int, schema: PreprocessedDB, preTableNames: Option[LinkedHashMap[String, String]]): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.toStr", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#toStr(sqlJSON:scala.collection.mutable.LinkedHashMap[String,scala.collection.mutable.LinkedHashMap[String,scala.collection.mutable.ListBuffer[Any]]],nT:Int,schema:com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB,preTableNames:Option[scala.collection.mutable.LinkedHashMap[String,String]]):String", "kind" : "def"}, {"label" : "colToStr", "tail" : "(agg: String, col: String, tab: String, tableNames: LinkedHashMap[String, String], N: Int): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.colToStr", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#colToStr(agg:String,col:String,tab:String,tableNames:scala.collection.mutable.LinkedHashMap[String,String],N:Int):String", "kind" : "def"}, {"label" : "transform", "tail" : "(query: LinkedHashMap[String, String], schema: PreprocessedDB, origin: Option[String]): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.transform", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#transform(query:scala.collection.mutable.LinkedHashMap[String,String],schema:com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB,origin:Option[String]):String", "kind" : "def"}, {"label" : "_transform", "tail" : "(_components: ListBuffer[String], transformedSQL: LinkedHashMap[String, ListBuffer[Any]], colSet: List[String], tableNames: List[String], schema: PreprocessedDB): LinkedHashMap[String, ListBuffer[Any]]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL._transform", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#_transform(_components:scala.collection.mutable.ListBuffer[String],transformedSQL:scala.collection.mutable.LinkedHashMap[String,scala.collection.mutable.ListBuffer[Any]],colSet:List[String],tableNames:List[String],schema:com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB):scala.collection.mutable.LinkedHashMap[String,scala.collection.mutable.ListBuffer[Any]]", "kind" : "def"}, {"label" : "replaceColWithOriginalCol", "tail" : "(query: String, col: String, currentTable: PreprocessedDB): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.replaceColWithOriginalCol", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#replaceColWithOriginalCol(query:String,col:String,currentTable:com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB):String", "kind" : "def"}, {"label" : "isEnd", "tail" : "(components: ListBuffer[String], transformedSQL: LinkedHashMap[String, ListBuffer[Any]], rootProcessed: Boolean): Boolean", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.isEnd", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#isEnd(components:scala.collection.mutable.ListBuffer[String],transformedSQL:scala.collection.mutable.LinkedHashMap[String,scala.collection.mutable.ListBuffer[Any]],rootProcessed:Boolean):Boolean", "kind" : "def"}, {"label" : "getAction", "tail" : "(string: String): Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.getAction", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#getAction(string:String):com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "def"}, {"label" : "splitLogicalForm", "tail" : "(lf: String): ListBuffer[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.splitLogicalForm", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#splitLogicalForm(lf:String):scala.collection.mutable.ListBuffer[String]", "kind" : "def"}, {"label" : "alterColumn0", "tail" : "(data: Map[String, String], schema: PreprocessedDB): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.alterColumn0", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#alterColumn0(data:Map[String,String],schema:com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB):Unit", "kind" : "def"}, {"label" : "multiEqual", "tail" : "(question: List[String], qInd: Int, names: String, n: Int): Option[Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.multiEqual", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#multiEqual(question:List[String],qInd:Int,names:String,n:Int):Option[Int]", "kind" : "def"}, {"label" : "alterNotIn", "tail" : "(data: LinkedHashMap[String, String], schema: PreprocessedDB): LinkedHashMap[String, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.alterNotIn", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#alterNotIn(data:scala.collection.mutable.LinkedHashMap[String,String],schema:com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB):scala.collection.mutable.LinkedHashMap[String,String]", "kind" : "def"}, {"label" : "findTable", "tail" : "(currentTable: Int, originalTableNames: List[String], questionArgs: List[String]): Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.findTable", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#findTable(currentTable:Int,originalTableNames:List[String],questionArgs:List[String]):Int", "kind" : "def"}, {"label" : "preprocessSchema", "tail" : "(schema: DatabaseDefinition): PreprocessedDB", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.preprocessSchema", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#preprocessSchema(schema:com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition):com.johnsnowlabs.ml.tensorflow.text2sql.PreprocessedDB", "kind" : "def"}, {"label" : "buildGraph", "tail" : "(schema: DatabaseDefinition): Graph", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.buildGraph", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#buildGraph(schema:com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition):com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph", "kind" : "def"}, {"label" : "getTableEmbeddings", "tail" : "(jsonContent: String): Option[SchemaJSON]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.getTableEmbeddings", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#getTableEmbeddings(jsonContent:String):Option[com.johnsnowlabs.ml.tensorflow.text2sql.SchemaJSON]", "kind" : "def"}, {"label" : "getDatabaseDefinition", "tail" : "(jsonContent: String): Option[DatabaseDefinition]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL.getDatabaseDefinition", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#getDatabaseDefinition(jsonContent:String):Option[com.johnsnowlabs.ml.tensorflow.text2sql.DatabaseDefinition]", "kind" : "def"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.Sem2SQL#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/Sem2SQL.html", "kind" : "class"}], "com.johnsnowlabs.nlp.annotators.re" : [{"name" : "com.johnsnowlabs.nlp.annotators.re.BertREConfig", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.re.BertREConfig#<init>", "error" : "unsupported entity"}, {"label" : "entity2EndTag", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.BertREConfig.entity2EndTag", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#entity2EndTag:String", "kind" : "val"}, {"label" : "entity2StartTag", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.BertREConfig.entity2StartTag", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#entity2StartTag:String", "kind" : "val"}, {"label" : "entity1EndTag", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.BertREConfig.entity1EndTag", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#entity1EndTag:String", "kind" : "val"}, {"label" : "entity1StartTag", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.BertREConfig.entity1StartTag", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#entity1StartTag:String", "kind" : "val"}, {"label" : "entity2EndTokenId", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.BertREConfig.entity2EndTokenId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#entity2EndTokenId:Int", "kind" : "var"}, {"label" : "entity2StartTokenId", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.BertREConfig.entity2StartTokenId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#entity2StartTokenId:Int", "kind" : "var"}, {"label" : "entity1EndTokenId", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.BertREConfig.entity1EndTokenId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#entity1EndTokenId:Int", "kind" : "var"}, {"label" : "entity1StartTokenId", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.BertREConfig.entity1StartTokenId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#entity1StartTokenId:Int", "kind" : "var"}, {"label" : "sentenceEndTokenId", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.BertREConfig.sentenceEndTokenId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#sentenceEndTokenId:Int", "kind" : "var"}, {"label" : "sentenceStartTokenId", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.BertREConfig.sentenceStartTokenId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#sentenceStartTokenId:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/re\/BertREConfig.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.re.DLRelationInstance", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.re.DLRelationInstance#<init>", "error" : "unsupported entity"}, {"label" : "context", "tail" : ": Sentence", "member" : "com.johnsnowlabs.nlp.annotators.re.DLRelationInstance.context", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#context:com.johnsnowlabs.nlp.annotators.common.Sentence", "kind" : "val"}, {"label" : "chunk2", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.DLRelationInstance.chunk2", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#chunk2:String", "kind" : "val"}, {"label" : "chunk1", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.DLRelationInstance.chunk1", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#chunk1:String", "kind" : "val"}, {"label" : "entity2_end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.DLRelationInstance.entity2_end", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#entity2_end:Int", "kind" : "val"}, {"label" : "entity2_begin", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.DLRelationInstance.entity2_begin", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#entity2_begin:Int", "kind" : "val"}, {"label" : "entity1_end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.DLRelationInstance.entity1_end", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#entity1_end:Int", "kind" : "val"}, {"label" : "entity1_begin", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.DLRelationInstance.entity1_begin", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#entity1_begin:Int", "kind" : "val"}, {"label" : "entity2", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.DLRelationInstance.entity2", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#entity2:String", "kind" : "val"}, {"label" : "entity1", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.DLRelationInstance.entity1", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#entity1:String", "kind" : "val"}, {"label" : "relationType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.DLRelationInstance.relationType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#relationType:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/re\/DLRelationInstance.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.re.PosologyREModel", "shortDescription" : "Instantiated RelationExtractionModel for extracting relationships between different recognized drug entitites.", "members_class" : [{"label" : "writeTensorflowModel", "tail" : "(path: String, spark: SparkSession, tensorflow: TensorflowWrapper, suffix: String, filename: String, configProtoBytes: Option[Array[Byte]]): Unit", "member" : "com.johnsnowlabs.nlp.annotators.re.PosologyREModel.writeTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#writeTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,suffix:String,filename:String,configProtoBytes:Option[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "model", "tail" : "(): TensorflowGenericClassifier", "member" : "com.johnsnowlabs.nlp.annotators.re.PosologyREModel.model", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#model:com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier", "kind" : "def"}, {"label" : "getCategoryName", "tail" : "(id: Int): String", "member" : "com.johnsnowlabs.nlp.annotators.re.PosologyREModel.getCategoryName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getCategoryName(id:Int):String", "kind" : "def"}, {"label" : "categorizeRel", "tail" : "(relation: RelationInstance): (Long, Float)", "member" : "com.johnsnowlabs.nlp.annotators.re.PosologyREModel.categorizeRel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#categorizeRel(relation:com.johnsnowlabs.nlp.annotators.re.RelationInstance):(Long,Float)", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.re.PosologyREModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.re.PosologyREModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.PosologyREModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#uid:String", "kind" : "val"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "loadModel", "tail" : "(sparkSession: SparkSession, tfModel: TensorflowWrapper, categories: Array[String], encoder: GenericClassifierDataEncoder, nerTags: Array[String]): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.loadModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#loadModel(sparkSession:org.apache.spark.sql.SparkSession,tfModel:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,categories:Array[String],encoder:com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder,nerTags:Array[String]):RelationExtractionModel.this.type", "kind" : "def"}, {"label" : "getMaxSyntacticDistance", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.getMaxSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getMaxSyntacticDistance:Float", "kind" : "def"}, {"label" : "setMaxSyntacticDistance", "tail" : "(maxSyntacticDistance: Int): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.setMaxSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setMaxSyntacticDistance(maxSyntacticDistance:Int):RelationExtractionModel.this.type", "kind" : "def"}, {"label" : "maxSyntacticDistance", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.maxSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#maxSyntacticDistance:org.apache.spark.ml.param.IntParam", "kind" : "var"}, {"label" : "outputAnnotatorType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#outputAnnotatorType:String", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#inputAnnotatorTypes:Array[RelationExtractionModel.this.AnnotatorType]", "kind" : "val"}, {"label" : "getPredictionThreshold", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.getPredictionThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getPredictionThreshold:Float", "kind" : "def"}, {"label" : "setPredictionThreshold", "tail" : "(predictionThreshold: Float): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.setPredictionThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setPredictionThreshold(predictionThreshold:Float):RelationExtractionModel.this.type", "kind" : "def"}, {"label" : "predictionThreshold", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.predictionThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#predictionThreshold:org.apache.spark.ml.param.FloatParam", "kind" : "var"}, {"label" : "getRelationPairs", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.getRelationPairs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getRelationPairs:Array[String]", "kind" : "def"}, {"label" : "setRelationPairs", "tail" : "(relationPairs: Array[String]): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.setRelationPairs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setRelationPairs(relationPairs:Array[String]):RelationExtractionModel.this.type", "kind" : "def"}, {"label" : "relationPairs", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.relationPairs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#relationPairs:org.apache.spark.ml.param.Param[String]", "kind" : "var"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "scaleFeatures", "tail" : "(features: Array[Array[Float]]): Array[Array[Float]]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.scaleFeatures", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#scaleFeatures(features:Array[Array[Float]]):Array[Array[Float]]", "kind" : "def"}, {"label" : "getEncoder", "tail" : "(): GenericClassifierDataEncoder", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.getEncoder", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getEncoder:com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder", "kind" : "def"}, {"label" : "setEncoder", "tail" : "(encoder: GenericClassifierDataEncoder): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.setEncoder", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setEncoder(encoder:com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder):GenericClassifierModel.this.type", "kind" : "def"}, {"label" : "setTensorflowModel", "tail" : "(spark: SparkSession, tf: TensorflowWrapper): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.setTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setTensorflowModel(spark:org.apache.spark.sql.SparkSession,tf:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper):GenericClassifierModel.this.type", "kind" : "def"}, {"label" : "getFeatureScaling", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.getFeatureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getFeatureScaling:String", "kind" : "def"}, {"label" : "setFeatureScaling", "tail" : "(featureScaling: String): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.setFeatureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setFeatureScaling(featureScaling:String):GenericClassifierModel.this.type", "kind" : "def"}, {"label" : "featureScaling", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.featureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#featureScaling:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getCategories", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.getCategories", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getCategories():Array[String]", "kind" : "def"}, {"label" : "setCategoryNames", "tail" : "(categoryNames: Array[String]): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.setCategoryNames", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setCategoryNames(categoryNames:Array[String]):GenericClassifierModel.this.type", "kind" : "def"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "writeTensorflowHub", "tail" : "(path: String, tfPath: String, spark: SparkSession, suffix: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#writeTensorflowHub(path:String,tfPath:String,spark:org.apache.spark.sql.SparkSession,suffix:String):Unit", "kind" : "def"}, {"label" : "writeTensorflowModelV2", "tail" : "(path: String, spark: SparkSession, tensorflow: TensorflowWrapper, suffix: String, filename: String, configProtoBytes: Option[Array[Byte]]): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowModelV2", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#writeTensorflowModelV2(path:String,spark:org.apache.spark.sql.SparkSession,tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,suffix:String,filename:String,configProtoBytes:Option[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "validateStorageRef", "tail" : "(dataset: Dataset[_], inputCols: Array[String], annotatorType: String): Unit", "member" : "com.johnsnowlabs.storage.HasStorageRef.validateStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#validateStorageRef(dataset:org.apache.spark.sql.Dataset[_],inputCols:Array[String],annotatorType:String):Unit", "kind" : "def"}, {"label" : "getStorageRef", "tail" : "(): String", "member" : "com.johnsnowlabs.storage.HasStorageRef.getStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getStorageRef:String", "kind" : "def"}, {"label" : "setStorageRef", "tail" : "(value: String): PosologyREModel.this.type", "member" : "com.johnsnowlabs.storage.HasStorageRef.setStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setStorageRef(value:String):HasStorageRef.this.type", "kind" : "def"}, {"label" : "createDatabaseConnection", "tail" : "(database: Name): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasStorageRef.createDatabaseConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#createDatabaseConnection(database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "storageRef", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.storage.HasStorageRef.storageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#storageRef:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): GenericClassifierModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): PosologyREModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[GenericClassifierModel]): GenericClassifierModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[GenericClassifierModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): PosologyREModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): PosologyREModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): PosologyREModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): PosologyREModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): PosologyREModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): PosologyREModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/re\/PosologyREModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.re.ReadablePretrainedRelationExtractionDLModel", "members_trait" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): RelationExtractionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadablePretrainedRelationExtractionDLModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): RelationExtractionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadablePretrainedRelationExtractionDLModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): RelationExtractionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadablePretrainedRelationExtractionDLModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): RelationExtractionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadablePretrainedRelationExtractionDLModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#pretrained():com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": Some[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadablePretrainedRelationExtractionDLModel.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#defaultModelName:Some[String]", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[RelationExtractionDLModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (RelationExtractionDLModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): RelationExtractionDLModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadablePretrainedRelationExtractionDLModel.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.re.ReadRelationExtractionDLModelTensorflowModel", "members_trait" : [{"label" : "loadSavedModel", "tail" : "(folder: String, spark: SparkSession): RelationExtractionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadRelationExtractionDLModelTensorflowModel.loadSavedModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#loadSavedModel(folder:String,spark:org.apache.spark.sql.SparkSession):com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel", "kind" : "def"}, {"label" : "readTensorflow", "tail" : "(instance: RelationExtractionDLModel, path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadRelationExtractionDLModelTensorflowModel.readTensorflow", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#readTensorflow(instance:com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel,path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "tfFile", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadRelationExtractionDLModelTensorflowModel.tfFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#tfFile:String", "kind" : "val"}, {"label" : "readTensorflowHub", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String]): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#readTensorflowHub(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String]):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowChkPoints", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowChkPoints", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#readTensorflowChkPoints(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowWithSPModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean, loadSP: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowWithSPModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#readTensorflowWithSPModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean,loadSP:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#readTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/re\/ReadRelationExtractionDLModelTensorflowModel.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.re.REDataEncoder", "shortDescription" : "", "members_class" : [{"label" : "encodeFeatures", "tail" : "(dataset: Dataset[_], fromLabelCol: String, fromBeginCol: String, fromEndCol: String, toLabelCol: String, toBeginCol: String, toEndCol: String, nerTags: Array[String]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.annotators.re.REDataEncoder.encodeFeatures", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#encodeFeatures(dataset:org.apache.spark.sql.Dataset[_],fromLabelCol:String,fromBeginCol:String,fromEndCol:String,toLabelCol:String,toBeginCol:String,toEndCol:String,nerTags:Array[String]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "parseFeatures", "tail" : ": UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.annotators.re.REDataEncoder.parseFeatures", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#parseFeatures:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "val"}, {"label" : "parseFeaturesFromAnnotations", "tail" : "(label1: String, label2: String, fromSentenceBegin: Int, fromSentenceEnd: Int, toSentenceBegin: Int, toSentenceEnd: Int, posTags: Seq[Annotation], embeddings: Seq[Annotation]): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.re.REDataEncoder.parseFeaturesFromAnnotations", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#parseFeaturesFromAnnotations(label1:String,label2:String,fromSentenceBegin:Int,fromSentenceEnd:Int,toSentenceBegin:Int,toSentenceEnd:Int,posTags:Seq[com.johnsnowlabs.nlp.Annotation],embeddings:Seq[com.johnsnowlabs.nlp.Annotation]):Array[Float]", "kind" : "def"}, {"label" : "setNerTags", "tail" : "(nerTags: Array[String]): Unit", "member" : "com.johnsnowlabs.nlp.annotators.re.REDataEncoder.setNerTags", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#setNerTags(nerTags:Array[String]):Unit", "kind" : "def"}, {"label" : "getNerTags", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.REDataEncoder.getNerTags", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#getNerTags:Array[String]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.re.REDataEncoder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REDataEncoder.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html", "members_object" : [{"label" : "encodeNESimilarity", "tail" : "(embedding1: Array[Float], embedding2: Array[Float]): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.encodeNESimilarity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#encodeNESimilarity(embedding1:Array[Float],embedding2:Array[Float]):Array[Float]", "kind" : "def"}, {"label" : "encodeNChars", "tail" : "(pos1: Int, pos2: Int): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.encodeNChars", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#encodeNChars(pos1:Int,pos2:Int):Array[Float]", "kind" : "def"}, {"label" : "encodeSyntacticDistance", "tail" : "(pos1: Int, pos2: Int, dependencies: Seq[Annotation]): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.encodeSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#encodeSyntacticDistance(pos1:Int,pos2:Int,dependencies:Seq[com.johnsnowlabs.nlp.Annotation]):Array[Float]", "kind" : "def"}, {"label" : "encodePosTags", "tail" : "(pos1: Int, pos2: Int, posTags: Seq[Annotation]): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.encodePosTags", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#encodePosTags(pos1:Int,pos2:Int,posTags:Seq[com.johnsnowlabs.nlp.Annotation]):Array[Float]", "kind" : "def"}, {"label" : "encodeEmbedding", "tail" : "(pos1: Int, pos2: Int, embeddings: Seq[Annotation], embeddingsDim: Int): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.encodeEmbedding", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#encodeEmbedding(pos1:Int,pos2:Int,embeddings:Seq[com.johnsnowlabs.nlp.Annotation],embeddingsDim:Int):Array[Float]", "kind" : "def"}, {"label" : "encodeNETags", "tail" : "(ne1: String, ne2: String, nerTags: Array[String]): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.encodeNETags", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#encodeNETags(ne1:String,ne2:String,nerTags:Array[String]):Array[Float]", "kind" : "def"}, {"label" : "encodeNPunctuations", "tail" : "(chunk: String): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.encodeNPunctuations", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#encodeNPunctuations(chunk:String):Array[Float]", "kind" : "def"}, {"label" : "encodeNWords", "tail" : "(pos1: Int, pos2: Int, annotations: Seq[Annotation]): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.encodeNWords", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#encodeNWords(pos1:Int,pos2:Int,annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Array[Float]", "kind" : "def"}, {"label" : "getBetweenAnnotations", "tail" : "(pos1: Int, pos2: Int, annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.getBetweenAnnotations", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#getBetweenAnnotations(pos1:Int,pos2:Int,annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "calcSyntacticDistance", "tail" : "(dep1: Annotation, dep2: Annotation, deps: Array[Annotation]): Option[(Int, Annotation)]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.calcSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#calcSyntacticDistance(dep1:com.johnsnowlabs.nlp.Annotation,dep2:com.johnsnowlabs.nlp.Annotation,deps:Array[com.johnsnowlabs.nlp.Annotation]):Option[(Int,com.johnsnowlabs.nlp.Annotation)]", "kind" : "def"}, {"label" : "findPath", "tail" : "(dep1: Annotation, dep2: Annotation, deps: Array[Annotation], path: Int): Option[Int]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.findPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#findPath(dep1:com.johnsnowlabs.nlp.Annotation,dep2:com.johnsnowlabs.nlp.Annotation,deps:Array[com.johnsnowlabs.nlp.Annotation],path:Int):Option[Int]", "kind" : "def"}, {"label" : "getPOSTagIndex", "tail" : "(posTag: String): Int", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.getPOSTagIndex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#getPOSTagIndex(posTag:String):Int", "kind" : "def"}, {"label" : "normalizeVector", "tail" : "(vector: Array[Float], encodeNone: Boolean): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.normalizeVector", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#normalizeVector(vector:Array[Float],encodeNone:Boolean):Array[Float]", "kind" : "def"}, {"label" : "embeddingsSimilarity", "tail" : "(embeddings1: Array[Float], embeddings2: Array[Float]): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.embeddingsSimilarity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#embeddingsSimilarity(embeddings1:Array[Float],embeddings2:Array[Float]):Array[Float]", "kind" : "def"}, {"label" : "coordDistance", "tail" : "(x: Array[Float], y: Array[Float]): Float", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.coordDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#coordDistance(x:Array[Float],y:Array[Float]):Float", "kind" : "def"}, {"label" : "cityBlockDistance", "tail" : "(x: Array[Float], y: Array[Float]): Float", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.cityBlockDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#cityBlockDistance(x:Array[Float],y:Array[Float]):Float", "kind" : "def"}, {"label" : "euclideanDistance", "tail" : "(x: Array[Float], y: Array[Float]): Float", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.euclideanDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#euclideanDistance(x:Array[Float],y:Array[Float]):Float", "kind" : "def"}, {"label" : "cosineSimilarity", "tail" : "(x: Array[Float], y: Array[Float]): Float", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.cosineSimilarity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#cosineSimilarity(x:Array[Float],y:Array[Float]):Float", "kind" : "def"}, {"label" : "dotProduct", "tail" : "(x: Array[Float], y: Array[Float]): Float", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.dotProduct", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#dotProduct(x:Array[Float],y:Array[Float]):Float", "kind" : "def"}, {"label" : "PUNCTUATIONS", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.PUNCTUATIONS", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#PUNCTUATIONS:Array[String]", "kind" : "val"}, {"label" : "POSTAGS", "tail" : ": Array[Serializable]", "member" : "com.johnsnowlabs.nlp.annotators.re.REFeatureGenerator.POSTAGS", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#POSTAGS:Array[java.io.Serializable]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/REFeatureGenerator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach", "shortDescription" : "Trains a TensorFlow model for relation extraction.", "members_class" : [{"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): RelationExtractionModel", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel", "kind" : "def"}, {"label" : "setToEntity", "tail" : "(beginCol: String, endCol: String, labelCol: String): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.setToEntity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setToEntity(beginCol:String,endCol:String,labelCol:String):RelationExtractionApproach.this.type", "kind" : "def"}, {"label" : "setFromEntity", "tail" : "(beginCol: String, endCol: String, labelCol: String): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.setFromEntity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setFromEntity(beginCol:String,endCol:String,labelCol:String):RelationExtractionApproach.this.type", "kind" : "def"}, {"label" : "getToEntityLabelCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.getToEntityLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getToEntityLabelCol:String", "kind" : "def"}, {"label" : "getToEntityEndCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.getToEntityEndCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getToEntityEndCol:String", "kind" : "def"}, {"label" : "getToEntityBeginCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.getToEntityBeginCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getToEntityBeginCol:String", "kind" : "def"}, {"label" : "getFromEntityLabelCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.getFromEntityLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getFromEntityLabelCol:String", "kind" : "def"}, {"label" : "getFromEntityEndCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.getFromEntityEndCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getFromEntityEndCol:String", "kind" : "def"}, {"label" : "getFromEntityBeginCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.getFromEntityBeginCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getFromEntityBeginCol:String", "kind" : "def"}, {"label" : "toEntityLabelCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.toEntityLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#toEntityLabelCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "toEntityEndCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.toEntityEndCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#toEntityEndCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "toEntityBeginCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.toEntityBeginCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#toEntityBeginCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "fromEntityLabelCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.fromEntityLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#fromEntityLabelCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "fromEntityEndCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.fromEntityEndCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#fromEntityEndCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "fromEntityBeginCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.fromEntityBeginCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#fromEntityBeginCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#inputAnnotatorTypes:Array[RelationExtractionApproach.this.AnnotatorType]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#description:String", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionApproach.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#uid:String", "kind" : "val"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getOutputLogsPath", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getOutputLogsPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getOutputLogsPath:String", "kind" : "def"}, {"label" : "getFeatureScaling", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getFeatureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getFeatureScaling:String", "kind" : "def"}, {"label" : "getFixImbalance", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getFixImbalance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getFixImbalance:Boolean", "kind" : "def"}, {"label" : "getMaxEpochs", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getMaxEpochs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getMaxEpochs:Int", "kind" : "def"}, {"label" : "getModelFile", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getModelFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getModelFile:String", "kind" : "def"}, {"label" : "getValidationSplit", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getValidationSplit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getValidationSplit:Float", "kind" : "def"}, {"label" : "getDropout", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getDropout", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getDropout:Float", "kind" : "def"}, {"label" : "getBatchSize", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getBatchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getBatchSize:Int", "kind" : "def"}, {"label" : "getLearningRate", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getLearningRate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getLearningRate:Float", "kind" : "def"}, {"label" : "getLabelColumn", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getLabelColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getLabelColumn:String", "kind" : "def"}, {"label" : "setOutputLogsPath", "tail" : "(outputLogsPath: String): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setOutputLogsPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setOutputLogsPath(outputLogsPath:String):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setFeatureScaling", "tail" : "(featureScaling: String): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setFeatureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setFeatureScaling(featureScaling:String):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setFixImbalance", "tail" : "(fix: Boolean): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setFixImbalance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setFixImbalance(fix:Boolean):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setModelFile", "tail" : "(modelFile: String): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setModelFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setModelFile(modelFile:String):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setValidationSplit", "tail" : "(validationSplit: Float): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setValidationSplit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setValidationSplit(validationSplit:Float):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setEpochsNumber", "tail" : "(epochs: Int): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setEpochsNumber", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setEpochsNumber(epochs:Int):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setDropout", "tail" : "(dropout: Float): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setDropout", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setDropout(dropout:Float):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setBatchSize", "tail" : "(batch: Int): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setBatchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setBatchSize(batch:Int):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setlearningRate", "tail" : "(lr: Float): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setlearningRate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setlearningRate(lr:Float):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setLabelColumn", "tail" : "(column: String): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setLabelColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setLabelColumn(column:String):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "outputLogsPath", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.outputLogsPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#outputLogsPath:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "featureScaling", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.featureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#featureScaling:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "fixImbalance", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.fixImbalance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#fixImbalance:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "validationSplit", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.validationSplit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#validationSplit:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "modelFile", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.modelFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#modelFile:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "epochsN", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.epochsN", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#epochsN:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "dropout", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.dropout", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#dropout:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "batchSize", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.batchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#batchSize:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "learningRate", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.learningRate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#learningRate:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "labelColumn", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.labelColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#labelColumn:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#outputAnnotatorType:String", "kind" : "val"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[GenericClassifierModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): GenericClassifierModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): GenericClassifierModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: GenericClassifierModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): RelationExtractionApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[GenericClassifierModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): GenericClassifierModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): GenericClassifierModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): RelationExtractionApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): RelationExtractionApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): RelationExtractionApproach.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): RelationExtractionApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): RelationExtractionApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): RelationExtractionApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionApproach.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel", "shortDescription" : "Extracts and classifies instances of relations between named entities.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html", "members_class" : [{"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "categorizeRel", "tail" : "(relation: DLRelationInstance): (Int, Int, Float)", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.categorizeRel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#categorizeRel(relation:com.johnsnowlabs.nlp.annotators.re.DLRelationInstance):(Int,Int,Float)", "kind" : "def"}, {"label" : "tokenizeSentence", "tail" : "(sentence: Sentence): WordpieceTokenizedSentence", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.tokenizeSentence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#tokenizeSentence(sentence:com.johnsnowlabs.nlp.annotators.common.Sentence):com.johnsnowlabs.nlp.annotators.common.WordpieceTokenizedSentence", "kind" : "def"}, {"label" : "model", "tail" : "(): TensorflowBertRE", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.model", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#model:com.johnsnowlabs.ml.tensorflow.TensorflowBertRE", "kind" : "def"}, {"label" : "setTensorflowModel", "tail" : "(spark: SparkSession, tf: TensorflowWrapper): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.setTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setTensorflowModel(spark:org.apache.spark.sql.SparkSession,tf:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper):RelationExtractionDLModel.this.type", "kind" : "def"}, {"label" : "getMaxSentenceLength", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.getMaxSentenceLength", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getMaxSentenceLength:Int", "kind" : "def"}, {"label" : "getConfigProtoBytes", "tail" : "(): Option[Array[Byte]]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.getConfigProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getConfigProtoBytes:Option[Array[Byte]]", "kind" : "def"}, {"label" : "setMaxSentenceLength", "tail" : "(value: Int): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.setMaxSentenceLength", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setMaxSentenceLength(value:Int):RelationExtractionDLModel.this.type", "kind" : "def"}, {"label" : "setConfigProtoBytes", "tail" : "(bytes: Array[Int]): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.setConfigProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setConfigProtoBytes(bytes:Array[Int]):RelationExtractionDLModel.this.type", "kind" : "def"}, {"label" : "updateBertConfig", "tail" : "(): Unit", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.updateBertConfig", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#updateBertConfig:Unit", "kind" : "def"}, {"label" : "setVocabulary", "tail" : "(value: Map[String, Int]): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.setVocabulary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setVocabulary(value:scala.collection.immutable.Map[String,Int]):RelationExtractionDLModel.this.type", "kind" : "def"}, {"label" : "maxSentenceLength", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.maxSentenceLength", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#maxSentenceLength:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "configProtoBytes", "tail" : ": IntArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.configProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#configProtoBytes:org.apache.spark.ml.param.IntArrayParam", "kind" : "val"}, {"label" : "vocabulary", "tail" : ": MapFeature[String, Int]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.vocabulary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#vocabulary:com.johnsnowlabs.nlp.serialization.MapFeature[String,Int]", "kind" : "val"}, {"label" : "getCategories", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.getCategories", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getCategories():Array[String]", "kind" : "def"}, {"label" : "getCategoryName", "tail" : "(id: Int): String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.getCategoryName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getCategoryName(id:Int):String", "kind" : "def"}, {"label" : "setCategoryNames", "tail" : "(categoryNames: Array[String]): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.setCategoryNames", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setCategoryNames(categoryNames:Array[String]):RelationExtractionDLModel.this.type", "kind" : "def"}, {"label" : "categoryNames", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.categoryNames", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#categoryNames:org.apache.spark.ml.param.StringArrayParam", "kind" : "var"}, {"label" : "outputAnnotatorType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#outputAnnotatorType:String", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#inputAnnotatorTypes:Array[RelationExtractionDLModel.this.AnnotatorType]", "kind" : "val"}, {"label" : "getPredictionThreshold", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.getPredictionThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getPredictionThreshold:Float", "kind" : "def"}, {"label" : "setPredictionThreshold", "tail" : "(predictionThreshold: Float): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.setPredictionThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setPredictionThreshold(predictionThreshold:Float):RelationExtractionDLModel.this.type", "kind" : "def"}, {"label" : "predictionThreshold", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.predictionThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#predictionThreshold:org.apache.spark.ml.param.FloatParam", "kind" : "var"}, {"label" : "bertREConfig", "tail" : ": BertREConfig", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.bertREConfig", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#bertREConfig:com.johnsnowlabs.nlp.annotators.re.BertREConfig", "kind" : "var"}, {"member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "setCaseSensitive", "tail" : "(value: Boolean): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.setCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setCaseSensitive(value:Boolean):HasCaseSensitiveProperties.this.type", "kind" : "def"}, {"label" : "getCaseSensitive", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.getCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getCaseSensitive:Boolean", "kind" : "def"}, {"label" : "caseSensitive", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.caseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#caseSensitive:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "validateStorageRef", "tail" : "(dataset: Dataset[_], inputCols: Array[String], annotatorType: String): Unit", "member" : "com.johnsnowlabs.storage.HasStorageRef.validateStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#validateStorageRef(dataset:org.apache.spark.sql.Dataset[_],inputCols:Array[String],annotatorType:String):Unit", "kind" : "def"}, {"label" : "getStorageRef", "tail" : "(): String", "member" : "com.johnsnowlabs.storage.HasStorageRef.getStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getStorageRef:String", "kind" : "def"}, {"label" : "setStorageRef", "tail" : "(value: String): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.storage.HasStorageRef.setStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setStorageRef(value:String):HasStorageRef.this.type", "kind" : "def"}, {"label" : "createDatabaseConnection", "tail" : "(database: Name): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasStorageRef.createDatabaseConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#createDatabaseConnection(database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "storageRef", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.storage.HasStorageRef.storageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#storageRef:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "writeTensorflowHub", "tail" : "(path: String, tfPath: String, spark: SparkSession, suffix: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#writeTensorflowHub(path:String,tfPath:String,spark:org.apache.spark.sql.SparkSession,suffix:String):Unit", "kind" : "def"}, {"label" : "writeTensorflowModelV2", "tail" : "(path: String, spark: SparkSession, tensorflow: TensorflowWrapper, suffix: String, filename: String, configProtoBytes: Option[Array[Byte]]): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowModelV2", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#writeTensorflowModelV2(path:String,spark:org.apache.spark.sql.SparkSession,tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,suffix:String,filename:String,configProtoBytes:Option[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "writeTensorflowModel", "tail" : "(path: String, spark: SparkSession, tensorflow: TensorflowWrapper, suffix: String, filename: String, configProtoBytes: Option[Array[Byte]]): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#writeTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,suffix:String,filename:String,configProtoBytes:Option[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): RelationExtractionDLModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): RelationExtractionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[RelationExtractionDLModel]): RelationExtractionDLModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[RelationExtractionDLModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): RelationExtractionDLModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): RelationExtractionDLModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): RelationExtractionDLModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): RelationExtractionDLModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): RelationExtractionDLModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): RelationExtractionDLModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "loadSavedModel", "tail" : "(folder: String, spark: SparkSession): RelationExtractionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadRelationExtractionDLModelTensorflowModel.loadSavedModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#loadSavedModel(folder:String,spark:org.apache.spark.sql.SparkSession):com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel", "kind" : "def"}, {"label" : "readTensorflow", "tail" : "(instance: RelationExtractionDLModel, path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadRelationExtractionDLModelTensorflowModel.readTensorflow", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#readTensorflow(instance:com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel,path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "tfFile", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadRelationExtractionDLModelTensorflowModel.tfFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#tfFile:String", "kind" : "val"}, {"label" : "readTensorflowHub", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String]): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#readTensorflowHub(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String]):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowChkPoints", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowChkPoints", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#readTensorflowChkPoints(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowWithSPModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean, loadSP: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowWithSPModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#readTensorflowWithSPModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean,loadSP:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#readTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): RelationExtractionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadablePretrainedRelationExtractionDLModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): RelationExtractionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadablePretrainedRelationExtractionDLModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): RelationExtractionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadablePretrainedRelationExtractionDLModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): RelationExtractionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadablePretrainedRelationExtractionDLModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#pretrained():com.johnsnowlabs.nlp.annotators.re.RelationExtractionDLModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": Some[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.ReadablePretrainedRelationExtractionDLModel.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#defaultModelName:Some[String]", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[RelationExtractionDLModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (RelationExtractionDLModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): RelationExtractionDLModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionDLModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel", "shortDescription" : "Extracts and classifies instances of relations between named entities.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html", "members_class" : [{"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "categorizeRel", "tail" : "(relation: RelationInstance): (Long, Float)", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.categorizeRel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#categorizeRel(relation:com.johnsnowlabs.nlp.annotators.re.RelationInstance):(Long,Float)", "kind" : "def"}, {"label" : "loadModel", "tail" : "(sparkSession: SparkSession, tfModel: TensorflowWrapper, categories: Array[String], encoder: GenericClassifierDataEncoder, nerTags: Array[String]): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.loadModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#loadModel(sparkSession:org.apache.spark.sql.SparkSession,tfModel:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,categories:Array[String],encoder:com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder,nerTags:Array[String]):RelationExtractionModel.this.type", "kind" : "def"}, {"label" : "getMaxSyntacticDistance", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.getMaxSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getMaxSyntacticDistance:Float", "kind" : "def"}, {"label" : "setMaxSyntacticDistance", "tail" : "(maxSyntacticDistance: Int): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.setMaxSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setMaxSyntacticDistance(maxSyntacticDistance:Int):RelationExtractionModel.this.type", "kind" : "def"}, {"label" : "maxSyntacticDistance", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.maxSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#maxSyntacticDistance:org.apache.spark.ml.param.IntParam", "kind" : "var"}, {"label" : "outputAnnotatorType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#outputAnnotatorType:String", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#inputAnnotatorTypes:Array[RelationExtractionModel.this.AnnotatorType]", "kind" : "val"}, {"label" : "getPredictionThreshold", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.getPredictionThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getPredictionThreshold:Float", "kind" : "def"}, {"label" : "setPredictionThreshold", "tail" : "(predictionThreshold: Float): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.setPredictionThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setPredictionThreshold(predictionThreshold:Float):RelationExtractionModel.this.type", "kind" : "def"}, {"label" : "predictionThreshold", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.predictionThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#predictionThreshold:org.apache.spark.ml.param.FloatParam", "kind" : "var"}, {"label" : "getRelationPairs", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.getRelationPairs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getRelationPairs:Array[String]", "kind" : "def"}, {"label" : "setRelationPairs", "tail" : "(relationPairs: Array[String]): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.setRelationPairs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setRelationPairs(relationPairs:Array[String]):RelationExtractionModel.this.type", "kind" : "def"}, {"label" : "relationPairs", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.relationPairs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#relationPairs:org.apache.spark.ml.param.Param[String]", "kind" : "var"}, {"member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#uid:String", "kind" : "val"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "scaleFeatures", "tail" : "(features: Array[Array[Float]]): Array[Array[Float]]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.scaleFeatures", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#scaleFeatures(features:Array[Array[Float]]):Array[Array[Float]]", "kind" : "def"}, {"label" : "getEncoder", "tail" : "(): GenericClassifierDataEncoder", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.getEncoder", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getEncoder:com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder", "kind" : "def"}, {"label" : "setEncoder", "tail" : "(encoder: GenericClassifierDataEncoder): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.setEncoder", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setEncoder(encoder:com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder):GenericClassifierModel.this.type", "kind" : "def"}, {"label" : "model", "tail" : "(): TensorflowGenericClassifier", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.model", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#model:com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier", "kind" : "def"}, {"label" : "setTensorflowModel", "tail" : "(spark: SparkSession, tf: TensorflowWrapper): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.setTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setTensorflowModel(spark:org.apache.spark.sql.SparkSession,tf:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper):GenericClassifierModel.this.type", "kind" : "def"}, {"label" : "getFeatureScaling", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.getFeatureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getFeatureScaling:String", "kind" : "def"}, {"label" : "setFeatureScaling", "tail" : "(featureScaling: String): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.setFeatureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setFeatureScaling(featureScaling:String):GenericClassifierModel.this.type", "kind" : "def"}, {"label" : "featureScaling", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.featureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#featureScaling:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getCategories", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.getCategories", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getCategories():Array[String]", "kind" : "def"}, {"label" : "getCategoryName", "tail" : "(id: Int): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.getCategoryName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getCategoryName(id:Int):String", "kind" : "def"}, {"label" : "setCategoryNames", "tail" : "(categoryNames: Array[String]): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.setCategoryNames", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setCategoryNames(categoryNames:Array[String]):GenericClassifierModel.this.type", "kind" : "def"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "writeTensorflowHub", "tail" : "(path: String, tfPath: String, spark: SparkSession, suffix: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#writeTensorflowHub(path:String,tfPath:String,spark:org.apache.spark.sql.SparkSession,suffix:String):Unit", "kind" : "def"}, {"label" : "writeTensorflowModelV2", "tail" : "(path: String, spark: SparkSession, tensorflow: TensorflowWrapper, suffix: String, filename: String, configProtoBytes: Option[Array[Byte]]): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowModelV2", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#writeTensorflowModelV2(path:String,spark:org.apache.spark.sql.SparkSession,tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,suffix:String,filename:String,configProtoBytes:Option[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "writeTensorflowModel", "tail" : "(path: String, spark: SparkSession, tensorflow: TensorflowWrapper, suffix: String, filename: String, configProtoBytes: Option[Array[Byte]]): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#writeTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,suffix:String,filename:String,configProtoBytes:Option[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "validateStorageRef", "tail" : "(dataset: Dataset[_], inputCols: Array[String], annotatorType: String): Unit", "member" : "com.johnsnowlabs.storage.HasStorageRef.validateStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#validateStorageRef(dataset:org.apache.spark.sql.Dataset[_],inputCols:Array[String],annotatorType:String):Unit", "kind" : "def"}, {"label" : "getStorageRef", "tail" : "(): String", "member" : "com.johnsnowlabs.storage.HasStorageRef.getStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getStorageRef:String", "kind" : "def"}, {"label" : "setStorageRef", "tail" : "(value: String): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.storage.HasStorageRef.setStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setStorageRef(value:String):HasStorageRef.this.type", "kind" : "def"}, {"label" : "createDatabaseConnection", "tail" : "(database: Name): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasStorageRef.createDatabaseConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#createDatabaseConnection(database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "storageRef", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.storage.HasStorageRef.storageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#storageRef:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): GenericClassifierModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): RelationExtractionModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[GenericClassifierModel]): GenericClassifierModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[GenericClassifierModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): RelationExtractionModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): RelationExtractionModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): RelationExtractionModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): RelationExtractionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): RelationExtractionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): RelationExtractionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): RelationExtractionModel", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): RelationExtractionModel", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): RelationExtractionModel", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel", "kind" : "def"}, {"label" : "readGenericClassifierGraph", "tail" : "(instance: GenericClassifierModel, path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationExtractionModel.readGenericClassifierGraph", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#readGenericClassifierGraph(instance:com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel,path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): RelationExtractionModel", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#pretrained():T", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": Some[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#defaultModelName:Some[String]", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#defaultLang:String", "kind" : "val"}, {"label" : "tfFile", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadsGenericClassifierGraph.tfFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#tfFile:String", "kind" : "val"}, {"label" : "readTensorflowHub", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String]): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#readTensorflowHub(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String]):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowChkPoints", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowChkPoints", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#readTensorflowChkPoints(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowWithSPModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean, loadSP: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowWithSPModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#readTensorflowWithSPModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean,loadSP:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#readTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[RelationExtractionModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (RelationExtractionModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): RelationExtractionModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationExtractionModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance#<init>", "error" : "unsupported entity"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#description:String", "kind" : "val"}, {"label" : "vector", "tail" : ": Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance.vector", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#vector:Array[Float]", "kind" : "val"}, {"label" : "chunk2", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance.chunk2", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#chunk2:String", "kind" : "val"}, {"label" : "chunk1", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance.chunk1", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#chunk1:String", "kind" : "val"}, {"label" : "entity2_end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance.entity2_end", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#entity2_end:Int", "kind" : "val"}, {"label" : "entity2_begin", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance.entity2_begin", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#entity2_begin:Int", "kind" : "val"}, {"label" : "entity1_end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance.entity1_end", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#entity1_end:Int", "kind" : "val"}, {"label" : "entity1_begin", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance.entity1_begin", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#entity1_begin:Int", "kind" : "val"}, {"label" : "entity2", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance.entity2", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#entity2:String", "kind" : "val"}, {"label" : "entity1", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance.entity1", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#entity1:String", "kind" : "val"}, {"label" : "relationType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RelationInstance.relationType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#relationType:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RelationInstance.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter", "shortDescription" : "Filters and outputs combinations of relations between extracted entities, for further processing.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html", "members_class" : [{"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "getMaxSyntacticDistance", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.getMaxSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#getMaxSyntacticDistance:Float", "kind" : "def"}, {"label" : "setMaxSyntacticDistance", "tail" : "(maxSyntacticDistance: Int): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.setMaxSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setMaxSyntacticDistance(maxSyntacticDistance:Int):RENerChunksFilter.this.type", "kind" : "def"}, {"label" : "maxSyntacticDistance", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.maxSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#maxSyntacticDistance:org.apache.spark.ml.param.IntParam", "kind" : "var"}, {"label" : "getRelationPairs", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.getRelationPairs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#getRelationPairs:Array[String]", "kind" : "def"}, {"label" : "setRelationPairs", "tail" : "(relationPairs: Array[String]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.setRelationPairs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setRelationPairs(relationPairs:Array[String]):RENerChunksFilter.this.type", "kind" : "def"}, {"label" : "relationPairs", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.relationPairs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#relationPairs:org.apache.spark.ml.param.Param[String]", "kind" : "var"}, {"label" : "outputAnnotatorType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#outputAnnotatorType:String", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#inputAnnotatorTypes:Array[RENerChunksFilter.this.AnnotatorType]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): RENerChunksFilter", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[RENerChunksFilter]): RENerChunksFilter", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[RENerChunksFilter]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): RENerChunksFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): RENerChunksFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): RENerChunksFilter.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): RENerChunksFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): RENerChunksFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): RENerChunksFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "getMaxSyntacticDistance", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.getMaxSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#getMaxSyntacticDistance:Float", "kind" : "def"}, {"label" : "setMaxSyntacticDistance", "tail" : "(maxSyntacticDistance: Int): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.setMaxSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setMaxSyntacticDistance(maxSyntacticDistance:Int):RENerChunksFilter.this.type", "kind" : "def"}, {"label" : "maxSyntacticDistance", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.maxSyntacticDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#maxSyntacticDistance:org.apache.spark.ml.param.IntParam", "kind" : "var"}, {"label" : "getRelationPairs", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.getRelationPairs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#getRelationPairs:Array[String]", "kind" : "def"}, {"label" : "setRelationPairs", "tail" : "(relationPairs: Array[String]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.setRelationPairs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setRelationPairs(relationPairs:Array[String]):RENerChunksFilter.this.type", "kind" : "def"}, {"label" : "relationPairs", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.relationPairs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#relationPairs:org.apache.spark.ml.param.Param[String]", "kind" : "var"}, {"label" : "outputAnnotatorType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#outputAnnotatorType:String", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#inputAnnotatorTypes:Array[RENerChunksFilter.this.AnnotatorType]", "kind" : "val"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.re.RENerChunksFilter.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): RENerChunksFilter", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): RENerChunksFilter.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[RENerChunksFilter]): RENerChunksFilter", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[RENerChunksFilter]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): RENerChunksFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): RENerChunksFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): RENerChunksFilter.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): RENerChunksFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): RENerChunksFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): RENerChunksFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/re\/RENerChunksFilter.html", "kind" : "class"}], "com.johnsnowlabs.nlp.annotators.disambiguation.logic" : [{"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.AnnotationLogic", "members_trait" : [{"label" : "Prediction", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.Prediction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#PredictionextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.AnnotationLogic.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "predictByChunk", "tail" : "(annotations: Seq[Annotation], numFirstChars: Int): Seq[Prediction]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.predictByChunk", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#predictByChunk(annotations:Seq[com.johnsnowlabs.nlp.Annotation],numFirstChars:Int):Seq[PredictionLogic.this.Prediction]", "kind" : "def"}, {"label" : "enableApproximateMatching", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.enableApproximateMatching", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#enableApproximateMatching:Boolean", "kind" : "def"}, {"label" : "nearMatchingGap", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.nearMatchingGap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#nearMatchingGap:Int", "kind" : "def"}, {"label" : "levenshteinDistanceThreshold", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.levenshteinDistanceThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#levenshteinDistanceThreshold:Double", "kind" : "def"}, {"label" : "limit", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.limit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#limit:Int", "kind" : "def"}, {"label" : "searchByToken", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.searchByToken", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#searchByToken:Boolean", "kind" : "def"}, {"label" : "EmbeddingsRef", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor.EmbeddingsRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#EmbeddingsRef:String", "kind" : "val"}, {"label" : "OptionAsSeq", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.OptionAsSeq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#OptionAsSeq[T]=Seq[T]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getNumFirstChars", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.AnnotationLogic.getNumFirstChars", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#getNumFirstChars:Int", "kind" : "abstract def"}, {"label" : "outputAnnotatorType", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.AnnotationLogic.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#outputAnnotatorType:String", "kind" : "abstract def"}, {"label" : "getSentenceEmbedding", "tail" : "(annotations: Seq[Annotation]): SentenceEmbeddingWithType", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor.getSentenceEmbedding", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#getSentenceEmbedding(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.SentenceEmbeddingWithType", "kind" : "abstract def"}, {"label" : "id2categoryF", "tail" : ": (Int) ⇒ OptionAsSeq[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.id2categoryF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#id2categoryF:Int=>Mappings.this.OptionAsSeq[String]", "kind" : "abstract val"}, {"label" : "id2titleF", "tail" : ": (Int) ⇒ OptionAsSeq[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.id2titleF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#id2titleF:Int=>Mappings.this.OptionAsSeq[String]", "kind" : "abstract val"}, {"label" : "id2linkF", "tail" : ": (Int) ⇒ OptionAsSeq[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.id2linkF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#id2linkF:Int=>Mappings.this.OptionAsSeq[String]", "kind" : "abstract val"}, {"label" : "id2embF", "tail" : ": (Int) ⇒ OptionAsSeq[Array[Double]]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.id2embF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#id2embF:Int=>Mappings.this.OptionAsSeq[Array[Double]]", "kind" : "abstract val"}, {"label" : "chunk2idF", "tail" : ": (String) ⇒ Option[List[Int]]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.chunk2idF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html#chunk2idF:String=>Option[List[Int]]", "kind" : "abstract val"}], "shortDescription" : "Trait that contains the annotation logic for theNerDisambiguator.", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/AnnotationLogic.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge#<init>", "error" : "unsupported entity"}, {"label" : "id2category", "tail" : ": (DataId) ⇒ Option[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge.id2category", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#id2category:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId=>Option[String]", "kind" : "val"}, {"label" : "id2title", "tail" : ": (DataId) ⇒ Option[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge.id2title", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#id2title:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId=>Option[String]", "kind" : "val"}, {"label" : "id2link", "tail" : ": (DataId) ⇒ Option[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge.id2link", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#id2link:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId=>Option[String]", "kind" : "val"}, {"label" : "id2emb", "tail" : ": (DataId) ⇒ Option[LinalgVector]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge.id2emb", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#id2emb:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId=>Option[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector]", "kind" : "val"}, {"label" : "chunk2id", "tail" : ": (String) ⇒ Option[List[DataId]]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge.chunk2id", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#chunk2id:String=>Option[List[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Knowledge.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.KvKnowledgeExtractor", "members_trait" : [{"label" : "extractKnowledgeFromKv", "tail" : "(id2record: (DataId) ⇒ Option[Record], chunk2id: (Chunk) ⇒ Option[List[DataId]]): Knowledge", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.KvKnowledgeExtractor.extractKnowledgeFromKv", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#extractKnowledgeFromKv(id2record:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId=>Option[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.ContextMappingsSchema.Record],chunk2id:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.Chunk=>Option[List[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId]]):com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/KvKnowledgeExtractor.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings", "members_trait" : [{"label" : "OptionAsSeq", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.OptionAsSeq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#OptionAsSeq[T]=Seq[T]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "id2categoryF", "tail" : ": (Int) ⇒ OptionAsSeq[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.id2categoryF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#id2categoryF:Int=>Mappings.this.OptionAsSeq[String]", "kind" : "abstract val"}, {"label" : "id2titleF", "tail" : ": (Int) ⇒ OptionAsSeq[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.id2titleF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#id2titleF:Int=>Mappings.this.OptionAsSeq[String]", "kind" : "abstract val"}, {"label" : "id2linkF", "tail" : ": (Int) ⇒ OptionAsSeq[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.id2linkF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#id2linkF:Int=>Mappings.this.OptionAsSeq[String]", "kind" : "abstract val"}, {"label" : "id2embF", "tail" : ": (Int) ⇒ OptionAsSeq[Array[Double]]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.id2embF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#id2embF:Int=>Mappings.this.OptionAsSeq[Array[Double]]", "kind" : "abstract val"}, {"label" : "chunk2idF", "tail" : ": (String) ⇒ Option[List[Int]]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.chunk2idF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html#chunk2idF:String=>Option[List[Int]]", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/Mappings.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic", "members_trait" : [{"label" : "predictByChunk", "tail" : "(annotations: Seq[Annotation], numFirstChars: Int): Seq[Prediction]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.predictByChunk", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#predictByChunk(annotations:Seq[com.johnsnowlabs.nlp.Annotation],numFirstChars:Int):Seq[PredictionLogic.this.Prediction]", "kind" : "def"}, {"label" : "enableApproximateMatching", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.enableApproximateMatching", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#enableApproximateMatching:Boolean", "kind" : "def"}, {"label" : "nearMatchingGap", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.nearMatchingGap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#nearMatchingGap:Int", "kind" : "def"}, {"label" : "levenshteinDistanceThreshold", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.levenshteinDistanceThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#levenshteinDistanceThreshold:Double", "kind" : "def"}, {"label" : "limit", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.limit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#limit:Int", "kind" : "def"}, {"label" : "searchByToken", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.searchByToken", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#searchByToken:Boolean", "kind" : "def"}, {"label" : "Prediction", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.Prediction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#PredictionextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "EmbeddingsRef", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor.EmbeddingsRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#EmbeddingsRef:String", "kind" : "val"}, {"label" : "OptionAsSeq", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.OptionAsSeq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#OptionAsSeq[T]=Seq[T]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getSentenceEmbedding", "tail" : "(annotations: Seq[Annotation]): SentenceEmbeddingWithType", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor.getSentenceEmbedding", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#getSentenceEmbedding(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.SentenceEmbeddingWithType", "kind" : "abstract def"}, {"label" : "id2categoryF", "tail" : ": (Int) ⇒ OptionAsSeq[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.id2categoryF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#id2categoryF:Int=>Mappings.this.OptionAsSeq[String]", "kind" : "abstract val"}, {"label" : "id2titleF", "tail" : ": (Int) ⇒ OptionAsSeq[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.id2titleF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#id2titleF:Int=>Mappings.this.OptionAsSeq[String]", "kind" : "abstract val"}, {"label" : "id2linkF", "tail" : ": (Int) ⇒ OptionAsSeq[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.id2linkF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#id2linkF:Int=>Mappings.this.OptionAsSeq[String]", "kind" : "abstract val"}, {"label" : "id2embF", "tail" : ": (Int) ⇒ OptionAsSeq[Array[Double]]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.id2embF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#id2embF:Int=>Mappings.this.OptionAsSeq[Array[Double]]", "kind" : "abstract val"}, {"label" : "chunk2idF", "tail" : ": (String) ⇒ Option[List[Int]]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.chunk2idF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#chunk2idF:String=>Option[List[Int]]", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html", "kind" : "trait"}], "com.johnsnowlabs.nlp.jsl" : [{"name" : "com.johnsnowlabs.nlp.jsl.AnnotatorType", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html", "members_object" : [{"label" : "SQL", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.jsl.AnnotatorType.SQL", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#SQL:String", "kind" : "val"}, {"label" : "FEATURE_VECTOR", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.jsl.AnnotatorType.FEATURE_VECTOR", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#FEATURE_VECTOR:String", "kind" : "val"}, {"label" : "SELECTOR", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.jsl.AnnotatorType.SELECTOR", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#SELECTOR:String", "kind" : "val"}, {"label" : "KEYWORD", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.jsl.AnnotatorType.KEYWORD", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#KEYWORD:String", "kind" : "val"}, {"label" : "DISAMBIGUATION", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.jsl.AnnotatorType.DISAMBIGUATION", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#DISAMBIGUATION:String", "kind" : "val"}, {"label" : "ASSERTION", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.jsl.AnnotatorType.ASSERTION", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#ASSERTION:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/jsl\/AnnotatorType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.jsl.functions", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html", "members_object" : [{"label" : "resolveSortedOverlapping", "tail" : "(possibleEntityFields: Array[String], mergeOverlapping: Boolean)(annotations: List[Annotation]): List[Annotation]", "member" : "com.johnsnowlabs.nlp.jsl.functions.resolveSortedOverlapping", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#resolveSortedOverlapping(possibleEntityFields:Array[String],mergeOverlapping:Boolean)(annotations:List[com.johnsnowlabs.nlp.Annotation]):List[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "groupSortedOverlapping", "tail" : "(ans: Seq[Annotation]): List[List[Annotation]]", "member" : "com.johnsnowlabs.nlp.jsl.functions.groupSortedOverlapping", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#groupSortedOverlapping(ans:Seq[com.johnsnowlabs.nlp.Annotation]):List[List[com.johnsnowlabs.nlp.Annotation]]", "kind" : "def"}, {"label" : "getEntityField", "tail" : "(a: Annotation, possibleEntityFields: Array[String]): Option[String]", "member" : "com.johnsnowlabs.nlp.jsl.functions.getEntityField", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#getEntityField(a:com.johnsnowlabs.nlp.Annotation,possibleEntityFields:Array[String]):Option[String]", "kind" : "def"}, {"label" : "merge", "tail" : "(rs: List[(Int, Int)]): List[(Int, Int)]", "member" : "com.johnsnowlabs.nlp.jsl.functions.merge", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#merge(rs:List[(Int,Int)]):List[(Int,Int)]", "kind" : "def"}, {"label" : "checkOverlap", "tail" : "(an1: (Int, Int), an2: (Int, Int)): Int", "member" : "com.johnsnowlabs.nlp.jsl.functions.checkOverlap", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#checkOverlap(an1:(Int,Int),an2:(Int,Int)):Int", "kind" : "def"}, {"label" : "checkOverlap", "tail" : "(an1: Annotation, an2: Annotation): Int", "member" : "com.johnsnowlabs.nlp.jsl.functions.checkOverlap", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#checkOverlap(an1:com.johnsnowlabs.nlp.Annotation,an2:com.johnsnowlabs.nlp.Annotation):Int", "kind" : "def"}, {"label" : "trimWithInfo", "tail" : "(text: String): (Int, Int, String)", "member" : "com.johnsnowlabs.nlp.jsl.functions.trimWithInfo", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#trimWithInfo(text:String):(Int,Int,String)", "kind" : "def"}, {"label" : "tagTokens", "tail" : "(possibleEntityFields: Array[String])(tokenAnnotations: Seq[Annotation], labelAnnotations: Seq[Annotation], format: String): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.jsl.functions.tagTokens", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#tagTokens(possibleEntityFields:Array[String])(tokenAnnotations:Seq[com.johnsnowlabs.nlp.Annotation],labelAnnotations:Seq[com.johnsnowlabs.nlp.Annotation],format:String):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "charIndexToTokenIndex", "tail" : "(minCharsTol: Int, alignCharsTol: Int): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.jsl.functions.charIndexToTokenIndex", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#charIndexToTokenIndex(minCharsTol:Int,alignCharsTol:Int):org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "iobTagging", "tail" : ": UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.jsl.functions.iobTagging", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#iobTagging:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "val"}, {"label" : "unkToken", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.jsl.functions.unkToken", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#unkToken:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/jsl\/functions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.jsl.SparkNLP", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html", "members_object" : [{"label" : "version", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.jsl.SparkNLP.version", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#version():String", "kind" : "def"}, {"label" : "start", "tail" : "(secret: String, gpu: Boolean, spark23: Boolean, spark24: Boolean, public: String): SparkSession", "member" : "com.johnsnowlabs.nlp.jsl.SparkNLP.start", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#start(secret:String,gpu:Boolean,spark23:Boolean,spark24:Boolean,public:String):org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "versionRegex", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.jsl.SparkNLP.versionRegex", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#versionRegex:String", "kind" : "val"}, {"label" : "currentVersion", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.jsl.SparkNLP.currentVersion", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#currentVersion:String", "kind" : "val"}, {"label" : "versionFileContents", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.jsl.SparkNLP.versionFileContents", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#versionFileContents:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/jsl\/SparkNLP$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.johnsnowlabs.ml.tensorflow.text2sql.rule" : [{"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Edge", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Edge#<init>", "error" : "unsupported entity"}, {"label" : "weight", "tail" : ": Option[(Any, Any)]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Edge.weight", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#weight:Option[(Any,Any)]", "kind" : "var"}, {"label" : "cost", "tail" : ": Float", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Edge.cost", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#cost:Float", "kind" : "var"}, {"label" : "end", "tail" : ": Node", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Edge.end", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#end:com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node", "kind" : "var"}, {"label" : "start", "tail" : ": Node", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Edge.start", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#start:com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Edge.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Grammar", "shortDescription" : "", "members_class" : [{"label" : "_init_id2prod", "tail" : "(): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Grammar._init_id2prod", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#_init_id2prod():Unit", "kind" : "def"}, {"label" : "add_production", "tail" : "(cls: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Grammar.add_production", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#add_production(cls:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "_init_grammar", "tail" : "(): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Grammar._init_grammar", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#_init_grammar():Unit", "kind" : "def"}, {"label" : "id2prod", "tail" : ": LinkedHashMap[Int, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Grammar.id2prod", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#id2prod:scala.collection.mutable.LinkedHashMap[Int,String]", "kind" : "var"}, {"label" : "type2id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Grammar.type2id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#type2id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "var"}, {"label" : "prod2id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Grammar.prod2id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#prod2id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "var"}, {"label" : "type_id", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Grammar.type_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#type_id:Int", "kind" : "var"}, {"label" : "begin", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Grammar.begin", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#begin:Int", "kind" : "var"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Grammar#<init>", "error" : "unsupported entity"}, {"label" : "isSketch", "tail" : ": Boolean", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Grammar.isSketch", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#isSketch:Boolean", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Grammar.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph", "shortDescription" : "", "members_class" : [{"label" : "dijkstra", "tail" : "(src: Node, dest: Node): List[Node]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph.dijkstra", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#dijkstra(src:com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node,dest:com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node):List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node]", "kind" : "def"}, {"label" : "neighbors", "tail" : "(): LinkedHashMap[Node, List[Node]]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph.neighbors", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#neighbors():scala.collection.mutable.LinkedHashMap[com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node,List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node]]", "kind" : "def"}, {"label" : "add_edge", "tail" : "(node1: Node, node2: Node, cost: Float, both_ends: Boolean): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph.add_edge", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#add_edge(node1:com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node,node2:com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node,cost:Float,both_ends:Boolean):Unit", "kind" : "def"}, {"label" : "remove_edge", "tail" : "(node1: Node, node2: Node, both_ends: Boolean): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph.remove_edge", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#remove_edge(node1:com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node,node2:com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node,both_ends:Boolean):Unit", "kind" : "def"}, {"label" : "vertices", "tail" : "(): List[Node]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph.vertices", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#vertices():List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(xs: List[A])(f: (A) ⇒ B): List[A]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph.distinctBy", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#distinctBy[A,B](xs:List[A])(f:A=>B):List[A]", "kind" : "def"}, {"label" : "NEIGHBORS", "tail" : ": LinkedHashMap[Node, List[Node]]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph.NEIGHBORS", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#NEIGHBORS:scala.collection.mutable.LinkedHashMap[com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node,List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node]]", "kind" : "val"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": List[Edge]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Graph.edges", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#edges:List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.Edge]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Graph.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.lf", "shortDescription" : "", "members_case class" : [{"label" : "build_adjacency_matrix", "tail" : "(lf: ListBuffer[Action], symmetry: Boolean): Array[Array[Int]]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.lf.build_adjacency_matrix", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#build_adjacency_matrix(lf:scala.collection.mutable.ListBuffer[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action],symmetry:Boolean):Array[Array[Int]]", "kind" : "def"}, {"label" : "label_matrix", "tail" : "(lf: ListBuffer[Action], matrix: Array[Array[Int]], node: Action, symmetry: Boolean): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.lf.label_matrix", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#label_matrix(lf:scala.collection.mutable.ListBuffer[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action],matrix:Array[Array[Int]],node:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action,symmetry:Boolean):Unit", "kind" : "def"}, {"label" : "eliminate_parent", "tail" : "(node: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.lf.eliminate_parent", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#eliminate_parent(node:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "verify", "tail" : "(node: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.lf.verify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#verify(node:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "build_tree", "tail" : "(lf: ListBuffer[Action]): Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.lf.build_tree", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#build_tree(lf:scala.collection.mutable.ListBuffer[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]):com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "def"}, {"label" : "_build_filter", "tail" : "(lf: ListBuffer[Action], root_filter: Action): Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.lf._build_filter", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#_build_filter(lf:scala.collection.mutable.ListBuffer[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action],root_filter:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "def"}, {"label" : "_build_single_filter", "tail" : "(lf: ListBuffer[Action], f: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.lf._build_single_filter", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#_build_single_filter(lf:scala.collection.mutable.ListBuffer[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action],f:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "_build", "tail" : "(lf: ListBuffer[Action]): Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.lf._build", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#_build(lf:scala.collection.mutable.ListBuffer[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]):com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "def"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.lf#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/lf.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Node.value", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#value:String", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Node.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Utils", "shortDescription" : "", "object" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html", "members_class" : [{"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Utils#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ActionTypeToClass", "tail" : "(actionType: Action, id_c: Int): Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Utils.ActionTypeToClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#ActionTypeToClass(actionType:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action,id_c:Int):com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "def"}, {"label" : "mapToActionType", "tail" : "(actionType: String, id_c: Int): Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.Utils.mapToActionType", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#mapToActionType(actionType:String,id_c:Int):com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/Utils.html", "kind" : "class"}], "com.johnsnowlabs.nlp.serialization" : [{"name" : "com.johnsnowlabs.nlp.serialization.ResolverMapFeature", "shortDescription" : "", "members_class" : [{"label" : "deserializeDataset", "tail" : "(spark: SparkSession, path: String, field: String): Option[Map[TKey, TValue]]", "member" : "com.johnsnowlabs.nlp.serialization.ResolverMapFeature.deserializeDataset", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#deserializeDataset(spark:org.apache.spark.sql.SparkSession,path:String,field:String):Option[Map[TKey,TValue]]", "kind" : "def"}, {"label" : "serializeDataset", "tail" : "(spark: SparkSession, path: String, field: String, value: Map[TKey, TValue]): Unit", "member" : "com.johnsnowlabs.nlp.serialization.ResolverMapFeature.serializeDataset", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#serializeDataset(spark:org.apache.spark.sql.SparkSession,path:String,field:String,value:Map[TKey,TValue]):Unit", "kind" : "def"}, {"label" : "deserializeObject", "tail" : "(spark: SparkSession, path: String, field: String): Option[Map[TKey, TValue]]", "member" : "com.johnsnowlabs.nlp.serialization.ResolverMapFeature.deserializeObject", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#deserializeObject(spark:org.apache.spark.sql.SparkSession,path:String,field:String):Option[Map[TKey,TValue]]", "kind" : "def"}, {"label" : "serializeObject", "tail" : "(spark: SparkSession, path: String, field: String, value: Map[TKey, TValue]): Unit", "member" : "com.johnsnowlabs.nlp.serialization.ResolverMapFeature.serializeObject", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#serializeObject(spark:org.apache.spark.sql.SparkSession,path:String,field:String,value:Map[TKey,TValue]):Unit", "kind" : "def"}, {"label" : "encoder", "tail" : ": Encoder[(TKey, TValue)]", "member" : "com.johnsnowlabs.nlp.serialization.ResolverMapFeature.encoder", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#encoder:org.apache.spark.sql.Encoder[(TKey,TValue)]", "kind" : "implicit val"}, {"member" : "com.johnsnowlabs.nlp.serialization.ResolverMapFeature#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.serialization.ResolverMapFeature.name", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#name:String", "kind" : "val"}, {"label" : "isSet", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.serialization.Feature.isSet", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#isSet:Boolean", "kind" : "final def"}, {"label" : "setFallback", "tail" : "(v: Option[() ⇒ Map[TKey, TValue]]): HasFeatures", "member" : "com.johnsnowlabs.nlp.serialization.Feature.setFallback", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#setFallback(v:Option[()=>TComplete]):com.johnsnowlabs.nlp.HasFeatures", "kind" : "def"}, {"label" : "setValue", "tail" : "(value: Option[Any]): HasFeatures", "member" : "com.johnsnowlabs.nlp.serialization.Feature.setValue", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#setValue(value:Option[Any]):com.johnsnowlabs.nlp.HasFeatures", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(): Map[TKey, TValue]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#getOrDefault:TComplete", "kind" : "final def"}, {"label" : "orDefault", "tail" : "(): Option[Map[TKey, TValue]]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.orDefault", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#orDefault:Option[TComplete]", "kind" : "final def"}, {"label" : "get", "tail" : "(): Option[Map[TKey, TValue]]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.get", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#get:Option[TComplete]", "kind" : "final def"}, {"label" : "getFieldPath", "tail" : "(path: String, field: String): Path", "member" : "com.johnsnowlabs.nlp.serialization.Feature.getFieldPath", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#getFieldPath(path:String,field:String):org.apache.hadoop.fs.Path", "kind" : "final def"}, {"label" : "deserialize", "tail" : "(spark: SparkSession, path: String, field: String): Option[_]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.deserialize", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#deserialize(spark:org.apache.spark.sql.SparkSession,path:String,field:String):Option[_]", "kind" : "final def"}, {"label" : "serializeInfer", "tail" : "(spark: SparkSession, path: String, field: String, value: Any): Unit", "member" : "com.johnsnowlabs.nlp.serialization.Feature.serializeInfer", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#serializeInfer(spark:org.apache.spark.sql.SparkSession,path:String,field:String,value:Any):Unit", "kind" : "final def"}, {"label" : "serialize", "tail" : "(spark: SparkSession, path: String, field: String, value: Map[TKey, TValue]): Unit", "member" : "com.johnsnowlabs.nlp.serialization.Feature.serialize", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#serialize(spark:org.apache.spark.sql.SparkSession,path:String,field:String,value:TComplete):Unit", "kind" : "final def"}, {"label" : "fallbackLazyValue", "tail" : ": Option[() ⇒ Map[TKey, TValue]]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.fallbackLazyValue", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#fallbackLazyValue:Option[()=>TComplete]", "kind" : "final var"}, {"label" : "fallbackRawValue", "tail" : ": Option[Map[TKey, TValue]]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.fallbackRawValue", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#fallbackRawValue:Option[TComplete]", "kind" : "final var"}, {"label" : "rawValue", "tail" : ": Option[Map[TKey, TValue]]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.rawValue", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#rawValue:Option[TComplete]", "kind" : "final var"}, {"label" : "broadcastValue", "tail" : ": Option[Broadcast[Map[TKey, TValue]]]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.broadcastValue", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#broadcastValue:Option[org.apache.spark.broadcast.Broadcast[TComplete]]", "kind" : "final var"}, {"label" : "useBroadcast", "tail" : ": Boolean", "member" : "com.johnsnowlabs.nlp.serialization.Feature.useBroadcast", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#useBroadcast:Boolean", "kind" : "val"}, {"label" : "serializationMode", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.serialization.Feature.serializationMode", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#serializationMode:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/serialization\/ResolverMapFeature.html", "kind" : "class"}], "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes" : [{"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.ContextMappingsSchema", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html", "members_object" : [{"label" : "Record", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.ContextMappingsSchema.Record", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#RecordextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/ContextMappingsSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html", "members_object" : [{"label" : "WholeSentenceEmbeddingType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.WholeSentenceEmbeddingType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#WholeSentenceEmbeddingType:String", "kind" : "val"}, {"label" : "BowEmbeddingType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.BowEmbeddingType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#BowEmbeddingType:String", "kind" : "val"}, {"label" : "DisambiguatedSentence", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.DisambiguatedSentence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#DisambiguatedSentenceextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "DisambiguationResult", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.DisambiguationResult", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#DisambiguationResultextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "Position", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.Position", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#PositionextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "Disambiguation", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.Disambiguation", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#DisambiguationextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "RawDisambiguationResult", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.RawDisambiguationResult", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#RawDisambiguationResultextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "SentenceEmbeddingWithType", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.SentenceEmbeddingWithType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#SentenceEmbeddingWithTypeextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "Sentence", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.Sentence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#SentenceextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/DisambiguationDataTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html", "members_object" : [{"label" : "Chunk", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.Chunk", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#Chunk=String", "kind" : "type"}, {"label" : "DataId", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#DataId=Int", "kind" : "type"}, {"label" : "Score", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.Score", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#Score=Double", "kind" : "type"}, {"label" : "LinalgScalar", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgScalar", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#LinalgScalar=Double", "kind" : "type"}, {"label" : "LinalgVector", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#LinalgVector=Array[Double]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/datatypes\/LinalgAliases$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl" : [{"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.BowPoolingExtractor", "members_trait" : [{"label" : "getSentenceEmbedding", "tail" : "(annotations: Seq[Annotation]): SentenceEmbeddingWithType", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.BowPoolingExtractor.getSentenceEmbedding", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#getSentenceEmbedding(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.SentenceEmbeddingWithType", "kind" : "def"}, {"label" : "EmbeddingsRef", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor.EmbeddingsRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#EmbeddingsRef:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "poolEmbeddings", "tail" : "(embeddings: Array[Array[Float]]): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.PoolingLogic.poolEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html#poolEmbeddings(embeddings:Array[Array[Float]]):Array[Double]", "kind" : "abstract def"}], "shortDescription" : "This extractor recognizes word annotations and pools them together", "object" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html", "members_object" : [{"label" : "poolEmbeddings", "tail" : "(embeddings: Array[Array[Float]]): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.PoolingLogicBase.poolEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#poolEmbeddings(embeddings:Array[Array[Float]]):Array[Double]", "kind" : "def"}, {"label" : "getSentenceEmbedding", "tail" : "(annotations: Seq[Annotation]): SentenceEmbeddingWithType", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.BowPoolingExtractor.getSentenceEmbedding", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#getSentenceEmbedding(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.SentenceEmbeddingWithType", "kind" : "def"}, {"label" : "EmbeddingsRef", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor.EmbeddingsRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#EmbeddingsRef:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/BowPoolingExtractor.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.PoolingLogicBase", "members_trait" : [{"label" : "poolEmbeddings", "tail" : "(embeddings: Array[Array[Float]]): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.PoolingLogicBase.poolEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#poolEmbeddings(embeddings:Array[Array[Float]]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/PoolingLogicBase.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.SentenceEmbeddingsExtractor", "members_trait" : [{"label" : "getSentenceEmbedding", "tail" : "(annotations: Seq[Annotation]): SentenceEmbeddingWithType", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.SentenceEmbeddingsExtractor.getSentenceEmbedding", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#getSentenceEmbedding(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.SentenceEmbeddingWithType", "kind" : "def"}, {"label" : "EmbeddingsRef", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor.EmbeddingsRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#EmbeddingsRef:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "poolEmbeddings", "tail" : "(embeddings: Array[Array[Float]]): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.PoolingLogic.poolEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html#poolEmbeddings(embeddings:Array[Array[Float]]):Array[Double]", "kind" : "abstract def"}], "shortDescription" : "This extractor recognizes sentence annotations", "object" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html", "members_object" : [{"label" : "poolEmbeddings", "tail" : "(embeddings: Array[Array[Float]]): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.PoolingLogicBase.poolEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#poolEmbeddings(embeddings:Array[Array[Float]]):Array[Double]", "kind" : "def"}, {"label" : "getSentenceEmbedding", "tail" : "(annotations: Seq[Annotation]): SentenceEmbeddingWithType", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.SentenceEmbeddingsExtractor.getSentenceEmbedding", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#getSentenceEmbedding(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.SentenceEmbeddingWithType", "kind" : "def"}, {"label" : "EmbeddingsRef", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor.EmbeddingsRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#EmbeddingsRef:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SentenceEmbeddingsExtractor.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.SwitchableEmbeddingsExtractor", "members_trait" : [{"label" : "getSentenceEmbedding", "tail" : "(annotations: Seq[Annotation]): SentenceEmbeddingWithType", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.SwitchableEmbeddingsExtractor.getSentenceEmbedding", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#getSentenceEmbedding(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.SentenceEmbeddingWithType", "kind" : "def"}, {"label" : "EmbeddingsRef", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor.EmbeddingsRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#EmbeddingsRef:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "embeddingType", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.SwitchableEmbeddingsExtractor.embeddingType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html#embeddingType:String", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/impl\/SwitchableEmbeddingsExtractor.html", "kind" : "trait"}], "com.johnsnowlabs.nlp.annotators.ner" : [{"name" : "com.johnsnowlabs.nlp.annotators.ner.IOBTagger", "shortDescription" : "Merges token tags and NER labels from chunks in the specified format.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html", "members_class" : [{"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.ner.IOBTagger.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "setScheme", "tail" : "(f: String): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.IOBTagger.setScheme", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#setScheme(f:String):IOBTagger.this.type", "kind" : "def"}, {"label" : "scheme", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.ner.IOBTagger.scheme", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#scheme:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.ner.IOBTagger.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#inputAnnotatorTypes:Array[IOBTagger.this.AnnotatorType]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.ner.IOBTagger.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#outputAnnotatorType:IOBTagger.this.AnnotatorType", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.ner.IOBTagger#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.ner.IOBTagger#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.IOBTagger.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): IOBTagger", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): IOBTagger.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[IOBTagger]): IOBTagger", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[IOBTagger]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): IOBTagger.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): IOBTagger.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): IOBTagger.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): IOBTagger.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): IOBTagger.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): IOBTagger.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[IOBTagger]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (IOBTagger, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): IOBTagger", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/IOBTagger.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html", "members_class" : [{"label" : "getIteratorFunc", "tail" : "(dataset: Dataset[Row]): () ⇒ Iterator[Array[(TextSentenceLabels, WordpieceEmbeddingsSentence)]]", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getIteratorFunc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getIteratorFunc(dataset:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]):()=>Iterator[Array[(com.johnsnowlabs.ml.crf.TextSentenceLabels,com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence)]]", "kind" : "def"}, {"label" : "getDataSetParams", "tail" : "(dsIt: Iterator[Array[(TextSentenceLabels, WordpieceEmbeddingsSentence)]]): (Set[String], Set[Char], Int, Long)", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getDataSetParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getDataSetParams(dsIt:Iterator[Array[(com.johnsnowlabs.ml.crf.TextSentenceLabels,com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence)]]):(scala.collection.mutable.Set[String],scala.collection.mutable.Set[Char],Int,Long)", "kind" : "def"}, {"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "calculateEmbeddingsDim", "tail" : "(sentences: Seq[WordpieceEmbeddingsSentence]): Int", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.calculateEmbeddingsDim", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#calculateEmbeddingsDim(sentences:Seq[com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence]):Int", "kind" : "def"}, {"label" : "verboseLevel", "tail" : ": Level", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.verboseLevel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#verboseLevel:com.johnsnowlabs.nlp.annotators.ner.Verbose.Level", "kind" : "val"}, {"label" : "setIncludeConfidence", "tail" : "(value: Boolean): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setIncludeConfidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setIncludeConfidence(value:Boolean):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setTestDataset", "tail" : "(er: ExternalResource): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setTestDataset", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setTestDataset(er:com.johnsnowlabs.nlp.util.io.ExternalResource):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setTestDataset", "tail" : "(path: String, readAs: Format, options: Map[String, String]): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setTestDataset", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setTestDataset(path:String,readAs:com.johnsnowlabs.nlp.util.io.ReadAs.Format,options:Map[String,String]):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setEnableMemoryOptimizer", "tail" : "(value: Boolean): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setEnableMemoryOptimizer", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setEnableMemoryOptimizer(value:Boolean):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setOutputLogsPath", "tail" : "(path: String): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setOutputLogsPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setOutputLogsPath(path:String):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setEnableOutputLogs", "tail" : "(enableOutputLogs: Boolean): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setEnableOutputLogs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setEnableOutputLogs(enableOutputLogs:Boolean):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setEvaluationLogExtended", "tail" : "(evaluationLogExtended: Boolean): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setEvaluationLogExtended", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setEvaluationLogExtended(evaluationLogExtended:Boolean):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setValidationSplit", "tail" : "(validationSplit: Float): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setValidationSplit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setValidationSplit(validationSplit:Float):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setUseContrib", "tail" : "(value: Boolean): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setUseContrib", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setUseContrib(value:Boolean):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setConfigProtoBytes", "tail" : "(bytes: Array[Int]): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setConfigProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setConfigProtoBytes(bytes:Array[Int]):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setGraphFolder", "tail" : "(path: String): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setGraphFolder", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setGraphFolder(path:String):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setDropout", "tail" : "(dropout: Float): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setDropout", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setDropout(dropout:Float):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setBatchSize", "tail" : "(batch: Int): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setBatchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setBatchSize(batch:Int):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setPo", "tail" : "(po: Float): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setPo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setPo(po:Float):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "setLr", "tail" : "(lr: Float): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.setLr", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setLr(lr:Float):MedicalNerApproach.this.type", "kind" : "def"}, {"label" : "getEnableMemoryOptimizer", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getEnableMemoryOptimizer", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getEnableMemoryOptimizer:Boolean", "kind" : "def"}, {"label" : "getOutputLogsPath", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getOutputLogsPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getOutputLogsPath:String", "kind" : "def"}, {"label" : "getEnableOutputLogs", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getEnableOutputLogs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getEnableOutputLogs:Boolean", "kind" : "def"}, {"label" : "getIncludeConfidence", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getIncludeConfidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getIncludeConfidence:Boolean", "kind" : "def"}, {"label" : "getValidationSplit", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getValidationSplit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getValidationSplit:Float", "kind" : "def"}, {"label" : "getUseContrib", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getUseContrib", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getUseContrib:Boolean", "kind" : "def"}, {"label" : "getConfigProtoBytes", "tail" : "(): Option[Array[Byte]]", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getConfigProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getConfigProtoBytes:Option[Array[Byte]]", "kind" : "def"}, {"label" : "getDropout", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getDropout", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getDropout:Float", "kind" : "def"}, {"label" : "getBatchSize", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getBatchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getBatchSize:Int", "kind" : "def"}, {"label" : "getPo", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getPo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getPo:Float", "kind" : "def"}, {"label" : "getLr", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getLr", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getLr:Float", "kind" : "def"}, {"label" : "enableMemoryOptimizer", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.enableMemoryOptimizer", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#enableMemoryOptimizer:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "outputLogsPath", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.outputLogsPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#outputLogsPath:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "includeConfidence", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.includeConfidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#includeConfidence:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "testDataset", "tail" : ": ExternalResourceParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.testDataset", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#testDataset:com.johnsnowlabs.nlp.annotators.param.ExternalResourceParam", "kind" : "val"}, {"label" : "enableOutputLogs", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.enableOutputLogs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#enableOutputLogs:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "evaluationLogExtended", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.evaluationLogExtended", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#evaluationLogExtended:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "validationSplit", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.validationSplit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#validationSplit:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "useContrib", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.useContrib", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#useContrib:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "configProtoBytes", "tail" : ": IntArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.configProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#configProtoBytes:org.apache.spark.ml.param.IntArrayParam", "kind" : "val"}, {"label" : "graphFolder", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.graphFolder", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#graphFolder:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "dropout", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.dropout", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#dropout:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "batchSize", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.batchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#batchSize:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "po", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.po", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#po:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "lr", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.lr", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#lr:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#outputAnnotatorType:String", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#description:String", "kind" : "val"}, {"label" : "getLogName", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.getLogName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getLogName:String", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerApproach.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "outputLog", "tail" : "(value: ⇒ String, uuid: String, shouldLog: Boolean, outputLogsPath: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.outputLog", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#outputLog(value:=>String,uuid:String,shouldLog:Boolean,outputLogsPath:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(value: ⇒ String, minLevel: Level): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#log(value:=>String,minLevel:com.johnsnowlabs.nlp.annotators.ner.Verbose.Level):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.logger", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "getRandomSeed", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.getRandomSeed", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getRandomSeed:Int", "kind" : "def"}, {"label" : "getVerbose", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.getVerbose", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getVerbose:Int", "kind" : "def"}, {"label" : "getMaxEpochs", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.getMaxEpochs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getMaxEpochs:Int", "kind" : "def"}, {"label" : "getMinEpochs", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.getMinEpochs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getMinEpochs:Int", "kind" : "def"}, {"label" : "setRandomSeed", "tail" : "(seed: Int): MedicalNerApproach", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.setRandomSeed", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setRandomSeed(seed:Int):T", "kind" : "def"}, {"label" : "setVerbose", "tail" : "(verbose: Level): MedicalNerApproach", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.setVerbose", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setVerbose(verbose:com.johnsnowlabs.nlp.annotators.ner.Verbose.Level):T", "kind" : "def"}, {"label" : "setVerbose", "tail" : "(verbose: Int): MedicalNerApproach", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.setVerbose", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setVerbose(verbose:Int):T", "kind" : "def"}, {"label" : "setMaxEpochs", "tail" : "(epochs: Int): MedicalNerApproach", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.setMaxEpochs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setMaxEpochs(epochs:Int):T", "kind" : "def"}, {"label" : "setMinEpochs", "tail" : "(epochs: Int): MedicalNerApproach", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.setMinEpochs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setMinEpochs(epochs:Int):T", "kind" : "def"}, {"label" : "setEntities", "tail" : "(tags: Array[String]): MedicalNerApproach", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.setEntities", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setEntities(tags:Array[String]):T", "kind" : "def"}, {"label" : "setLabelColumn", "tail" : "(column: String): MedicalNerApproach", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.setLabelColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setLabelColumn(column:String):T", "kind" : "def"}, {"label" : "verbose", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.verbose", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#verbose:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "randomSeed", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.randomSeed", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#randomSeed:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "maxEpochs", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.maxEpochs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#maxEpochs:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "minEpochs", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.minEpochs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#minEpochs:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "entities", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.entities", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#entities:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "labelColumn", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerApproach.labelColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#labelColumn:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[MedicalNerModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: MedicalNerModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): MedicalNerApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[MedicalNerModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): MedicalNerModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): MedicalNerModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): MedicalNerApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): MedicalNerApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): MedicalNerApproach.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): MedicalNerApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): MedicalNerApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): MedicalNerApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "searchForSuitableGraph", "tail" : "(tags: Int, embeddingsNDims: Int, nChars: Int, localGraphPath: Option[String], loadContrib: Boolean): String", "member" : "com.johnsnowlabs.nlp.annotators.ner.dl.WithGraphResolver.searchForSuitableGraph", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#searchForSuitableGraph(tags:Int,embeddingsNDims:Int,nChars:Int,localGraphPath:Option[String],loadContrib:Boolean):String", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[MedicalNerApproach]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): MedicalNerApproach", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerApproach.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html", "members_class" : [{"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "batchAnnotate", "tail" : "(batchedAnnotations: Seq[Array[Annotation]]): Seq[Seq[Annotation]]", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.batchAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#batchAnnotate(batchedAnnotations:Seq[Array[com.johnsnowlabs.nlp.Annotation]]):Seq[Seq[com.johnsnowlabs.nlp.Annotation]]", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "setModelIfNotSet", "tail" : "(spark: SparkSession, tf: TensorflowWrapper): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.setModelIfNotSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setModelIfNotSet(spark:org.apache.spark.sql.SparkSession,tf:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper):MedicalNerModel.this.type", "kind" : "def"}, {"label" : "tag", "tail" : "(tokenized: Array[Array[WordpieceEmbeddingsSentence]]): Seq[Array[NerTaggedSentence]]", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.tag", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#tag(tokenized:Array[Array[com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence]]):Seq[Array[com.johnsnowlabs.nlp.annotators.common.Annotated.NerTaggedSentence]]", "kind" : "def"}, {"label" : "getClasses", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.getClasses", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getClasses:Array[String]", "kind" : "def"}, {"label" : "getIncludeConfidence", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.getIncludeConfidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getIncludeConfidence:Boolean", "kind" : "def"}, {"label" : "getModelIfNotSet", "tail" : "(): TensorflowMedicalNer", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.getModelIfNotSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getModelIfNotSet:com.johnsnowlabs.ml.tensorflow.TensorflowMedicalNer", "kind" : "def"}, {"label" : "getConfigProtoBytes", "tail" : "(): Option[Array[Byte]]", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.getConfigProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getConfigProtoBytes:Option[Array[Byte]]", "kind" : "def"}, {"label" : "getMinProba", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.getMinProba", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getMinProba:Float", "kind" : "def"}, {"label" : "setIncludeConfidence", "tail" : "(value: Boolean): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.setIncludeConfidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setIncludeConfidence(value:Boolean):MedicalNerModel.this.type", "kind" : "def"}, {"label" : "setConfigProtoBytes", "tail" : "(bytes: Array[Int]): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.setConfigProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setConfigProtoBytes(bytes:Array[Int]):MedicalNerModel.this.type", "kind" : "def"}, {"label" : "setDatasetParams", "tail" : "(params: DatasetEncoderParams): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.setDatasetParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setDatasetParams(params:com.johnsnowlabs.ml.tensorflow.DatasetEncoderParams):MedicalNerModel.this.type", "kind" : "def"}, {"label" : "setMinProbability", "tail" : "(minProba: Float): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.setMinProbability", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setMinProbability(minProba:Float):MedicalNerModel.this.type", "kind" : "def"}, {"label" : "classes", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.classes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#classes:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "includeConfidence", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.includeConfidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#includeConfidence:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "configProtoBytes", "tail" : ": IntArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.configProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#configProtoBytes:org.apache.spark.ml.param.IntArrayParam", "kind" : "val"}, {"label" : "datasetParams", "tail" : ": StructFeature[DatasetEncoderParams]", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.datasetParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#datasetParams:com.johnsnowlabs.nlp.serialization.StructFeature[com.johnsnowlabs.ml.tensorflow.DatasetEncoderParams]", "kind" : "val"}, {"label" : "minProba", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.minProba", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#minProba:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#outputAnnotatorType:String", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#uid:String", "kind" : "val"}, {"label" : "validateStorageRef", "tail" : "(dataset: Dataset[_], inputCols: Array[String], annotatorType: String): Unit", "member" : "com.johnsnowlabs.storage.HasStorageRef.validateStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#validateStorageRef(dataset:org.apache.spark.sql.Dataset[_],inputCols:Array[String],annotatorType:String):Unit", "kind" : "def"}, {"label" : "getStorageRef", "tail" : "(): String", "member" : "com.johnsnowlabs.storage.HasStorageRef.getStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getStorageRef:String", "kind" : "def"}, {"label" : "setStorageRef", "tail" : "(value: String): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.storage.HasStorageRef.setStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setStorageRef(value:String):HasStorageRef.this.type", "kind" : "def"}, {"label" : "createDatabaseConnection", "tail" : "(database: Name): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasStorageRef.createDatabaseConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#createDatabaseConnection(database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "storageRef", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.storage.HasStorageRef.storageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#storageRef:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "writeTensorflowHub", "tail" : "(path: String, tfPath: String, spark: SparkSession, suffix: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#writeTensorflowHub(path:String,tfPath:String,spark:org.apache.spark.sql.SparkSession,suffix:String):Unit", "kind" : "def"}, {"label" : "writeTensorflowModelV2", "tail" : "(path: String, spark: SparkSession, tensorflow: TensorflowWrapper, suffix: String, filename: String, configProtoBytes: Option[Array[Byte]]): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowModelV2", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#writeTensorflowModelV2(path:String,spark:org.apache.spark.sql.SparkSession,tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,suffix:String,filename:String,configProtoBytes:Option[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "writeTensorflowModel", "tail" : "(path: String, spark: SparkSession, tensorflow: TensorflowWrapper, suffix: String, filename: String, configProtoBytes: Option[Array[Byte]]): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#writeTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,suffix:String,filename:String,configProtoBytes:Option[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "batchProcess", "tail" : "(rows: Iterator[_]): Iterator[Row]", "member" : "com.johnsnowlabs.nlp.HasBatchedAnnotate.batchProcess", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#batchProcess(rows:Iterator[_]):Iterator[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "getBatchSize", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.HasBatchedAnnotate.getBatchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getBatchSize:Int", "kind" : "def"}, {"label" : "setBatchSize", "tail" : "(size: Int): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.HasBatchedAnnotate.setBatchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setBatchSize(size:Int):com.johnsnowlabs.nlp.HasBatchedAnnotate.<refinement>.type", "kind" : "def"}, {"label" : "batchSize", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.HasBatchedAnnotate.batchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#batchSize:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): MedicalNerModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[MedicalNerModel]): MedicalNerModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[MedicalNerModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): MedicalNerModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): MedicalNerModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): MedicalNerModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): MedicalNerModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): MedicalNerModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): MedicalNerModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "loadSavedModel", "tail" : "(nerDLModelPath: String, amendedTfPath: String, spark: SparkSession): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel.loadSavedModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#loadSavedModel(nerDLModelPath:String,amendedTfPath:String,spark:org.apache.spark.sql.SparkSession):com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel", "kind" : "def"}, {"label" : "readNerGraph", "tail" : "(instance: MedicalNerModel, path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadsMedicalNerGraph.readNerGraph", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#readNerGraph(instance:com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel,path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "tfFile", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadsMedicalNerGraph.tfFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#tfFile:String", "kind" : "val"}, {"label" : "readTensorflowHub", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String]): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#readTensorflowHub(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String]):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowChkPoints", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowChkPoints", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#readTensorflowChkPoints(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowWithSPModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean, loadSP: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowWithSPModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#readTensorflowWithSPModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean,loadSP:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#readTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#pretrained():com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel", "kind" : "def"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultModelName", "tail" : ": Some[String]", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#defaultModelName:Some[String]", "kind" : "val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[MedicalNerModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (MedicalNerModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): MedicalNerModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/MedicalNerModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.ner.NamedEntityConfidence", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.ner.NamedEntityConfidence#<init>", "error" : "unsupported entity"}, {"label" : "confidence", "tail" : ": Option[Float]", "member" : "com.johnsnowlabs.nlp.annotators.ner.NamedEntityConfidence.confidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#confidence:Option[Float]", "kind" : "val"}, {"label" : "sentenceId", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.NamedEntityConfidence.sentenceId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#sentenceId:String", "kind" : "val"}, {"label" : "text", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.NamedEntityConfidence.text", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#text:String", "kind" : "val"}, {"label" : "entity", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.NamedEntityConfidence.entity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#entity:String", "kind" : "val"}, {"label" : "end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.ner.NamedEntityConfidence.end", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#end:Int", "kind" : "val"}, {"label" : "start", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.ner.NamedEntityConfidence.start", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#start:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NamedEntityConfidence.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.ner.NerChunker", "shortDescription" : "Extracts phrases that fits into a known pattern using the NER tags.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html", "members_class" : [{"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerChunker.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.ner.NerChunker#<init>", "error" : "unsupported entity"}, {"label" : "getRegexParsers", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerChunker.getRegexParsers", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#getRegexParsers:Array[String]", "kind" : "def"}, {"label" : "addRegexParser", "tail" : "(value: String): NerChunker", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerChunker.addRegexParser", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#addRegexParser(value:String):com.johnsnowlabs.nlp.annotators.ner.NerChunker", "kind" : "def"}, {"label" : "setRegexParsers", "tail" : "(value: Array[String]): NerChunker", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerChunker.setRegexParsers", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#setRegexParsers(value:Array[String]):com.johnsnowlabs.nlp.annotators.ner.NerChunker", "kind" : "def"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerChunker.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#inputAnnotatorTypes:Array[NerChunker.this.AnnotatorType]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerChunker.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#outputAnnotatorType:NerChunker.this.AnnotatorType", "kind" : "val"}, {"label" : "regexParsers", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerChunker.regexParsers", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#regexParsers:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.ner.NerChunker#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerChunker.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): NerChunker.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): NerChunker", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): NerChunker.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): NerChunker.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): NerChunker.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): NerChunker.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): NerChunker.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): NerChunker.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): NerChunker.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): NerChunker.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): NerChunker.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): NerChunker.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): NerChunker.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[NerChunker]): NerChunker", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[NerChunker]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): NerChunker.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): NerChunker.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): NerChunker.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): NerChunker.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): NerChunker.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): NerChunker.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[Chunker]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): Chunker", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerChunker.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal", "shortDescription" : "Converts a IOB or IOB2 representation of NER to a user-friendly one,by associating the tokens of recognized entities and their label.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html", "members_class" : [{"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "hasThreshold", "tail" : ": Boolean", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.hasThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#hasThreshold:Boolean", "kind" : "lazy val"}, {"label" : "transformReplaceDict", "tail" : "(replaceDict: Array[(String, String)]): Map[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.transformReplaceDict", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#transformReplaceDict(replaceDict:Array[(String,String)]):scala.collection.immutable.Map[String,String]", "kind" : "def"}, {"label" : "setReplaceDictResource", "tail" : "(path: String, readAs: Format, options: Map[String, String]): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.setReplaceDictResource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setReplaceDictResource(path:String,readAs:com.johnsnowlabs.nlp.util.io.ReadAs.Format,options:scala.collection.immutable.Map[String,String]):NerConverterInternal.this.type", "kind" : "def"}, {"label" : "setReplaceDictResource", "tail" : "(path: ExternalResource): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.setReplaceDictResource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setReplaceDictResource(path:com.johnsnowlabs.nlp.util.io.ExternalResource):NerConverterInternal.this.type", "kind" : "def"}, {"label" : "replaceDictResource", "tail" : ": ExternalResourceParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.replaceDictResource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#replaceDictResource:com.johnsnowlabs.nlp.annotators.param.ExternalResourceParam", "kind" : "val"}, {"label" : "setThreshold", "tail" : "(value: Float): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.setThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setThreshold(value:Float):NerConverterInternal.this.type", "kind" : "def"}, {"label" : "getThreshold", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.getThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#getThreshold:Float", "kind" : "def"}, {"label" : "threshold", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.threshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#threshold:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "setGreedyMode", "tail" : "(value: Boolean): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.setGreedyMode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setGreedyMode(value:Boolean):NerConverterInternal.this.type", "kind" : "def"}, {"label" : "greedyMode", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.greedyMode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#greedyMode:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setPreservePosition", "tail" : "(value: Boolean): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.setPreservePosition", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setPreservePosition(value:Boolean):NerConverterInternal.this.type", "kind" : "def"}, {"label" : "preservePosition", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.preservePosition", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#preservePosition:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setWhiteList", "tail" : "(list: String*): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.setWhiteList", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setWhiteList(list:String*):NerConverterInternal.this.type", "kind" : "def"}, {"label" : "whiteList", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.whiteList", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#whiteList:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#outputAnnotatorType:NerConverterInternal.this.AnnotatorType", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerConverterInternal.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): NerConverterInternal", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): NerConverterInternal.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[NerConverterInternal]): NerConverterInternal", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[NerConverterInternal]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): NerConverterInternal.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): NerConverterInternal.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): NerConverterInternal.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): NerConverterInternal.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): NerConverterInternal.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): NerConverterInternal.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[NerConverterInternal]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (NerConverterInternal, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): NerConverterInternal", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerConverterInternal.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.ner.NerTaggedInternal", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html", "members_object" : [{"label" : "unpack", "tail" : "(annotations: Seq[Annotation]): Seq[TaggedSentence]", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerTaggedInternal.unpack", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#unpack(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.annotators.common.TaggedSentence]", "kind" : "def"}, {"label" : "toFloatOpt", "tail" : "(o: Option[String]): Option[Float]", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerTaggedInternal.toFloatOpt", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#toFloatOpt(o:Option[String]):Option[Float]", "kind" : "def"}, {"label" : "emptyTag", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerTaggedInternal.emptyTag", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#emptyTag:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTaggedInternal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.ner.NerTagsEncodingInternal", "shortDescription" : "Works with different NER representations as tagsSupports: IOB and IOB2 https:\/\/en.wikipedia.org\/wiki\/Inside%E2%80%93outside%E2%80%93beginning_(tagging)", "object" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html", "members_object" : [{"label" : "fromIOB", "tail" : "(sentence: NerTaggedSentence, doc: Annotation, sentenceIndex: Int, preservePosition: Boolean, greedyMode: Boolean): Seq[NamedEntityConfidence]", "member" : "com.johnsnowlabs.nlp.annotators.ner.NerTagsEncodingInternal.fromIOB", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#fromIOB(sentence:com.johnsnowlabs.nlp.annotators.common.Annotated.NerTaggedSentence,doc:com.johnsnowlabs.nlp.Annotation,sentenceIndex:Int,preservePosition:Boolean,greedyMode:Boolean):Seq[com.johnsnowlabs.nlp.annotators.ner.NamedEntityConfidence]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/NerTagsEncodingInternal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer", "members_trait" : [{"label" : "pretrained", "tail" : "(name: String, lang: String): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#pretrained():com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): MedicalNerModel", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel", "kind" : "def"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultModelName", "tail" : ": Some[String]", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadablePretrainedMedicalNer.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#defaultModelName:Some[String]", "kind" : "val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[MedicalNerModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (MedicalNerModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): MedicalNerModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadablePretrainedMedicalNer.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.ner.ReadsMedicalNerGraph", "members_trait" : [{"label" : "readNerGraph", "tail" : "(instance: MedicalNerModel, path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadsMedicalNerGraph.readNerGraph", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#readNerGraph(instance:com.johnsnowlabs.nlp.annotators.ner.MedicalNerModel,path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "tfFile", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.ner.ReadsMedicalNerGraph.tfFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#tfFile:String", "kind" : "val"}, {"label" : "readTensorflowHub", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String]): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#readTensorflowHub(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String]):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowChkPoints", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowChkPoints", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#readTensorflowChkPoints(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowWithSPModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean, loadSP: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowWithSPModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#readTensorflowWithSPModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean,loadSP:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#readTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[MedicalNerModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (MedicalNerModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): MedicalNerModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/ner\/ReadsMedicalNerGraph.html", "kind" : "trait"}], "com.johnsnowlabs.nlp.annotators.deid" : [{"name" : "com.johnsnowlabs.nlp.annotators.deid.DefaultRegex", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html", "members_object" : [{"label" : "defaultRegex", "tail" : ": Array[(String, String)]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DefaultRegex.defaultRegex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#defaultRegex:Array[(String,String)]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DefaultRegex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification", "shortDescription" : "Contains all the methods for training a DeIdentificationModel model.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html", "members_class" : [{"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel", "kind" : "def"}, {"label" : "transformRegexPatternsDictionary", "tail" : "(regexPatternsDictionary: Array[(String, String)]): Map[String, Array[String]]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.transformRegexPatternsDictionary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#transformRegexPatternsDictionary(regexPatternsDictionary:Array[(String,String)]):Map[String,Array[String]]", "kind" : "def"}, {"label" : "setRegexPatternsDictionary", "tail" : "(path: String, readAs: Format, options: Map[String, String]): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.setRegexPatternsDictionary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setRegexPatternsDictionary(path:String,readAs:com.johnsnowlabs.nlp.util.io.ReadAs.Format,options:Map[String,String]):DeIdentification.this.type", "kind" : "def"}, {"label" : "setRegexPatternsDictionary", "tail" : "(path: ExternalResource): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.setRegexPatternsDictionary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setRegexPatternsDictionary(path:com.johnsnowlabs.nlp.util.io.ExternalResource):DeIdentification.this.type", "kind" : "def"}, {"label" : "regexPatternsDictionary", "tail" : ": ExternalResourceParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.regexPatternsDictionary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#regexPatternsDictionary:com.johnsnowlabs.nlp.annotators.param.ExternalResourceParam", "kind" : "val"}, {"label" : "setRefSep", "tail" : "(f: String): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.setRefSep", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setRefSep(f:String):DeIdentification.this.type", "kind" : "def"}, {"label" : "refSep", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.refSep", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#refSep:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setRefFileFormat", "tail" : "(f: String): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.setRefFileFormat", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setRefFileFormat(f:String):DeIdentification.this.type", "kind" : "def"}, {"label" : "refFileFormat", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.refFileFormat", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#refFileFormat:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setObfuscateRefFile", "tail" : "(f: String): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.setObfuscateRefFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setObfuscateRefFile(f:String):DeIdentification.this.type", "kind" : "def"}, {"label" : "obfuscateRefFile", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.obfuscateRefFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#obfuscateRefFile:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#inputAnnotatorTypes:Array[DeIdentification.this.AnnotatorType]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#outputAnnotatorType:DeIdentification.this.AnnotatorType", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#description:String", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentification.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#uid:String", "kind" : "val"}, {"label" : "setMappingsColumn", "tail" : "(s: String): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setMappingsColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setMappingsColumn(s:String):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "mappingsColumn", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.mappingsColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#mappingsColumn:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setIsRandomDateDisplacement", "tail" : "(s: Boolean): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setIsRandomDateDisplacement", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setIsRandomDateDisplacement(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "isRandomDateDisplacement", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.isRandomDateDisplacement", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#isRandomDateDisplacement:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setIgnoreRegex", "tail" : "(s: Boolean): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setIgnoreRegex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setIgnoreRegex(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "ignoreRegex", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.ignoreRegex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#ignoreRegex:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setSeed", "tail" : "(s: Int): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setSeed", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setSeed(s:Int):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "seed", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.seed", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#seed:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "setRegexOverride", "tail" : "(s: Boolean): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setRegexOverride", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setRegexOverride(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "regexOverride", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.regexOverride", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#regexOverride:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setObfuscateRefSource", "tail" : "(s: String): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setObfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setObfuscateRefSource(s:String):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "obfuscateRefSource", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.obfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#obfuscateRefSource:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setSameEntityThreshold", "tail" : "(s: Double): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setSameEntityThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setSameEntityThreshold(s:Double):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "sameEntityThreshold", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.sameEntityThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#sameEntityThreshold:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "setConsistentObfuscation", "tail" : "(s: Boolean): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setConsistentObfuscation", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setConsistentObfuscation(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "consistentObfuscation", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.consistentObfuscation", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#consistentObfuscation:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setDateFormats", "tail" : "(s: Array[String]): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setDateFormats", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setDateFormats(s:Array[String]):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "dateFormats", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.dateFormats", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#dateFormats:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "setMinYear", "tail" : "(s: Int): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setMinYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setMinYear(s:Int):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "minYear", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.minYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#minYear:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "setDateToYear", "tail" : "(s: Boolean): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setDateToYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setDateToYear(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "dateToYear", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.dateToYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#dateToYear:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setDays", "tail" : "(k: Int): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setDays", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setDays(k:Int):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "days", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.days", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#days:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "setObfuscateDate", "tail" : "(s: Boolean): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setObfuscateDate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setObfuscateDate(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "obfuscateDate", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.obfuscateDate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#obfuscateDate:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setDateTag", "tail" : "(s: String): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setDateTag", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setDateTag(s:String):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "dateTag", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.dateTag", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#dateTag:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setMode", "tail" : "(m: String): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setMode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setMode(m:String):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "mode", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.mode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#mode:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[DeIdentificationModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: DeIdentificationModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): DeIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[DeIdentificationModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DeIdentificationModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DeIdentificationModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DeIdentification.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DeIdentification.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DeIdentification.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DeIdentification.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DeIdentification.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DeIdentification.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[DeIdentification]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): DeIdentification", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentification.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel", "shortDescription" : "Contains all the parameters to transform a dataset with three Input Annotationsof types DOCUMENT, TOKEN and CHUNK, into its DeIdentified version of by eithermasking or obfuscating the given CHUNKS.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html", "members_class" : [{"label" : "getFakersEntity", "tail" : "(entity: String): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.getFakersEntity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getFakersEntity(entity:String):Seq[String]", "kind" : "def"}, {"label" : "StringReplacement", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.StringReplacement", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#StringReplacementextendsAnyRef", "kind" : "implicit class"}, {"label" : "udfDocuments", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.udfDocuments", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#udfDocuments:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "udfProtectedEntities", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.udfProtectedEntities", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#udfProtectedEntities:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "wrapColumn", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.wrapColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#wrapColumn(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "displaceMappings", "tail" : "(annotation: Annotation, offset: Int): Annotation", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.displaceMappings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#displaceMappings(annotation:com.johnsnowlabs.nlp.Annotation,offset:Int):com.johnsnowlabs.nlp.Annotation", "kind" : "def"}, {"label" : "createAnonymizeAnnotation", "tail" : "(anonymizeSentence: Sentence, offset: Int, idx: Int): Annotation", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.createAnonymizeAnnotation", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#createAnonymizeAnnotation(anonymizeSentence:com.johnsnowlabs.nlp.annotators.common.Sentence,offset:Int,idx:Int):com.johnsnowlabs.nlp.Annotation", "kind" : "def"}, {"label" : "replaceRegExFlavors", "tail" : "(word: String): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.replaceRegExFlavors", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#replaceRegExFlavors(word:String):String", "kind" : "def"}, {"label" : "getAnonymizeSentence", "tail" : "(sentence: String, protectedEntities: Seq[Annotation], dateTag: String, days: Int, dateToYear: Boolean, minYear: Int): (String, Seq[Annotation])", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.getAnonymizeSentence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getAnonymizeSentence(sentence:String,protectedEntities:Seq[com.johnsnowlabs.nlp.Annotation],dateTag:String,days:Int,dateToYear:Boolean,minYear:Int):(String,Seq[com.johnsnowlabs.nlp.Annotation])", "kind" : "def"}, {"label" : "handleEntitiesDifferences", "tail" : "(AEntities: Seq[Annotation], BEntities: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.handleEntitiesDifferences", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#handleEntitiesDifferences(AEntities:Seq[com.johnsnowlabs.nlp.Annotation],BEntities:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "mergeEntities", "tail" : "(nerEntities: Seq[Annotation], regexEntities: Seq[Annotation], regexOverride: Boolean): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.mergeEntities", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#mergeEntities(nerEntities:Seq[com.johnsnowlabs.nlp.Annotation],regexEntities:Seq[com.johnsnowlabs.nlp.Annotation],regexOverride:Boolean):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "duplicateClean", "tail" : "(entities: Seq[Annotation], entitiesToCompare: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.duplicateClean", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#duplicateClean(entities:Seq[com.johnsnowlabs.nlp.Annotation],entitiesToCompare:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "chunkSameEntity", "tail" : "(chunkA: Annotation, chunkB: Annotation): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.chunkSameEntity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#chunkSameEntity(chunkA:com.johnsnowlabs.nlp.Annotation,chunkB:com.johnsnowlabs.nlp.Annotation):Boolean", "kind" : "def"}, {"label" : "chunkFlexibleEquals", "tail" : "(chunkA: Annotation, chunkB: Annotation): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.chunkFlexibleEquals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#chunkFlexibleEquals(chunkA:com.johnsnowlabs.nlp.Annotation,chunkB:com.johnsnowlabs.nlp.Annotation):Boolean", "kind" : "def"}, {"label" : "isRegexMatch", "tail" : "(token: String, regexPatterns: Array[String]): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.isRegexMatch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#isRegexMatch(token:String,regexPatterns:Array[String]):Boolean", "kind" : "def"}, {"label" : "getRegexEntities", "tail" : "(tokensSentence: Seq[IndexedToken], idx: Int): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.getRegexEntities", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getRegexEntities(tokensSentence:Seq[com.johnsnowlabs.nlp.annotators.common.IndexedToken],idx:Int):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "getNerEntitiesBySentence", "tail" : "(annotations: Seq[Annotation], sentenceCount: Int): Seq[Seq[Annotation]]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.getNerEntitiesBySentence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getNerEntitiesBySentence(annotations:Seq[com.johnsnowlabs.nlp.Annotation],sentenceCount:Int):Seq[Seq[com.johnsnowlabs.nlp.Annotation]]", "kind" : "def"}, {"label" : "getTokensBySentence", "tail" : "(annotations: Seq[Annotation]): Seq[Seq[IndexedToken]]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.getTokensBySentence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getTokensBySentence(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[Seq[com.johnsnowlabs.nlp.annotators.common.IndexedToken]]", "kind" : "def"}, {"label" : "getSentences", "tail" : "(annotations: Seq[Annotation]): Seq[Sentence]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.getSentences", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getSentences(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.annotators.common.Sentence]", "kind" : "def"}, {"label" : "getSeed", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.getSeed", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getSeed():Int", "kind" : "def"}, {"label" : "getAllTerms", "tail" : "(): Map[String, List[String]]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.getAllTerms", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getAllTerms:Map[String,List[String]]", "kind" : "def"}, {"label" : "setAllTerms", "tail" : "(value: Map[String, List[String]]): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.setAllTerms", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setAllTerms(value:Map[String,List[String]]):DeIdentificationModel.this.type", "kind" : "def"}, {"label" : "allTerms", "tail" : ": MapFeature[String, List[String]]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.allTerms", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#allTerms:com.johnsnowlabs.nlp.serialization.MapFeature[String,List[String]]", "kind" : "val"}, {"label" : "getRegexPatternsDictionary", "tail" : "(): Map[String, Array[String]]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.getRegexPatternsDictionary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getRegexPatternsDictionary:Map[String,Array[String]]", "kind" : "def"}, {"label" : "setRegexPatternsDictionary", "tail" : "(value: Map[String, Array[String]]): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.setRegexPatternsDictionary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setRegexPatternsDictionary(value:Map[String,Array[String]]):DeIdentificationModel.this.type", "kind" : "def"}, {"label" : "regexPatternsDictionary", "tail" : ": MapFeature[String, Array[String]]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.regexPatternsDictionary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#regexPatternsDictionary:com.johnsnowlabs.nlp.serialization.MapFeature[String,Array[String]]", "kind" : "val"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#inputAnnotatorTypes:Array[DeIdentificationModel.this.AnnotatorType]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#outputAnnotatorType:DeIdentificationModel.this.AnnotatorType", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "setMappingsColumn", "tail" : "(s: String): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setMappingsColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setMappingsColumn(s:String):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "mappingsColumn", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.mappingsColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#mappingsColumn:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setIsRandomDateDisplacement", "tail" : "(s: Boolean): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setIsRandomDateDisplacement", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setIsRandomDateDisplacement(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "isRandomDateDisplacement", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.isRandomDateDisplacement", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#isRandomDateDisplacement:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setIgnoreRegex", "tail" : "(s: Boolean): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setIgnoreRegex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setIgnoreRegex(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "ignoreRegex", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.ignoreRegex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#ignoreRegex:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setSeed", "tail" : "(s: Int): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setSeed", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setSeed(s:Int):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "seed", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.seed", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#seed:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "setRegexOverride", "tail" : "(s: Boolean): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setRegexOverride", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setRegexOverride(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "regexOverride", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.regexOverride", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#regexOverride:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setObfuscateRefSource", "tail" : "(s: String): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setObfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setObfuscateRefSource(s:String):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "obfuscateRefSource", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.obfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#obfuscateRefSource:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setSameEntityThreshold", "tail" : "(s: Double): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setSameEntityThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setSameEntityThreshold(s:Double):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "sameEntityThreshold", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.sameEntityThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#sameEntityThreshold:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "setConsistentObfuscation", "tail" : "(s: Boolean): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setConsistentObfuscation", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setConsistentObfuscation(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "consistentObfuscation", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.consistentObfuscation", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#consistentObfuscation:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setDateFormats", "tail" : "(s: Array[String]): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setDateFormats", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setDateFormats(s:Array[String]):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "dateFormats", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.dateFormats", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#dateFormats:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "setMinYear", "tail" : "(s: Int): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setMinYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setMinYear(s:Int):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "minYear", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.minYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#minYear:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "setDateToYear", "tail" : "(s: Boolean): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setDateToYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setDateToYear(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "dateToYear", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.dateToYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#dateToYear:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setDays", "tail" : "(k: Int): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setDays", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setDays(k:Int):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "days", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.days", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#days:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "setObfuscateDate", "tail" : "(s: Boolean): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setObfuscateDate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setObfuscateDate(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "obfuscateDate", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.obfuscateDate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#obfuscateDate:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setDateTag", "tail" : "(s: String): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setDateTag", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setDateTag(s:String):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "dateTag", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.dateTag", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#dateTag:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setMode", "tail" : "(m: String): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setMode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setMode(m:String):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "mode", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.mode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#mode:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): DeIdentificationModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[DeIdentificationModel]): DeIdentificationModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[DeIdentificationModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DeIdentificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DeIdentificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DeIdentificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DeIdentificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DeIdentificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DeIdentificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReadablePretrainedDeId.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReadablePretrainedDeId.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReadablePretrainedDeId.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReadablePretrainedDeId.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#pretrained():com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": Option[Nothing]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReadablePretrainedDeId.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#defaultModelName:Option[Nothing]", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[DeIdentificationModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (DeIdentificationModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): DeIdentificationModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams", "members_trait" : [{"label" : "setMappingsColumn", "tail" : "(s: String): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setMappingsColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setMappingsColumn(s:String):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "mappingsColumn", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.mappingsColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#mappingsColumn:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setIsRandomDateDisplacement", "tail" : "(s: Boolean): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setIsRandomDateDisplacement", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setIsRandomDateDisplacement(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "isRandomDateDisplacement", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.isRandomDateDisplacement", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#isRandomDateDisplacement:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setIgnoreRegex", "tail" : "(s: Boolean): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setIgnoreRegex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setIgnoreRegex(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "ignoreRegex", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.ignoreRegex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#ignoreRegex:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setSeed", "tail" : "(s: Int): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setSeed", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setSeed(s:Int):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "seed", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.seed", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#seed:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "setRegexOverride", "tail" : "(s: Boolean): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setRegexOverride", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setRegexOverride(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "regexOverride", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.regexOverride", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#regexOverride:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setObfuscateRefSource", "tail" : "(s: String): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setObfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setObfuscateRefSource(s:String):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "obfuscateRefSource", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.obfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#obfuscateRefSource:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setSameEntityThreshold", "tail" : "(s: Double): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setSameEntityThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setSameEntityThreshold(s:Double):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "sameEntityThreshold", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.sameEntityThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#sameEntityThreshold:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "setConsistentObfuscation", "tail" : "(s: Boolean): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setConsistentObfuscation", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setConsistentObfuscation(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "consistentObfuscation", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.consistentObfuscation", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#consistentObfuscation:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setDateFormats", "tail" : "(s: Array[String]): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setDateFormats", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setDateFormats(s:Array[String]):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "dateFormats", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.dateFormats", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#dateFormats:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "setMinYear", "tail" : "(s: Int): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setMinYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setMinYear(s:Int):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "minYear", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.minYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#minYear:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "setDateToYear", "tail" : "(s: Boolean): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setDateToYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setDateToYear(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "dateToYear", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.dateToYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#dateToYear:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setDays", "tail" : "(k: Int): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setDays", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setDays(k:Int):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "days", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.days", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#days:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "setObfuscateDate", "tail" : "(s: Boolean): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setObfuscateDate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setObfuscateDate(s:Boolean):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "obfuscateDate", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.obfuscateDate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#obfuscateDate:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setDateTag", "tail" : "(s: String): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setDateTag", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setDateTag(s:String):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "dateTag", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.dateTag", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#dateTag:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setMode", "tail" : "(m: String): DeIdentificationParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.setMode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setMode(m:String):DeIdentificationParams.this.type", "kind" : "def"}, {"label" : "mode", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.DeIdentificationParams.mode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#mode:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DeIdentificationParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DeIdentificationParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DeIdentificationParams.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DeIdentificationParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DeIdentificationParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DeIdentificationParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Params", "member" : "org.apache.spark.ml.param.Params.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.Params", "kind" : "abstract def"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.util.Identifiable.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html#uid:String", "kind" : "abstract val"}], "shortDescription" : "A trait that contains all the params that are common between DeIdentificationModel and DeIdentification annotators", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/DeIdentificationParams.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.MySentnece", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.deid.MySentnece#<init>", "error" : "unsupported entity"}, {"label" : "originalIndex", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.deid.MySentnece.originalIndex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#originalIndex:Int", "kind" : "val"}, {"label" : "index", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.deid.MySentnece.index", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#index:Int", "kind" : "val"}, {"label" : "end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.deid.MySentnece.end", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#end:Int", "kind" : "val"}, {"label" : "start", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.deid.MySentnece.start", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#start:Int", "kind" : "val"}, {"label" : "content", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.MySentnece.content", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#content:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/MySentnece.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.Obfuscator", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html", "members_object" : [{"label" : "getDefaultRandomDate", "tail" : "(hash: Long): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.Obfuscator.getDefaultRandomDate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#getDefaultRandomDate(hash:Long):String", "kind" : "def"}, {"label" : "displaceDate", "tail" : "(oriStr: String, days: Int, dateFormats: Array[String]): Option[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.Obfuscator.displaceDate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#displaceDate(oriStr:String,days:Int,dateFormats:Array[String]):Option[String]", "kind" : "def"}, {"label" : "dateToYear", "tail" : "(oriStr: String, minYear: Int, dateFormats: Array[String]): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.Obfuscator.dateToYear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#dateToYear(oriStr:String,minYear:Int,dateFormats:Array[String]):String", "kind" : "def"}, {"label" : "obfuscate", "tail" : "(p_ori: String, mask: String, replacements: List[String]): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.Obfuscator.obfuscate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#obfuscate(p_ori:String,mask:String,replacements:List[String]):String", "kind" : "def"}, {"label" : "randomTerm", "tail" : "(terms: List[String]): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.Obfuscator.randomTerm", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#randomTerm(terms:List[String]):String", "kind" : "def"}, {"label" : "allTerms", "tail" : "(filename: String, format: String, sep: String): Map[String, List[String]]", "member" : "com.johnsnowlabs.nlp.annotators.deid.Obfuscator.allTerms", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#allTerms(filename:String,format:String,sep:String):Map[String,List[String]]", "kind" : "def"}, {"label" : "defaultUS", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.Obfuscator.defaultUS", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#defaultUS:String", "kind" : "val"}, {"label" : "dateFormatsDefault", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.Obfuscator.dateFormatsDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#dateFormatsDefault:Array[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/Obfuscator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html", "members_class" : [{"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): ObfuscatorAnnotatorModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach#<init>", "error" : "unsupported entity"}, {"label" : "setRefSep", "tail" : "(f: String): ObfuscatorAnnotatorApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach.setRefSep", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#setRefSep(f:String):ObfuscatorAnnotatorApproach.this.type", "kind" : "def"}, {"label" : "refSep", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach.refSep", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#refSep:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setRefFileFormat", "tail" : "(f: String): ObfuscatorAnnotatorApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach.setRefFileFormat", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#setRefFileFormat(f:String):ObfuscatorAnnotatorApproach.this.type", "kind" : "def"}, {"label" : "refFileFormat", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach.refFileFormat", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#refFileFormat:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setObfuscateRefFile", "tail" : "(f: String): ObfuscatorAnnotatorApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach.setObfuscateRefFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#setObfuscateRefFile(f:String):ObfuscatorAnnotatorApproach.this.type", "kind" : "def"}, {"label" : "obfuscateRefFile", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach.obfuscateRefFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#obfuscateRefFile:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#description:String", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#inputAnnotatorTypes:Array[ObfuscatorAnnotatorApproach.this.AnnotatorType]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#outputAnnotatorType:ObfuscatorAnnotatorApproach.this.AnnotatorType", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorApproach.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#uid:String", "kind" : "val"}, {"label" : "setObfuscateRefSource", "tail" : "(s: String): ObfuscatorAnnotatorApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams.setObfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#setObfuscateRefSource(s:String):ObfuscatorParams.this.type", "kind" : "def"}, {"label" : "obfuscateRefSource", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams.obfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#obfuscateRefSource:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setEntity", "tail" : "(e: String): ObfuscatorAnnotatorApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams.setEntity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#setEntity(e:String):ObfuscatorParams.this.type", "kind" : "def"}, {"label" : "entity", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams.entity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#entity:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[ObfuscatorAnnotatorModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): ObfuscatorAnnotatorModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): ObfuscatorAnnotatorModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: ObfuscatorAnnotatorModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): ObfuscatorAnnotatorApproach.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): ObfuscatorAnnotatorApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): ObfuscatorAnnotatorApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): ObfuscatorAnnotatorApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[ObfuscatorAnnotatorModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): ObfuscatorAnnotatorModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): ObfuscatorAnnotatorModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ObfuscatorAnnotatorApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ObfuscatorAnnotatorApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ObfuscatorAnnotatorApproach.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ObfuscatorAnnotatorApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ObfuscatorAnnotatorApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ObfuscatorAnnotatorApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[ObfuscatorAnnotatorApproach]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): ObfuscatorAnnotatorApproach", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorApproach.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel", "shortDescription" : "", "members_class" : [{"label" : "getFakerEntity", "tail" : "(entity: String): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel.getFakerEntity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#getFakerEntity(entity:String):Seq[String]", "kind" : "def"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "getAllTerms", "tail" : "(): Set[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel.getAllTerms", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#getAllTerms:Set[String]", "kind" : "def"}, {"label" : "setAllTerms", "tail" : "(value: Set[String]): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel.setAllTerms", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setAllTerms(value:Set[String]):ObfuscatorAnnotatorModel.this.type", "kind" : "def"}, {"label" : "allTerms", "tail" : ": SetFeature[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel.allTerms", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#allTerms:com.johnsnowlabs.nlp.serialization.SetFeature[String]", "kind" : "val"}, {"label" : "random", "tail" : ": Random", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel.random", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#random:scala.util.Random", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#inputAnnotatorTypes:Array[ObfuscatorAnnotatorModel.this.AnnotatorType]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#outputAnnotatorType:ObfuscatorAnnotatorModel.this.AnnotatorType", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorAnnotatorModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "setObfuscateRefSource", "tail" : "(s: String): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams.setObfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setObfuscateRefSource(s:String):ObfuscatorParams.this.type", "kind" : "def"}, {"label" : "obfuscateRefSource", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams.obfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#obfuscateRefSource:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setEntity", "tail" : "(e: String): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams.setEntity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setEntity(e:String):ObfuscatorParams.this.type", "kind" : "def"}, {"label" : "entity", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams.entity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#entity:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): ObfuscatorAnnotatorModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): ObfuscatorAnnotatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[ObfuscatorAnnotatorModel]): ObfuscatorAnnotatorModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[ObfuscatorAnnotatorModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ObfuscatorAnnotatorModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ObfuscatorAnnotatorModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ObfuscatorAnnotatorModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ObfuscatorAnnotatorModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ObfuscatorAnnotatorModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ObfuscatorAnnotatorModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorAnnotatorModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams", "members_trait" : [{"label" : "setObfuscateRefSource", "tail" : "(s: String): ObfuscatorParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams.setObfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#setObfuscateRefSource(s:String):ObfuscatorParams.this.type", "kind" : "def"}, {"label" : "obfuscateRefSource", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams.obfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#obfuscateRefSource:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setEntity", "tail" : "(e: String): ObfuscatorParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams.setEntity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#setEntity(e:String):ObfuscatorParams.this.type", "kind" : "def"}, {"label" : "entity", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ObfuscatorParams.entity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#entity:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ObfuscatorParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ObfuscatorParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ObfuscatorParams.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ObfuscatorParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ObfuscatorParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ObfuscatorParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Params", "member" : "org.apache.spark.ml.param.Params.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.Params", "kind" : "abstract def"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.util.Identifiable.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html#uid:String", "kind" : "abstract val"}], "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html", "members_object" : [{"label" : "read", "tail" : "(): MLReader[DeIdentification]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): DeIdentification", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ObfuscatorParams.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.ReadablePretrainedDeId", "members_trait" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReadablePretrainedDeId.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReadablePretrainedDeId.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReadablePretrainedDeId.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReadablePretrainedDeId.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#pretrained():com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": Option[Nothing]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReadablePretrainedDeId.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#defaultModelName:Option[Nothing]", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[DeIdentificationModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (DeIdentificationModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): DeIdentificationModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReadablePretrainedDeId.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.ReIdentification", "shortDescription" : "Reidentifies obfuscated entities by DeIdentification.", "members_class" : [{"label" : "getSentences", "tail" : "(annotations: Seq[Annotation]): Seq[MySentnece]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReIdentification.getSentences", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#getSentences(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.annotators.deid.MySentnece]", "kind" : "def"}, {"label" : "createReidentificationSentence", "tail" : "(reidentification: String, offset: Int): Annotation", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReIdentification.createReidentificationSentence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#createReidentificationSentence(reidentification:String,offset:Int):com.johnsnowlabs.nlp.Annotation", "kind" : "def"}, {"label" : "getNerEntitiesBySentence", "tail" : "(annotations: Seq[Annotation], sentenceCount: Int): Seq[Seq[Annotation]]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReIdentification.getNerEntitiesBySentence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#getNerEntitiesBySentence(annotations:Seq[com.johnsnowlabs.nlp.Annotation],sentenceCount:Int):Seq[Seq[com.johnsnowlabs.nlp.Annotation]]", "kind" : "def"}, {"label" : "makeSentence", "tail" : "(chunk: Annotation, sentence: String, originalSencece: MySentnece): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReIdentification.makeSentence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#makeSentence(chunk:com.johnsnowlabs.nlp.Annotation,sentence:String,originalSencece:com.johnsnowlabs.nlp.annotators.deid.MySentnece):String", "kind" : "def"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReIdentification.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReIdentification.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReIdentification.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#outputAnnotatorType:ReIdentification.this.AnnotatorType", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.ReIdentification#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.ReIdentification#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.ReIdentification.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): ReIdentification.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): ReIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): ReIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): ReIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): ReIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): ReIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): ReIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): ReIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): ReIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): ReIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): ReIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): ReIdentification.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[DeIdentificationModel]): DeIdentificationModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[DeIdentificationModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ReIdentification.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ReIdentification.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ReIdentification.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ReIdentification.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ReIdentification.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ReIdentification.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/ReIdentification.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.SentenceMaxException", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.deid.SentenceMaxException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/SentenceMaxException.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid", "shortDescription" : "", "members_case class" : [{"label" : "removeColumnsWithPersonalInformation", "tail" : "(mode: String, dbTableDataFrame: DataFrame, threshold: Float, selColsStr: String): DataFrame", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.removeColumnsWithPersonalInformation", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#removeColumnsWithPersonalInformation(mode:String,dbTableDataFrame:org.apache.spark.sql.DataFrame,threshold:Float,selColsStr:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "obfuscateZipCodes", "tail" : "(zipCode: String): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.obfuscateZipCodes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#obfuscateZipCodes(zipCode:String):String", "kind" : "def"}, {"label" : "isZipColumn", "tail" : "(columnName: String): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.isZipColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#isZipColumn(columnName:String):Boolean", "kind" : "def"}, {"label" : "isAgeColumn", "tail" : "(columnName: String): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.isAgeColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#isAgeColumn(columnName:String):Boolean", "kind" : "def"}, {"label" : "pipelineObfuscate", "tail" : ": Pipeline", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.pipelineObfuscate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#pipelineObfuscate:org.apache.spark.ml.Pipeline", "kind" : "val"}, {"label" : "finisherObfuscate", "tail" : ": Finisher", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.finisherObfuscate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#finisherObfuscate:com.johnsnowlabs.nlp.Finisher", "kind" : "val"}, {"label" : "pipeline", "tail" : ": Pipeline", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.pipeline", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#pipeline:org.apache.spark.ml.Pipeline", "kind" : "val"}, {"label" : "finisher", "tail" : ": Finisher", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.finisher", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#finisher:com.johnsnowlabs.nlp.Finisher", "kind" : "val"}, {"label" : "deidentificationRules", "tail" : ": DeIdentificationModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.deidentificationRules", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#deidentificationRules:com.johnsnowlabs.nlp.annotators.deid.DeIdentificationModel", "kind" : "val"}, {"label" : "nerConverter", "tail" : ": NerConverter", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.nerConverter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#nerConverter:com.johnsnowlabs.nlp.annotators.ner.NerConverter", "kind" : "val"}, {"label" : "clinicalSensitiveEntities", "tail" : ": NerDLModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.clinicalSensitiveEntities", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#clinicalSensitiveEntities:com.johnsnowlabs.nlp.annotators.ner.dl.NerDLModel", "kind" : "val"}, {"label" : "wordEmbeddings", "tail" : ": WordEmbeddingsModel", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.wordEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#wordEmbeddings:com.johnsnowlabs.nlp.embeddings.WordEmbeddingsModel", "kind" : "val"}, {"label" : "tokenizer", "tail" : ": Tokenizer", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.tokenizer", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#tokenizer:com.johnsnowlabs.nlp.annotators.Tokenizer", "kind" : "val"}, {"label" : "sentenceDetector", "tail" : ": SentenceDetector", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.sentenceDetector", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#sentenceDetector:com.johnsnowlabs.nlp.annotators.sbd.pragmatic.SentenceDetector", "kind" : "val"}, {"label" : "documentAssembler", "tail" : ": DocumentAssembler", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.documentAssembler", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#documentAssembler:com.johnsnowlabs.nlp.DocumentAssembler", "kind" : "val"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.spark", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid#<init>", "error" : "unsupported entity"}, {"label" : "obfuscateRefFilePath", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.obfuscateRefFilePath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#obfuscateRefFilePath:String", "kind" : "val"}, {"label" : "regexPatternsFilePath", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.regexPatternsFilePath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#regexPatternsFilePath:String", "kind" : "val"}, {"label" : "conllFilePath", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeid.conllFilePath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#conllFilePath:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeid.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeidentification", "shortDescription" : "", "members_case class" : [{"label" : "obfuscateColumns", "tail" : "(dataFrame: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeidentification.obfuscateColumns", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#obfuscateColumns(dataFrame:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeidentification#<init>", "error" : "unsupported entity"}, {"label" : "obfuscateRefSource", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeidentification.obfuscateRefSource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#obfuscateRefSource:String", "kind" : "val"}, {"label" : "obfuscateRefFile", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeidentification.obfuscateRefFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#obfuscateRefFile:String", "kind" : "val"}, {"label" : "columnsMap", "tail" : ": Map[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.StructuredDeidentification.columnsMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#columnsMap:java.util.Map[String,String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/StructuredDeidentification.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.TextToDocumentColumns", "shortDescription" : "", "members_case class" : [{"label" : "toDocumentsColumns", "tail" : "(dataFrame: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.annotators.deid.TextToDocumentColumns.toDocumentsColumns", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#toDocumentsColumns(dataFrame:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.TextToDocumentColumns#<init>", "error" : "unsupported entity"}, {"label" : "columns", "tail" : ": List[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.TextToDocumentColumns.columns", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#columns:java.util.List[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/TextToDocumentColumns.html", "kind" : "case class"}], "com.johnsnowlabs.nlp.annotators.assertion.logreg" : [{"name" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach", "shortDescription" : "This is a classification method, which uses LogisticRegression algorithmContains all the methods for training a AssertionLogRegModel, together with trainWithChunk, trainWithStartEnd.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html", "members_class" : [{"label" : "VectorizedChunk", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.VectorizedChunk", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#VectorizedChunkextendsProductwithSerializable", "kind" : "case class"}, {"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): AssertionLogRegModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel", "kind" : "def"}, {"label" : "setEndCol", "tail" : "(end: String): AssertionLogRegApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.setEndCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setEndCol(end:String):AssertionLogRegApproach.this.type", "kind" : "def"}, {"label" : "setStartCol", "tail" : "(start: String): AssertionLogRegApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.setStartCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setStartCol(start:String):AssertionLogRegApproach.this.type", "kind" : "def"}, {"label" : "setAfter", "tail" : "(a: Int): AssertionLogRegApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.setAfter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setAfter(a:Int):AssertionLogRegApproach.this.type", "kind" : "def"}, {"label" : "setBefore", "tail" : "(b: Int): AssertionLogRegApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.setBefore", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setBefore(b:Int):AssertionLogRegApproach.this.type", "kind" : "def"}, {"label" : "setEnet", "tail" : "(enet: Double): AssertionLogRegApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.setEnet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setEnet(enet:Double):AssertionLogRegApproach.this.type", "kind" : "def"}, {"label" : "setReg", "tail" : "(lambda: Double): AssertionLogRegApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.setReg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setReg(lambda:Double):AssertionLogRegApproach.this.type", "kind" : "def"}, {"label" : "setMaxIter", "tail" : "(max: Int): AssertionLogRegApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.setMaxIter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setMaxIter(max:Int):AssertionLogRegApproach.this.type", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(label: String): AssertionLogRegApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.setLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setLabelCol(label:String):AssertionLogRegApproach.this.type", "kind" : "def"}, {"label" : "endCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.endCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#endCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "startCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.startCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#startCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "afterParam", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.afterParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#afterParam:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "beforeParam", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.beforeParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#beforeParam:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "eNetParam", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.eNetParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#eNetParam:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "regParam", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.regParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#regParam:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "maxIter", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.maxIter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#maxIter:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "label", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.label", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#label:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach#<init>", "error" : "unsupported entity"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#outputAnnotatorType:AssertionLogRegApproach.this.AnnotatorType", "kind" : "val"}, {"label" : "after", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.after", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#after:Int", "kind" : "lazy val"}, {"label" : "before", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.before", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#before:Int", "kind" : "lazy val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#description:String", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegApproach.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#uid:String", "kind" : "val"}, {"label" : "normalize", "tail" : "(vec: Array[Double]): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.normalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#normalize(vec:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "l2norm", "tail" : "(xs: Array[Double]): Double", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.l2norm", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#l2norm(xs:Array[Double]):Double", "kind" : "def"}, {"label" : "applyWindowUdfChunk", "tail" : "(embeddingsDim: Int): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.applyWindowUdfChunk", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#applyWindowUdfChunk(embeddingsDim:Int):org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "applyWindowUdf", "tail" : "(embeddingsDim: Int): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.applyWindowUdf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#applyWindowUdf(embeddingsDim:Int):org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "applyWindow", "tail" : "(tokenizedSentence: WordpieceEmbeddingsSentence, s: Int, e: Int, embeddingsDim: Int): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.applyWindow", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#applyWindow(tokenizedSentence:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence,s:Int,e:Int,embeddingsDim:Int):Array[Double]", "kind" : "def"}, {"label" : "tokenIndexToChunkIndex", "tail" : "(doc: Array[TokenPieceEmbeddings], start: Int, end: Int): (Int, Int)", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.tokenIndexToChunkIndex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#tokenIndexToChunkIndex(doc:Array[com.johnsnowlabs.nlp.annotators.common.TokenPieceEmbeddings],start:Int,end:Int):(Int,Int)", "kind" : "def"}, {"label" : "applyWindowContext", "tail" : "(tokenizedSentence: WordpieceEmbeddingsSentence, s: Int, e: Int, embeddingsDim: Int): (Array[Array[Float]], Array[Array[Float]], Array[Array[Float]])", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.applyWindowContext", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#applyWindowContext(tokenizedSentence:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence,s:Int,e:Int,embeddingsDim:Int):(Array[Array[Float]],Array[Array[Float]],Array[Array[Float]])", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[AssertionLogRegModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): AssertionLogRegModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): AssertionLogRegModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: AssertionLogRegModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): AssertionLogRegApproach.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): AssertionLogRegApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): AssertionLogRegApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): AssertionLogRegApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[AssertionLogRegModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): AssertionLogRegModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): AssertionLogRegModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): AssertionLogRegApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): AssertionLogRegApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): AssertionLogRegApproach.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): AssertionLogRegApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): AssertionLogRegApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): AssertionLogRegApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[AssertionLogRegApproach]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): AssertionLogRegApproach", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegApproach.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel", "shortDescription" : "This is a main class in AssertionLogReg family.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html", "members_class" : [{"label" : "VectorizedChunk", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.VectorizedChunk", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#VectorizedChunkextendsProductwithSerializable", "kind" : "case class"}, {"label" : "copy", "tail" : "(extra: ParamMap): AssertionLogRegModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel", "kind" : "def"}, {"label" : "setLabelMap", "tail" : "(labelMappings: Map[String, Double]): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.setLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setLabelMap(labelMappings:scala.collection.immutable.Map[String,Double]):AssertionLogRegModel.this.type", "kind" : "def"}, {"label" : "setModel", "tail" : "(m: LogisticRegressionModel): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.setModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setModel(m:org.apache.spark.ml.classification.LogisticRegressionModel):AssertionLogRegModel.this.type", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "setEndCol", "tail" : "(end: String): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.setEndCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setEndCol(end:String):AssertionLogRegModel.this.type", "kind" : "def"}, {"label" : "setStartCol", "tail" : "(start: String): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.setStartCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setStartCol(start:String):AssertionLogRegModel.this.type", "kind" : "def"}, {"label" : "setAfter", "tail" : "(after: Int): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.setAfter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setAfter(after:Int):AssertionLogRegModel.this.type", "kind" : "def"}, {"label" : "setBefore", "tail" : "(before: Int): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.setBefore", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setBefore(before:Int):AssertionLogRegModel.this.type", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel#<init>", "error" : "unsupported entity"}, {"label" : "after", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.after", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#after:Int", "kind" : "lazy val"}, {"label" : "before", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.before", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#before:Int", "kind" : "lazy val"}, {"label" : "labelMap", "tail" : ": MapFeature[Double, String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.labelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#labelMap:com.johnsnowlabs.nlp.serialization.MapFeature[Double,String]", "kind" : "var"}, {"label" : "model", "tail" : ": StructFeature[LogisticRegressionModel]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.model", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#model:com.johnsnowlabs.nlp.serialization.StructFeature[org.apache.spark.ml.classification.LogisticRegressionModel]", "kind" : "var"}, {"label" : "endCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.endCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#endCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "startCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.startCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#startCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "afterParam", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.afterParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#afterParam:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "beforeParam", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.beforeParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#beforeParam:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#outputAnnotatorType:AssertionLogRegModel.this.AnnotatorType", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#uid:String", "kind" : "val"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "validateStorageRef", "tail" : "(dataset: Dataset[_], inputCols: Array[String], annotatorType: String): Unit", "member" : "com.johnsnowlabs.storage.HasStorageRef.validateStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#validateStorageRef(dataset:org.apache.spark.sql.Dataset[_],inputCols:Array[String],annotatorType:String):Unit", "kind" : "def"}, {"label" : "getStorageRef", "tail" : "(): String", "member" : "com.johnsnowlabs.storage.HasStorageRef.getStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#getStorageRef:String", "kind" : "def"}, {"label" : "setStorageRef", "tail" : "(value: String): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.storage.HasStorageRef.setStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setStorageRef(value:String):HasStorageRef.this.type", "kind" : "def"}, {"label" : "createDatabaseConnection", "tail" : "(database: Name): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasStorageRef.createDatabaseConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#createDatabaseConnection(database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "storageRef", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.storage.HasStorageRef.storageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#storageRef:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "normalize", "tail" : "(vec: Array[Double]): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.normalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#normalize(vec:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "l2norm", "tail" : "(xs: Array[Double]): Double", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.l2norm", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#l2norm(xs:Array[Double]):Double", "kind" : "def"}, {"label" : "applyWindowUdfChunk", "tail" : "(embeddingsDim: Int): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.applyWindowUdfChunk", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#applyWindowUdfChunk(embeddingsDim:Int):org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "applyWindowUdf", "tail" : "(embeddingsDim: Int): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.applyWindowUdf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#applyWindowUdf(embeddingsDim:Int):org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "applyWindow", "tail" : "(tokenizedSentence: WordpieceEmbeddingsSentence, s: Int, e: Int, embeddingsDim: Int): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.applyWindow", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#applyWindow(tokenizedSentence:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence,s:Int,e:Int,embeddingsDim:Int):Array[Double]", "kind" : "def"}, {"label" : "tokenIndexToChunkIndex", "tail" : "(doc: Array[TokenPieceEmbeddings], start: Int, end: Int): (Int, Int)", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.tokenIndexToChunkIndex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#tokenIndexToChunkIndex(doc:Array[com.johnsnowlabs.nlp.annotators.common.TokenPieceEmbeddings],start:Int,end:Int):(Int,Int)", "kind" : "def"}, {"label" : "applyWindowContext", "tail" : "(tokenizedSentence: WordpieceEmbeddingsSentence, s: Int, e: Int, embeddingsDim: Int): (Array[Array[Float]], Array[Array[Float]], Array[Array[Float]])", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.applyWindowContext", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#applyWindowContext(tokenizedSentence:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence,s:Int,e:Int,embeddingsDim:Int):(Array[Array[Float]],Array[Array[Float]],Array[Array[Float]])", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): AssertionLogRegModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[AssertionLogRegModel]): AssertionLogRegModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[AssertionLogRegModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): AssertionLogRegModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): AssertionLogRegModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): AssertionLogRegModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): AssertionLogRegModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): AssertionLogRegModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): AssertionLogRegModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): AssertionLogRegModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.ReadablePretrainedAssertionLogReg.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): AssertionLogRegModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.ReadablePretrainedAssertionLogReg.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): AssertionLogRegModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.ReadablePretrainedAssertionLogReg.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): AssertionLogRegModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.ReadablePretrainedAssertionLogReg.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#pretrained():com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": None.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.ReadablePretrainedAssertionLogReg.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#defaultModelName:None.type", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[AssertionLogRegModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (AssertionLogRegModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): AssertionLogRegModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/AssertionLogRegModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Datapoint", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Datapoint#<init>", "error" : "unsupported entity"}, {"label" : "end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Datapoint.end", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#end:Int", "kind" : "val"}, {"label" : "start", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Datapoint.start", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#start:Int", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Datapoint.label", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#label:String", "kind" : "val"}, {"label" : "target", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Datapoint.target", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#target:String", "kind" : "val"}, {"label" : "sentence", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Datapoint.sentence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#sentence:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Datapoint.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.NegexDatasetReader", "shortDescription" : "Reader for this dataset,https:\/\/github.com\/mongoose54\/negex\/blob\/master\/genConText\/rsAnnotations-1-120-random.txt", "members_class" : [{"label" : "readDataset", "tail" : "(datasetPath: String): Seq[Datapoint]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.NegexDatasetReader.readDataset", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#readDataset(datasetPath:String):Seq[com.johnsnowlabs.nlp.annotators.assertion.logreg.Datapoint]", "kind" : "def"}, {"label" : "readDataframe", "tail" : "(datasetPath: String)(session: SparkSession): DataFrame", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.NegexDatasetReader.readDataframe", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#readDataframe(datasetPath:String)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "blackList", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.NegexDatasetReader.blackList", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#blackList:Seq[String]", "kind" : "val"}, {"label" : "specialChars", "tail" : ": Seq[Char]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.NegexDatasetReader.specialChars", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#specialChars:Seq[Char]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.NegexDatasetReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/NegexDatasetReader.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.ReadablePretrainedAssertionLogReg", "members_trait" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): AssertionLogRegModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.ReadablePretrainedAssertionLogReg.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): AssertionLogRegModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.ReadablePretrainedAssertionLogReg.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): AssertionLogRegModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.ReadablePretrainedAssertionLogReg.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): AssertionLogRegModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.ReadablePretrainedAssertionLogReg.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#pretrained():com.johnsnowlabs.nlp.annotators.assertion.logreg.AssertionLogRegModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": None.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.ReadablePretrainedAssertionLogReg.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#defaultModelName:None.type", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[AssertionLogRegModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (AssertionLogRegModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): AssertionLogRegModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/ReadablePretrainedAssertionLogReg.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing", "members_trait" : [{"label" : "normalize", "tail" : "(vec: Array[Double]): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.normalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#normalize(vec:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "l2norm", "tail" : "(xs: Array[Double]): Double", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.l2norm", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#l2norm(xs:Array[Double]):Double", "kind" : "def"}, {"label" : "applyWindowUdfChunk", "tail" : "(embeddingsDim: Int): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.applyWindowUdfChunk", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#applyWindowUdfChunk(embeddingsDim:Int):org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "VectorizedChunk", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.VectorizedChunk", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#VectorizedChunkextendsProductwithSerializable", "kind" : "case class"}, {"label" : "applyWindowUdf", "tail" : "(embeddingsDim: Int): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.applyWindowUdf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#applyWindowUdf(embeddingsDim:Int):org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "applyWindow", "tail" : "(tokenizedSentence: WordpieceEmbeddingsSentence, s: Int, e: Int, embeddingsDim: Int): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.applyWindow", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#applyWindow(tokenizedSentence:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence,s:Int,e:Int,embeddingsDim:Int):Array[Double]", "kind" : "def"}, {"label" : "tokenIndexToChunkIndex", "tail" : "(doc: Array[TokenPieceEmbeddings], start: Int, end: Int): (Int, Int)", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.tokenIndexToChunkIndex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#tokenIndexToChunkIndex(doc:Array[com.johnsnowlabs.nlp.annotators.common.TokenPieceEmbeddings],start:Int,end:Int):(Int,Int)", "kind" : "def"}, {"label" : "applyWindowContext", "tail" : "(tokenizedSentence: WordpieceEmbeddingsSentence, s: Int, e: Int, embeddingsDim: Int): (Array[Array[Float]], Array[Array[Float]], Array[Array[Float]])", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.applyWindowContext", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#applyWindowContext(tokenizedSentence:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence,s:Int,e:Int,embeddingsDim:Int):(Array[Array[Float]],Array[Array[Float]],Array[Array[Float]])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "after", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.after", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#after:Int", "kind" : "abstract val"}, {"label" : "before", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.assertion.logreg.Windowing.before", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html#before:Int", "kind" : "abstract val"}], "shortDescription" : "Created by jose on 24\/11\/17.", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/logreg\/Windowing.html", "kind" : "trait"}], "com.johnsnowlabs.nlp.annotators.context" : [{"name" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach", "shortDescription" : "Creates a model, that extracts entity from a document based on user defined rules.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html", "members_class" : [{"label" : "getEntityDefinition", "tail" : "(jsonContent: String): Option[EntityDefinition]", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.getEntityDefinition", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#getEntityDefinition(jsonContent:String):Option[com.johnsnowlabs.nlp.annotators.context.EntityDefinition]", "kind" : "def"}, {"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): ContextualParserModel", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.context.ContextualParserModel", "kind" : "def"}, {"label" : "setDictionary", "tail" : "(path: String, readAs: Format, options: Map[String, String]): ContextualParserApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.setDictionary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#setDictionary(path:String,readAs:com.johnsnowlabs.nlp.util.io.ReadAs.Format,options:Map[String,String]):ContextualParserApproach.this.type", "kind" : "def"}, {"label" : "setUpdateTokenizer", "tail" : "(value: Boolean): ContextualParserApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.setUpdateTokenizer", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#setUpdateTokenizer(value:Boolean):ContextualParserApproach.this.type", "kind" : "def"}, {"label" : "setContextMatch", "tail" : "(value: Boolean): ContextualParserApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.setContextMatch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#setContextMatch(value:Boolean):ContextualParserApproach.this.type", "kind" : "def"}, {"label" : "setPrefixAndSuffixMatch", "tail" : "(value: Boolean): ContextualParserApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.setPrefixAndSuffixMatch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#setPrefixAndSuffixMatch(value:Boolean):ContextualParserApproach.this.type", "kind" : "def"}, {"label" : "setCaseSensitive", "tail" : "(value: Boolean): ContextualParserApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.setCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#setCaseSensitive(value:Boolean):ContextualParserApproach.this.type", "kind" : "def"}, {"label" : "setJsonPath", "tail" : "(value: String): ContextualParserApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.setJsonPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#setJsonPath(value:String):ContextualParserApproach.this.type", "kind" : "def"}, {"label" : "updateTokenizer", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.updateTokenizer", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#updateTokenizer:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "dictionary", "tail" : ": ExternalResourceParam", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.dictionary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#dictionary:com.johnsnowlabs.nlp.annotators.param.ExternalResourceParam", "kind" : "val"}, {"label" : "contextMatch", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.contextMatch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#contextMatch:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "prefixAndSuffixMatch", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.prefixAndSuffixMatch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#prefixAndSuffixMatch:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "caseSensitive", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.caseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#caseSensitive:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "jsonPath", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.jsonPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#jsonPath:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#outputAnnotatorType:ContextualParserApproach.this.AnnotatorType", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#description:String", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserApproach.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#uid:String", "kind" : "val"}, {"label" : "recursiveFit", "tail" : "(dataset: Dataset[_], recursivePipeline: PipelineModel): ContextualParserModel", "member" : "com.johnsnowlabs.nlp.HasRecursiveFit.recursiveFit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#recursiveFit(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:org.apache.spark.ml.PipelineModel):M", "kind" : "final def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[ContextualParserModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): ContextualParserModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): ContextualParserModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: ContextualParserModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): ContextualParserApproach.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): ContextualParserApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): ContextualParserApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): ContextualParserApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[ContextualParserModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): ContextualParserModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): ContextualParserModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ContextualParserApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ContextualParserApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ContextualParserApproach.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ContextualParserApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ContextualParserApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ContextualParserApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[ContextualParserApproach]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): ContextualParserApproach", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserApproach.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel", "shortDescription" : "Extracts entity from a document based on user defined rules.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html", "members_class" : [{"label" : "matchExceptions", "tail" : "(token: IndexedToken, sentence: Sentence): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.matchExceptions", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#matchExceptions(token:com.johnsnowlabs.nlp.annotators.common.IndexedToken,sentence:com.johnsnowlabs.nlp.annotators.common.Sentence):Boolean", "kind" : "def"}, {"label" : "matchPrefixSuffix", "tail" : "(token: IndexedToken, sentence: Sentence): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.matchPrefixSuffix", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#matchPrefixSuffix(token:com.johnsnowlabs.nlp.annotators.common.IndexedToken,sentence:com.johnsnowlabs.nlp.annotators.common.Sentence):Boolean", "kind" : "def"}, {"label" : "getAnnotation", "tail" : "(matchedToken: MatchedToken): Annotation", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.getAnnotation", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#getAnnotation(matchedToken:ContextualParserModel.this.MatchedToken):com.johnsnowlabs.nlp.Annotation", "kind" : "def"}, {"label" : "getAnnotationByToken", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.getAnnotationByToken", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#getAnnotationByToken(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "MatchedToken", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.MatchedToken", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#MatchedTokenextendsProductwithSerializable", "kind" : "case class"}, {"label" : "setContextMatch", "tail" : "(value: Boolean): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.setContextMatch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setContextMatch(value:Boolean):ContextualParserModel.this.type", "kind" : "def"}, {"label" : "setPrefixAndSuffixMatch", "tail" : "(value: Boolean): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.setPrefixAndSuffixMatch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setPrefixAndSuffixMatch(value:Boolean):ContextualParserModel.this.type", "kind" : "def"}, {"label" : "setCaseSensitive", "tail" : "(value: Boolean): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.setCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setCaseSensitive(value:Boolean):ContextualParserModel.this.type", "kind" : "def"}, {"label" : "setDictionary", "tail" : "(value: Array[Dictionary]): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.setDictionary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setDictionary(value:Array[com.johnsnowlabs.nlp.annotators.context.Dictionary]):ContextualParserModel.this.type", "kind" : "def"}, {"label" : "setEntityDefinition", "tail" : "(value: EntityDefinition): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.setEntityDefinition", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setEntityDefinition(value:com.johnsnowlabs.nlp.annotators.context.EntityDefinition):ContextualParserModel.this.type", "kind" : "def"}, {"label" : "jsonPath", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.jsonPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#jsonPath:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "contextMatch", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.contextMatch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#contextMatch:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "prefixAndSuffixMatch", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.prefixAndSuffixMatch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#prefixAndSuffixMatch:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "caseSensitive", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.caseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#caseSensitive:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "dictionary", "tail" : ": StructFeature[Array[Dictionary]]", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.dictionary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#dictionary:com.johnsnowlabs.nlp.serialization.StructFeature[Array[com.johnsnowlabs.nlp.annotators.context.Dictionary]]", "kind" : "val"}, {"label" : "entityDefinition", "tail" : ": StructFeature[EntityDefinition]", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.entityDefinition", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#entityDefinition:com.johnsnowlabs.nlp.serialization.StructFeature[com.johnsnowlabs.nlp.annotators.context.EntityDefinition]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#outputAnnotatorType:ContextualParserModel.this.AnnotatorType", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.context.ContextualParserModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): ContextualParserModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): ContextualParserModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[ContextualParserModel]): ContextualParserModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[ContextualParserModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ContextualParserModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ContextualParserModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ContextualParserModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ContextualParserModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ContextualParserModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ContextualParserModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[ContextualParserModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (ContextualParserModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): ContextualParserModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/context\/ContextualParserModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.context.Dictionary", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.context.Dictionary#<init>", "error" : "unsupported entity"}, {"label" : "regex", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.context.Dictionary.regex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#regex:String", "kind" : "val"}, {"label" : "values", "tail" : ": List[String]", "member" : "com.johnsnowlabs.nlp.annotators.context.Dictionary.values", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#values:List[String]", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.context.Dictionary.key", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#key:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/context\/Dictionary.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition#<init>", "error" : "unsupported entity"}, {"label" : "completeMatchRegex", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.completeMatchRegex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#completeMatchRegex:Option[String]", "kind" : "val"}, {"label" : "matchScope", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.matchScope", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#matchScope:Option[String]", "kind" : "val"}, {"label" : "regexContextException", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.regexContextException", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#regexContextException:Option[String]", "kind" : "var"}, {"label" : "exceptionDistance", "tail" : ": Option[Double]", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.exceptionDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#exceptionDistance:Option[Double]", "kind" : "val"}, {"label" : "contextException", "tail" : ": Option[List[String]]", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.contextException", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#contextException:Option[List[String]]", "kind" : "val"}, {"label" : "context", "tail" : ": Option[List[String]]", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.context", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#context:Option[List[String]]", "kind" : "val"}, {"label" : "regexSuffix", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.regexSuffix", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#regexSuffix:Option[String]", "kind" : "var"}, {"label" : "suffix", "tail" : ": Option[List[String]]", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.suffix", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#suffix:Option[List[String]]", "kind" : "val"}, {"label" : "regexPrefix", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.regexPrefix", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#regexPrefix:Option[String]", "kind" : "var"}, {"label" : "prefix", "tail" : ": Option[List[String]]", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.prefix", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#prefix:Option[List[String]]", "kind" : "val"}, {"label" : "contextLength", "tail" : ": Option[Double]", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.contextLength", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#contextLength:Option[Double]", "kind" : "val"}, {"label" : "regex", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.regex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#regex:Option[String]", "kind" : "val"}, {"label" : "ruleScope", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.ruleScope", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#ruleScope:String", "kind" : "val"}, {"label" : "entity", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.context.EntityDefinition.entity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#entity:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/context\/EntityDefinition.html", "kind" : "case class"}], "com.johnsnowlabs.nlp.annotators.resolution" : [{"name" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach", "shortDescription" : "This class is deprecated.", "members_class" : [{"label" : "createReader", "tail" : "(database: Name, connection: RocksDBConnection): StorageReader[_]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.createReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#createReader(database:com.johnsnowlabs.storage.Database.Name,connection:com.johnsnowlabs.storage.RocksDBConnection):com.johnsnowlabs.storage.StorageReader[_]", "kind" : "def"}, {"label" : "databases", "tail" : ": Array[Name]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.databases", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#databases:Array[com.johnsnowlabs.storage.Database.Name]", "kind" : "val"}, {"label" : "createWriter", "tail" : "(database: Name, connection: RocksDBConnection): StorageWriter[_]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.createWriter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#createWriter(database:com.johnsnowlabs.storage.Database.Name,connection:com.johnsnowlabs.storage.RocksDBConnection):com.johnsnowlabs.storage.StorageWriter[_]", "kind" : "def"}, {"label" : "index", "tail" : "(fitDataset: Dataset[_], storageSourcePath: Option[String], readAs: Option[util.io.ReadAs.Value], writers: Map[Name, StorageWriter[_]], readOptions: Option[Map[String, String]]): Unit", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.index", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#index(fitDataset:org.apache.spark.sql.Dataset[_],storageSourcePath:Option[String],readAs:Option[com.johnsnowlabs.nlp.util.io.ReadAs.Value],writers:Map[com.johnsnowlabs.storage.Database.Name,com.johnsnowlabs.storage.StorageWriter[_]],readOptions:Option[Map[String,String]]):Unit", "kind" : "def"}, {"label" : "dataCounter", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.dataCounter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#dataCounter:Int", "kind" : "var"}, {"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): BigChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel", "kind" : "def"}, {"label" : "normalizedColumnName", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.normalizedColumnName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#normalizedColumnName:String", "kind" : "lazy val"}, {"label" : "labelColumnName", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.labelColumnName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#labelColumnName:String", "kind" : "lazy val"}, {"label" : "embeddingsColumnName", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.embeddingsColumnName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#embeddingsColumnName:String", "kind" : "lazy val"}, {"label" : "tokensColumnName", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.tokensColumnName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#tokensColumnName:String", "kind" : "lazy val"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach#<init>", "error" : "unsupported entity"}, {"label" : "getMissAsEmpty", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.getMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getMissAsEmpty:Boolean", "kind" : "def"}, {"label" : "setMissAsEmpty", "tail" : "(v: Boolean): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.setMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setMissAsEmpty(v:Boolean):BigChunkEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "missAsEmpty", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.missAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#missAsEmpty:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getThreshold", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.getThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getThreshold:Double", "kind" : "def"}, {"label" : "setThreshold", "tail" : "(dist: Double): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.setThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setThreshold(dist:Double):BigChunkEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "threshold", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.threshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#threshold:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "getNeighbours", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.getNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getNeighbours:Int", "kind" : "def"}, {"label" : "setNeighbours", "tail" : "(k: Int): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.setNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setNeighbours(k:Int):BigChunkEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "neighbours", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.neighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#neighbours:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getNormalizedCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.getNormalizedCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getNormalizedCol:String", "kind" : "def"}, {"label" : "setNormalizedCol", "tail" : "(value: String): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.setNormalizedCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setNormalizedCol(value:String):BigChunkEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "normalizedCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.normalizedCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#normalizedCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.getLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getLabelCol:String", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.setLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setLabelCol(value:String):BigChunkEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.labelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#description:String", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#outputAnnotatorType:BigChunkEntityResolverApproach.this.AnnotatorType", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverApproach.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#uid:String", "kind" : "val"}, {"label" : "getReader", "tail" : "(database: Name): StorageReader[A]", "member" : "com.johnsnowlabs.storage.HasStorageReader.getReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getReader[A](database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.StorageReader[A]", "kind" : "def"}, {"label" : "readers", "tail" : ": Map[Name, StorageReader[_]]", "member" : "com.johnsnowlabs.storage.HasStorageReader.readers", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#readers:scala.collection.mutable.Map[com.johnsnowlabs.storage.Database.Name,com.johnsnowlabs.storage.StorageReader[_]]", "kind" : "val"}, {"label" : "indexStorage", "tail" : "(fitDataset: Dataset[_], resource: Option[ExternalResource]): Unit", "member" : "com.johnsnowlabs.storage.HasStorage.indexStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#indexStorage(fitDataset:org.apache.spark.sql.Dataset[_],resource:Option[com.johnsnowlabs.nlp.util.io.ExternalResource]):Unit", "kind" : "def"}, {"label" : "missingRefMsg", "tail" : ": String", "member" : "com.johnsnowlabs.storage.HasStorage.missingRefMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#missingRefMsg:String", "kind" : "val"}, {"label" : "getStoragePath", "tail" : "(): Option[ExternalResource]", "member" : "com.johnsnowlabs.storage.HasStorage.getStoragePath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getStoragePath:Option[com.johnsnowlabs.nlp.util.io.ExternalResource]", "kind" : "def"}, {"label" : "setStoragePath", "tail" : "(path: String, readAs: util.io.ReadAs.Value): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.storage.HasStorage.setStoragePath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setStoragePath(path:String,readAs:com.johnsnowlabs.nlp.util.io.ReadAs.Value):HasStorage.this.type", "kind" : "def"}, {"label" : "setStoragePath", "tail" : "(path: String, readAs: String): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.storage.HasStorage.setStoragePath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setStoragePath(path:String,readAs:String):HasStorage.this.type", "kind" : "def"}, {"label" : "storagePath", "tail" : ": ExternalResourceParam", "member" : "com.johnsnowlabs.storage.HasStorage.storagePath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#storagePath:com.johnsnowlabs.nlp.annotators.param.ExternalResourceParam", "kind" : "val"}, {"label" : "setCaseSensitive", "tail" : "(value: Boolean): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.setCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setCaseSensitive(value:Boolean):HasCaseSensitiveProperties.this.type", "kind" : "def"}, {"label" : "getCaseSensitive", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.getCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getCaseSensitive:Boolean", "kind" : "def"}, {"label" : "caseSensitive", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.caseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#caseSensitive:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getIncludeStorage", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.storage.HasExcludableStorage.getIncludeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getIncludeStorage:Boolean", "kind" : "def"}, {"label" : "setIncludeStorage", "tail" : "(value: Boolean): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.storage.HasExcludableStorage.setIncludeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setIncludeStorage(value:Boolean):HasExcludableStorage.this.type", "kind" : "def"}, {"label" : "includeStorage", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.storage.HasExcludableStorage.includeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#includeStorage:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "validateStorageRef", "tail" : "(dataset: Dataset[_], inputCols: Array[String], annotatorType: String): Unit", "member" : "com.johnsnowlabs.storage.HasStorageRef.validateStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#validateStorageRef(dataset:org.apache.spark.sql.Dataset[_],inputCols:Array[String],annotatorType:String):Unit", "kind" : "def"}, {"label" : "getStorageRef", "tail" : "(): String", "member" : "com.johnsnowlabs.storage.HasStorageRef.getStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getStorageRef:String", "kind" : "def"}, {"label" : "setStorageRef", "tail" : "(value: String): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.storage.HasStorageRef.setStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setStorageRef(value:String):HasStorageRef.this.type", "kind" : "def"}, {"label" : "createDatabaseConnection", "tail" : "(database: Name): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasStorageRef.createDatabaseConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#createDatabaseConnection(database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "storageRef", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.storage.HasStorageRef.storageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#storageRef:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[BigChunkEntityResolverModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): BigChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): BigChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: BigChunkEntityResolverModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): BigChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[BigChunkEntityResolverModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): BigChunkEntityResolverModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): BigChunkEntityResolverModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): BigChunkEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): BigChunkEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): BigChunkEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): BigChunkEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): BigChunkEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): BigChunkEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverApproach.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel", "shortDescription" : "This class is deprecated.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html", "members_class" : [{"label" : "databases", "tail" : ": Array[Name]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.databases", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#databases:Array[com.johnsnowlabs.storage.JSLDatabase.Name]", "kind" : "val"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "findMatches", "tail" : "(chunkEmbeddings: Array[Float], tokens: Array[String], wm: WordMovers): Option[Array[BigFoundData]]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.findMatches", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#findMatches(chunkEmbeddings:Array[Float],tokens:Array[String],wm:com.johnsnowlabs.util.wmd4j.WordMovers):Option[Array[com.johnsnowlabs.nlp.annotators.resolution.BigFoundData]]", "kind" : "def"}, {"label" : "createReader", "tail" : "(database: Name, connection: RocksDBConnection): StorageReader[_]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.createReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#createReader(database:com.johnsnowlabs.storage.JSLDatabase.Name,connection:com.johnsnowlabs.storage.RocksDBConnection):com.johnsnowlabs.storage.StorageReader[_]", "kind" : "def"}, {"label" : "setMissAsEmpty", "tail" : "(v: Boolean): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.setMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setMissAsEmpty(v:Boolean):BigChunkEntityResolverModel.this.type", "kind" : "def"}, {"label" : "missAsEmpty", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.missAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#missAsEmpty:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "setThreshold", "tail" : "(dist: Double): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.setThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setThreshold(dist:Double):BigChunkEntityResolverModel.this.type", "kind" : "def"}, {"label" : "threshold", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.threshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#threshold:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "setNeighbours", "tail" : "(k: Int): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.setNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setNeighbours(k:Int):BigChunkEntityResolverModel.this.type", "kind" : "def"}, {"label" : "neighbours", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.neighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#neighbours:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "setSearchTree", "tail" : "(tree: JSerializableKDTree): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.setSearchTree", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setSearchTree(tree:com.johnsnowlabs.ml.search.JSerializableKDTree):BigChunkEntityResolverModel.this.type", "kind" : "def"}, {"label" : "searchTree", "tail" : ": StructFeature[JSerializableKDTree]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.searchTree", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#searchTree:com.johnsnowlabs.nlp.serialization.StructFeature[com.johnsnowlabs.ml.search.JSerializableKDTree]", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#outputAnnotatorType:BigChunkEntityResolverModel.this.AnnotatorType", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "wrapSentenceEmbeddingsMetadata", "tail" : "(col: Column, embeddingsDim: Int, embeddingsRef: Option[String]): Column", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.wrapSentenceEmbeddingsMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#wrapSentenceEmbeddingsMetadata(col:org.apache.spark.sql.Column,embeddingsDim:Int,embeddingsRef:Option[String]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "wrapEmbeddingsMetadata", "tail" : "(col: Column, embeddingsDim: Int, embeddingsRef: Option[String]): Column", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.wrapEmbeddingsMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#wrapEmbeddingsMetadata(col:org.apache.spark.sql.Column,embeddingsDim:Int,embeddingsRef:Option[String]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getDimension", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.getDimension", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#getDimension:Int", "kind" : "def"}, {"label" : "setDimension", "tail" : "(value: Int): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.setDimension", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setDimension(value:Int):HasEmbeddingsProperties.this.type", "kind" : "def"}, {"label" : "dimension", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.dimension", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#dimension:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "deserializeStorage", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.storage.HasStorageModel.deserializeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#deserializeStorage(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.storage.HasStorageModel.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "saveStorage", "tail" : "(path: String, spark: SparkSession, withinStorage: Boolean): Unit", "member" : "com.johnsnowlabs.storage.HasStorageModel.saveStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#saveStorage(path:String,spark:org.apache.spark.sql.SparkSession,withinStorage:Boolean):Unit", "kind" : "def"}, {"label" : "serializeStorage", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.storage.HasStorageModel.serializeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#serializeStorage(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getIncludeStorage", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.storage.HasExcludableStorage.getIncludeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#getIncludeStorage:Boolean", "kind" : "def"}, {"label" : "setIncludeStorage", "tail" : "(value: Boolean): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.storage.HasExcludableStorage.setIncludeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setIncludeStorage(value:Boolean):HasExcludableStorage.this.type", "kind" : "def"}, {"label" : "includeStorage", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.storage.HasExcludableStorage.includeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#includeStorage:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getReader", "tail" : "(database: Name): StorageReader[A]", "member" : "com.johnsnowlabs.storage.HasStorageReader.getReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#getReader[A](database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.StorageReader[A]", "kind" : "def"}, {"label" : "readers", "tail" : ": Map[Name, StorageReader[_]]", "member" : "com.johnsnowlabs.storage.HasStorageReader.readers", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#readers:scala.collection.mutable.Map[com.johnsnowlabs.storage.Database.Name,com.johnsnowlabs.storage.StorageReader[_]]", "kind" : "val"}, {"label" : "setCaseSensitive", "tail" : "(value: Boolean): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.setCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setCaseSensitive(value:Boolean):HasCaseSensitiveProperties.this.type", "kind" : "def"}, {"label" : "getCaseSensitive", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.getCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#getCaseSensitive:Boolean", "kind" : "def"}, {"label" : "caseSensitive", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.caseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#caseSensitive:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "validateStorageRef", "tail" : "(dataset: Dataset[_], inputCols: Array[String], annotatorType: String): Unit", "member" : "com.johnsnowlabs.storage.HasStorageRef.validateStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#validateStorageRef(dataset:org.apache.spark.sql.Dataset[_],inputCols:Array[String],annotatorType:String):Unit", "kind" : "def"}, {"label" : "getStorageRef", "tail" : "(): String", "member" : "com.johnsnowlabs.storage.HasStorageRef.getStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#getStorageRef:String", "kind" : "def"}, {"label" : "setStorageRef", "tail" : "(value: String): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.storage.HasStorageRef.setStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setStorageRef(value:String):HasStorageRef.this.type", "kind" : "def"}, {"label" : "createDatabaseConnection", "tail" : "(database: Name): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasStorageRef.createDatabaseConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#createDatabaseConnection(database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "storageRef", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.storage.HasStorageRef.storageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#storageRef:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): BigChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): BigChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[BigChunkEntityResolverModel]): BigChunkEntityResolverModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[BigChunkEntityResolverModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): BigChunkEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): BigChunkEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): BigChunkEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): BigChunkEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): BigChunkEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): BigChunkEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): BigChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): BigChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): BigChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): BigChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#pretrained():com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel", "kind" : "def"}, {"label" : "databases", "tail" : ": Array[Name]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver.databases", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#databases:Array[com.johnsnowlabs.storage.JSLDatabase.Name]", "kind" : "val"}, {"label" : "defaultModelName", "tail" : ": None.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#defaultModelName:None.type", "kind" : "val"}, {"label" : "hitsAtK", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, k: Int, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.hitsAtK", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#hitsAtK(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,k:Int,numOfChars:Int):Double", "kind" : "def"}, {"label" : "accuracy", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.accuracy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#accuracy(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,numOfChars:Int):Double", "kind" : "def"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#defaultLang:String", "kind" : "val"}, {"label" : "readStorage", "tail" : "(instance: BigChunkEntityResolverModel, path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.storage.StorageReadable.readStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#readStorage(instance:T,path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "loadStorage", "tail" : "(path: String, spark: SparkSession, storageRef: String): Unit", "member" : "com.johnsnowlabs.storage.StorageReadable.loadStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#loadStorage(path:String,spark:org.apache.spark.sql.SparkSession,storageRef:String):Unit", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[BigChunkEntityResolverModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (BigChunkEntityResolverModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): BigChunkEntityResolverModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigChunkEntityResolverModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.BigFoundData", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.resolution.BigFoundData#<init>", "error" : "unsupported entity"}, {"label" : "normalized", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigFoundData.normalized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#normalized:String", "kind" : "val"}, {"label" : "trained", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigFoundData.trained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#trained:Array[String]", "kind" : "val"}, {"label" : "code", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigFoundData.code", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#code:String", "kind" : "val"}, {"label" : "probability", "tail" : ": Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigFoundData.probability", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#probability:Double", "kind" : "val"}, {"label" : "distance", "tail" : ": Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.BigFoundData.distance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#distance:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/BigFoundData.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach", "shortDescription" : "Contains all the parameters and methods to train a ChunkEntityResolverModel.", "members_class" : [{"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): ChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel", "kind" : "def"}, {"label" : "normalizedColumnName", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.normalizedColumnName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#normalizedColumnName:String", "kind" : "lazy val"}, {"label" : "labelColumnName", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.labelColumnName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#labelColumnName:String", "kind" : "lazy val"}, {"label" : "embeddingsColumnName", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.embeddingsColumnName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#embeddingsColumnName:String", "kind" : "lazy val"}, {"label" : "tokensColumnName", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.tokensColumnName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#tokensColumnName:String", "kind" : "lazy val"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach#<init>", "error" : "unsupported entity"}, {"label" : "extractAuxLabelMap", "tail" : "(dataset: Dataset[_]): Map[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.extractAuxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#extractAuxLabelMap(dataset:org.apache.spark.sql.Dataset[_]):scala.collection.Map[String,String]", "kind" : "def"}, {"label" : "getReturnCosineDistances", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.getReturnCosineDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getReturnCosineDistances:Boolean", "kind" : "def"}, {"label" : "setReturnCosineDistances", "tail" : "(value: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.setReturnCosineDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setReturnCosineDistances(value:Boolean):ChunkEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "returnCosineDistances", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.returnCosineDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#returnCosineDistances:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getUseAuxLabel", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.getUseAuxLabel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getUseAuxLabel():Boolean", "kind" : "def"}, {"label" : "setUseAuxLabel", "tail" : "(b: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.setUseAuxLabel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setUseAuxLabel(b:Boolean):ChunkEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "useAuxLabel", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.useAuxLabel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#useAuxLabel:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "auxLabelMap", "tail" : ": StructFeature[Map[String, String]]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.auxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#auxLabelMap:com.johnsnowlabs.nlp.serialization.StructFeature[scala.collection.Map[String,String]]", "kind" : "val"}, {"label" : "getAuxLabelMap", "tail" : "(): Map[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.getAuxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getAuxLabelMap():scala.collection.Map[String,String]", "kind" : "def"}, {"label" : "setAuxLabelMap", "tail" : "(m: Map[String, String]): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.setAuxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setAuxLabelMap(m:scala.collection.Map[String,String]):ChunkEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "getAuxLabelCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.getAuxLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getAuxLabelCol():String", "kind" : "def"}, {"label" : "auxLabelCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.auxLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#auxLabelCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setAuxLabelCol", "tail" : "(c: String): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.setAuxLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setAuxLabelCol(c:String):ChunkEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "getReturnAllKEmbeddings", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.getReturnAllKEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getReturnAllKEmbeddings():Boolean", "kind" : "def"}, {"label" : "setReturnAllKEmbeddings", "tail" : "(b: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.setReturnAllKEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setReturnAllKEmbeddings(b:Boolean):ChunkEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "returnAllKEmbeddings", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.returnAllKEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#returnAllKEmbeddings:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getNormalizedCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.getNormalizedCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getNormalizedCol:String", "kind" : "def"}, {"label" : "setNormalizedCol", "tail" : "(value: String): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.setNormalizedCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setNormalizedCol(value:String):ChunkEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "normalizedCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.normalizedCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#normalizedCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.getLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getLabelCol:String", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.setLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setLabelCol(value:String):ChunkEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.labelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#description:String", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#outputAnnotatorType:ChunkEntityResolverApproach.this.AnnotatorType", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverApproach.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#uid:String", "kind" : "val"}, {"label" : "setCaseSensitive", "tail" : "(value: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.setCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setCaseSensitive(value:Boolean):HasCaseSensitiveProperties.this.type", "kind" : "def"}, {"label" : "getCaseSensitive", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.getCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getCaseSensitive:Boolean", "kind" : "def"}, {"label" : "caseSensitive", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.caseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#caseSensitive:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "getMissAsEmpty", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getMissAsEmpty:Boolean", "kind" : "def"}, {"label" : "setMissAsEmpty", "tail" : "(v: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setMissAsEmpty(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "missAsEmpty", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.missAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#missAsEmpty:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getAllDistancesMetadata", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getAllDistancesMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getAllDistancesMetadata:Boolean", "kind" : "def"}, {"label" : "setAllDistancesMetadata", "tail" : "(v: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setAllDistancesMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setAllDistancesMetadata(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "allDistancesMetadata", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.allDistancesMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#allDistancesMetadata:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getConfidenceFunction", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getConfidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getConfidenceFunction:String", "kind" : "def"}, {"label" : "setConfidenceFunction", "tail" : "(v: String): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setConfidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setConfidenceFunction(v:String):ResolverParams.this.type", "kind" : "def"}, {"label" : "confidenceFunction", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.confidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#confidenceFunction:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getPoolingStrategy", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getPoolingStrategy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getPoolingStrategy:String", "kind" : "def"}, {"label" : "setPoolingStrategy", "tail" : "(value: String): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setPoolingStrategy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setPoolingStrategy(value:String):ResolverParams.this.type", "kind" : "def"}, {"label" : "poolingStrategy", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.poolingStrategy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#poolingStrategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getDistanceWeights", "tail" : "(): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getDistanceWeights", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getDistanceWeights:Array[Double]", "kind" : "def"}, {"label" : "setDistanceWeights", "tail" : "(v: Array[Double]): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setDistanceWeights", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setDistanceWeights(v:Array[Double]):ResolverParams.this.type", "kind" : "def"}, {"label" : "distanceWeights", "tail" : ": DoubleArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.distanceWeights", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#distanceWeights:org.apache.spark.ml.param.DoubleArrayParam", "kind" : "val"}, {"label" : "getEnableLevenshtein", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableLevenshtein", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getEnableLevenshtein:Boolean", "kind" : "def"}, {"label" : "setEnableLevenshtein", "tail" : "(v: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableLevenshtein", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setEnableLevenshtein(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableLevenshtein", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableLevenshtein", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#enableLevenshtein:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableJaroWinkler", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableJaroWinkler", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getEnableJaroWinkler:Boolean", "kind" : "def"}, {"label" : "setEnableJaroWinkler", "tail" : "(v: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableJaroWinkler", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setEnableJaroWinkler(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableJaroWinkler", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableJaroWinkler", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#enableJaroWinkler:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableSorensenDice", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableSorensenDice", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getEnableSorensenDice:Boolean", "kind" : "def"}, {"label" : "setEnableSorensenDice", "tail" : "(v: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableSorensenDice", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setEnableSorensenDice(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableSorensenDice", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableSorensenDice", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#enableSorensenDice:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableJaccard", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableJaccard", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getEnableJaccard:Boolean", "kind" : "def"}, {"label" : "setEnableJaccard", "tail" : "(v: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableJaccard", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setEnableJaccard(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableJaccard", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableJaccard", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#enableJaccard:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableTfidf", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableTfidf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getEnableTfidf:Boolean", "kind" : "def"}, {"label" : "setEnableTfidf", "tail" : "(v: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableTfidf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setEnableTfidf(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableTfidf", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableTfidf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#enableTfidf:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableWmd", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableWmd", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getEnableWmd:Boolean", "kind" : "def"}, {"label" : "setEnableWmd", "tail" : "(v: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableWmd", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setEnableWmd(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableWmd", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableWmd", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#enableWmd:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getExtramassPenalty", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getExtramassPenalty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getExtramassPenalty:Double", "kind" : "def"}, {"label" : "setExtramassPenalty", "tail" : "(emp: Double): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setExtramassPenalty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setExtramassPenalty(emp:Double):ResolverParams.this.type", "kind" : "def"}, {"label" : "extramassPenalty", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.extramassPenalty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#extramassPenalty:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "getThreshold", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getThreshold:Double", "kind" : "def"}, {"label" : "setThreshold", "tail" : "(dist: Double): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setThreshold(dist:Double):ResolverParams.this.type", "kind" : "def"}, {"label" : "threshold", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.threshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#threshold:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "getAlternatives", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getAlternatives", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getAlternatives:Int", "kind" : "def"}, {"label" : "setAlternatives", "tail" : "(a: Int): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setAlternatives", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setAlternatives(a:Int):ResolverParams.this.type", "kind" : "def"}, {"label" : "alternatives", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.alternatives", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#alternatives:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getNeighbours", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getNeighbours:Int", "kind" : "def"}, {"label" : "setNeighbours", "tail" : "(k: Int): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setNeighbours(k:Int):ResolverParams.this.type", "kind" : "def"}, {"label" : "neighbours", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.neighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#neighbours:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getDistanceFunction", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getDistanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getDistanceFunction:String", "kind" : "def"}, {"label" : "setDistanceFunction", "tail" : "(value: String): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setDistanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setDistanceFunction(value:String):ResolverParams.this.type", "kind" : "def"}, {"label" : "distanceFunction", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.distanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#distanceFunction:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[ChunkEntityResolverModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): ChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): ChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: ChunkEntityResolverModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): ChunkEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[ChunkEntityResolverModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): ChunkEntityResolverModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): ChunkEntityResolverModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ChunkEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ChunkEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ChunkEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ChunkEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ChunkEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ChunkEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverApproach.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel", "shortDescription" : "Contains all the parameters to transform a dataset with two Input Annotationsof types TOKEN and WORD_EMBEDDINGS, coming from ChunkTokenizer and ChunkEmbeddings Annotatorsand return the Normalized Entity for a particular trained ontology \/ curated dataset(e.g.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html", "members_class" : [{"label" : "databases", "tail" : ": Array[Name]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.databases", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#databases:Array[com.johnsnowlabs.storage.Database.Name]", "kind" : "val"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "createReader", "tail" : "(database: Name, connection: RocksDBConnection): WordEmbeddingsReader", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.createReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#createReader(database:com.johnsnowlabs.storage.Database.Name,connection:com.johnsnowlabs.storage.RocksDBConnection):com.johnsnowlabs.nlp.embeddings.WordEmbeddingsReader", "kind" : "def"}, {"label" : "getUseAuxLabel", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.getUseAuxLabel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getUseAuxLabel():Boolean", "kind" : "def"}, {"label" : "setUseAuxLabel", "tail" : "(b: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.setUseAuxLabel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setUseAuxLabel(b:Boolean):ChunkEntityResolverModel.this.type", "kind" : "def"}, {"label" : "useAuxLabel", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.useAuxLabel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#useAuxLabel:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getReturnCosineDistances", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.getReturnCosineDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getReturnCosineDistances:Boolean", "kind" : "def"}, {"label" : "setReturnCosineDistances", "tail" : "(value: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.setReturnCosineDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setReturnCosineDistances(value:Boolean):ChunkEntityResolverModel.this.type", "kind" : "def"}, {"label" : "returnCosineDistances", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.returnCosineDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#returnCosineDistances:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "auxLabelMap", "tail" : ": StructFeature[Map[String, String]]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.auxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#auxLabelMap:com.johnsnowlabs.nlp.serialization.StructFeature[scala.collection.Map[String,String]]", "kind" : "val"}, {"label" : "getAuxLabelMap", "tail" : "(): Map[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.getAuxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getAuxLabelMap():scala.collection.Map[String,String]", "kind" : "def"}, {"label" : "setAuxLabelMap", "tail" : "(m: Map[String, String]): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.setAuxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setAuxLabelMap(m:scala.collection.Map[String,String]):ChunkEntityResolverModel.this.type", "kind" : "def"}, {"label" : "getAuxLabelCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.getAuxLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getAuxLabelCol():String", "kind" : "def"}, {"label" : "setAuxLabelCol", "tail" : "(c: String): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.setAuxLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setAuxLabelCol(c:String):ChunkEntityResolverModel.this.type", "kind" : "def"}, {"label" : "auxLabelCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.auxLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#auxLabelCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getTermIDF", "tail" : "(): Map[String, (Int, Double)]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.getTermIDF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getTermIDF:scala.collection.Map[String,(Int,Double)]", "kind" : "def"}, {"label" : "setTermIDF", "tail" : "(freqs: Map[String, (Int, Double)]): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.setTermIDF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setTermIDF(freqs:scala.collection.Map[String,(Int,Double)]):ChunkEntityResolverModel.this.type", "kind" : "def"}, {"label" : "termIDF", "tail" : ": StructFeature[Map[String, (Int, Double)]]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.termIDF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#termIDF:com.johnsnowlabs.nlp.serialization.StructFeature[scala.collection.Map[String,(Int,Double)]]", "kind" : "val"}, {"label" : "getSearchTree", "tail" : "(): SerializableKDTree[TreeData]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.getSearchTree", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getSearchTree:com.johnsnowlabs.ml.search.SerializableKDTree[com.johnsnowlabs.nlp.annotators.resolution.TreeData]", "kind" : "def"}, {"label" : "setSearchTree", "tail" : "(tree: SerializableKDTree[TreeData]): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.setSearchTree", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setSearchTree(tree:com.johnsnowlabs.ml.search.SerializableKDTree[com.johnsnowlabs.nlp.annotators.resolution.TreeData]):ChunkEntityResolverModel.this.type", "kind" : "def"}, {"label" : "searchTree", "tail" : ": StructFeature[SerializableKDTree[TreeData]]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.searchTree", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#searchTree:com.johnsnowlabs.nlp.serialization.StructFeature[com.johnsnowlabs.ml.search.SerializableKDTree[com.johnsnowlabs.nlp.annotators.resolution.TreeData]]", "kind" : "val"}, {"label" : "getReturnAllKEmbeddings", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.getReturnAllKEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getReturnAllKEmbeddings():Boolean", "kind" : "def"}, {"label" : "setReturnAllKEmbeddings", "tail" : "(b: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.setReturnAllKEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setReturnAllKEmbeddings(b:Boolean):ChunkEntityResolverModel.this.type", "kind" : "def"}, {"label" : "returnAllKEmbeddings", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.returnAllKEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#returnAllKEmbeddings:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#outputAnnotatorType:ChunkEntityResolverModel.this.AnnotatorType", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "wrapSentenceEmbeddingsMetadata", "tail" : "(col: Column, embeddingsDim: Int, embeddingsRef: Option[String]): Column", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.wrapSentenceEmbeddingsMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#wrapSentenceEmbeddingsMetadata(col:org.apache.spark.sql.Column,embeddingsDim:Int,embeddingsRef:Option[String]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "wrapEmbeddingsMetadata", "tail" : "(col: Column, embeddingsDim: Int, embeddingsRef: Option[String]): Column", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.wrapEmbeddingsMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#wrapEmbeddingsMetadata(col:org.apache.spark.sql.Column,embeddingsDim:Int,embeddingsRef:Option[String]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getDimension", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.getDimension", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getDimension:Int", "kind" : "def"}, {"label" : "setDimension", "tail" : "(value: Int): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.setDimension", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setDimension(value:Int):HasEmbeddingsProperties.this.type", "kind" : "def"}, {"label" : "dimension", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.dimension", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#dimension:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "deserializeStorage", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.storage.HasStorageModel.deserializeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#deserializeStorage(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.storage.HasStorageModel.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "saveStorage", "tail" : "(path: String, spark: SparkSession, withinStorage: Boolean): Unit", "member" : "com.johnsnowlabs.storage.HasStorageModel.saveStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#saveStorage(path:String,spark:org.apache.spark.sql.SparkSession,withinStorage:Boolean):Unit", "kind" : "def"}, {"label" : "serializeStorage", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.storage.HasStorageModel.serializeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#serializeStorage(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getIncludeStorage", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.storage.HasExcludableStorage.getIncludeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getIncludeStorage:Boolean", "kind" : "def"}, {"label" : "setIncludeStorage", "tail" : "(value: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.storage.HasExcludableStorage.setIncludeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setIncludeStorage(value:Boolean):HasExcludableStorage.this.type", "kind" : "def"}, {"label" : "includeStorage", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.storage.HasExcludableStorage.includeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#includeStorage:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getReader", "tail" : "(database: Name): StorageReader[A]", "member" : "com.johnsnowlabs.storage.HasStorageReader.getReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getReader[A](database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.StorageReader[A]", "kind" : "def"}, {"label" : "readers", "tail" : ": Map[Name, StorageReader[_]]", "member" : "com.johnsnowlabs.storage.HasStorageReader.readers", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#readers:scala.collection.mutable.Map[com.johnsnowlabs.storage.Database.Name,com.johnsnowlabs.storage.StorageReader[_]]", "kind" : "val"}, {"label" : "setCaseSensitive", "tail" : "(value: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.setCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setCaseSensitive(value:Boolean):HasCaseSensitiveProperties.this.type", "kind" : "def"}, {"label" : "getCaseSensitive", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.getCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getCaseSensitive:Boolean", "kind" : "def"}, {"label" : "caseSensitive", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.caseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#caseSensitive:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "validateStorageRef", "tail" : "(dataset: Dataset[_], inputCols: Array[String], annotatorType: String): Unit", "member" : "com.johnsnowlabs.storage.HasStorageRef.validateStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#validateStorageRef(dataset:org.apache.spark.sql.Dataset[_],inputCols:Array[String],annotatorType:String):Unit", "kind" : "def"}, {"label" : "getStorageRef", "tail" : "(): String", "member" : "com.johnsnowlabs.storage.HasStorageRef.getStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getStorageRef:String", "kind" : "def"}, {"label" : "setStorageRef", "tail" : "(value: String): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.storage.HasStorageRef.setStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setStorageRef(value:String):HasStorageRef.this.type", "kind" : "def"}, {"label" : "createDatabaseConnection", "tail" : "(database: Name): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasStorageRef.createDatabaseConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#createDatabaseConnection(database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "storageRef", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.storage.HasStorageRef.storageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#storageRef:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getMissAsEmpty", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getMissAsEmpty:Boolean", "kind" : "def"}, {"label" : "setMissAsEmpty", "tail" : "(v: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setMissAsEmpty(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "missAsEmpty", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.missAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#missAsEmpty:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getAllDistancesMetadata", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getAllDistancesMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getAllDistancesMetadata:Boolean", "kind" : "def"}, {"label" : "setAllDistancesMetadata", "tail" : "(v: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setAllDistancesMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setAllDistancesMetadata(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "allDistancesMetadata", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.allDistancesMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#allDistancesMetadata:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getConfidenceFunction", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getConfidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getConfidenceFunction:String", "kind" : "def"}, {"label" : "setConfidenceFunction", "tail" : "(v: String): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setConfidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setConfidenceFunction(v:String):ResolverParams.this.type", "kind" : "def"}, {"label" : "confidenceFunction", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.confidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#confidenceFunction:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getPoolingStrategy", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getPoolingStrategy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getPoolingStrategy:String", "kind" : "def"}, {"label" : "setPoolingStrategy", "tail" : "(value: String): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setPoolingStrategy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setPoolingStrategy(value:String):ResolverParams.this.type", "kind" : "def"}, {"label" : "poolingStrategy", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.poolingStrategy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#poolingStrategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getDistanceWeights", "tail" : "(): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getDistanceWeights", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getDistanceWeights:Array[Double]", "kind" : "def"}, {"label" : "setDistanceWeights", "tail" : "(v: Array[Double]): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setDistanceWeights", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setDistanceWeights(v:Array[Double]):ResolverParams.this.type", "kind" : "def"}, {"label" : "distanceWeights", "tail" : ": DoubleArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.distanceWeights", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#distanceWeights:org.apache.spark.ml.param.DoubleArrayParam", "kind" : "val"}, {"label" : "getEnableLevenshtein", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableLevenshtein", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getEnableLevenshtein:Boolean", "kind" : "def"}, {"label" : "setEnableLevenshtein", "tail" : "(v: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableLevenshtein", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setEnableLevenshtein(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableLevenshtein", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableLevenshtein", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#enableLevenshtein:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableJaroWinkler", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableJaroWinkler", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getEnableJaroWinkler:Boolean", "kind" : "def"}, {"label" : "setEnableJaroWinkler", "tail" : "(v: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableJaroWinkler", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setEnableJaroWinkler(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableJaroWinkler", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableJaroWinkler", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#enableJaroWinkler:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableSorensenDice", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableSorensenDice", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getEnableSorensenDice:Boolean", "kind" : "def"}, {"label" : "setEnableSorensenDice", "tail" : "(v: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableSorensenDice", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setEnableSorensenDice(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableSorensenDice", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableSorensenDice", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#enableSorensenDice:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableJaccard", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableJaccard", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getEnableJaccard:Boolean", "kind" : "def"}, {"label" : "setEnableJaccard", "tail" : "(v: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableJaccard", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setEnableJaccard(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableJaccard", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableJaccard", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#enableJaccard:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableTfidf", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableTfidf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getEnableTfidf:Boolean", "kind" : "def"}, {"label" : "setEnableTfidf", "tail" : "(v: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableTfidf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setEnableTfidf(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableTfidf", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableTfidf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#enableTfidf:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableWmd", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableWmd", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getEnableWmd:Boolean", "kind" : "def"}, {"label" : "setEnableWmd", "tail" : "(v: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableWmd", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setEnableWmd(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableWmd", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableWmd", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#enableWmd:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getExtramassPenalty", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getExtramassPenalty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getExtramassPenalty:Double", "kind" : "def"}, {"label" : "setExtramassPenalty", "tail" : "(emp: Double): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setExtramassPenalty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setExtramassPenalty(emp:Double):ResolverParams.this.type", "kind" : "def"}, {"label" : "extramassPenalty", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.extramassPenalty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#extramassPenalty:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "getThreshold", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getThreshold:Double", "kind" : "def"}, {"label" : "setThreshold", "tail" : "(dist: Double): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setThreshold(dist:Double):ResolverParams.this.type", "kind" : "def"}, {"label" : "threshold", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.threshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#threshold:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "getAlternatives", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getAlternatives", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getAlternatives:Int", "kind" : "def"}, {"label" : "setAlternatives", "tail" : "(a: Int): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setAlternatives", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setAlternatives(a:Int):ResolverParams.this.type", "kind" : "def"}, {"label" : "alternatives", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.alternatives", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#alternatives:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getNeighbours", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getNeighbours:Int", "kind" : "def"}, {"label" : "setNeighbours", "tail" : "(k: Int): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setNeighbours(k:Int):ResolverParams.this.type", "kind" : "def"}, {"label" : "neighbours", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.neighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#neighbours:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getDistanceFunction", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getDistanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getDistanceFunction:String", "kind" : "def"}, {"label" : "setDistanceFunction", "tail" : "(value: String): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setDistanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setDistanceFunction(value:String):ResolverParams.this.type", "kind" : "def"}, {"label" : "distanceFunction", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.distanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#distanceFunction:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): ChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): ChunkEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[ChunkEntityResolverModel]): ChunkEntityResolverModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[ChunkEntityResolverModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ChunkEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ChunkEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ChunkEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ChunkEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ChunkEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ChunkEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): ChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): ChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): ChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): ChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#pretrained():com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": None.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedChunkEntityResolver.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#defaultModelName:None.type", "kind" : "val"}, {"label" : "hitsAtK", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, k: Int, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.hitsAtK", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#hitsAtK(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,k:Int,numOfChars:Int):Double", "kind" : "def"}, {"label" : "accuracy", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.accuracy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#accuracy(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,numOfChars:Int):Double", "kind" : "def"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[ChunkEntityResolverModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (ChunkEntityResolverModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): ChunkEntityResolverModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ChunkEntityResolverModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.ConfidenceFunction", "shortDescription" : "Helper object to use while setting confidenceFunction parameter", "object" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html", "members_object" : [{"label" : "INVERSE", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ConfidenceFunction.INVERSE", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#INVERSE:String", "kind" : "val"}, {"label" : "SOFTMAX", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ConfidenceFunction.SOFTMAX", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#SOFTMAX:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ConfidenceFunction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.DistanceFunction", "shortDescription" : "Helper object to use while setting distanceFunction parameter", "object" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html", "members_object" : [{"label" : "COSINE", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.DistanceFunction.COSINE", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#COSINE:String", "kind" : "val"}, {"label" : "EUCLIDEAN", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.DistanceFunction.EUCLIDEAN", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#EUCLIDEAN:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceFunction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.DistanceResult", "shortDescription" : "Class that contains distance in both representations: weighted and non-weighted, for using later in DistancePooling", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.resolution.DistanceResult#<init>", "error" : "unsupported entity"}, {"label" : "weightedDistance", "tail" : ": Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.DistanceResult.weightedDistance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#weightedDistance:Double", "kind" : "val"}, {"label" : "distance", "tail" : ": Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.DistanceResult.distance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#distance:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/DistanceResult.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.JDataReader", "shortDescription" : "", "members_class" : [{"label" : "getDataAt", "tail" : "(i: Int): JTreeData", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JDataReader.getDataAt", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#getDataAt(i:Int):com.johnsnowlabs.nlp.annotators.resolution.JTreeData", "kind" : "def"}, {"label" : "getEmbeddingsAt", "tail" : "(i: Int): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JDataReader.getEmbeddingsAt", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#getEmbeddingsAt(i:Int):Array[Float]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.JDataReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JDataReader.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeComponent", "shortDescription" : "", "members_case class" : [{"label" : "getData", "tail" : "(): JTreeData", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeComponent.getData", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#getData:com.johnsnowlabs.nlp.annotators.resolution.JTreeData", "kind" : "def"}, {"label" : "getEmbeddings", "tail" : "(): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeComponent.getEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#getEmbeddings:Array[Float]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeComponent#<init>", "error" : "unsupported entity"}, {"label" : "data", "tail" : ": JTreeData", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeComponent.data", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#data:com.johnsnowlabs.nlp.annotators.resolution.JTreeData", "kind" : "val"}, {"label" : "embeddings", "tail" : ": Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeComponent.embeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#embeddings:Array[Float]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeComponent.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeData", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeData#<init>", "error" : "unsupported entity"}, {"label" : "normalized", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeData.normalized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#normalized:String", "kind" : "val"}, {"label" : "trained", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeData.trained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#trained:Array[String]", "kind" : "val"}, {"label" : "code", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeData.code", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#code:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeData.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeReader", "shortDescription" : "", "members_class" : [{"label" : "fromBytes", "tail" : "(source: Array[Byte]): JTreeComponent", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeReader.fromBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#fromBytes(source:Array[Byte]):com.johnsnowlabs.nlp.annotators.resolution.JTreeComponent", "kind" : "def"}, {"label" : "lookup", "tail" : "(index: Int): Option[JTreeComponent]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeReader.lookup", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#lookup(index:Int):Option[com.johnsnowlabs.nlp.annotators.resolution.JTreeComponent]", "kind" : "def"}, {"label" : "emptyValue", "tail" : "(): JTreeComponent", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeReader.emptyValue", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#emptyValue:com.johnsnowlabs.nlp.annotators.resolution.JTreeComponent", "kind" : "def"}, {"label" : "readCacheSize", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeReader.readCacheSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#readCacheSize:Int", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeReader#<init>", "error" : "unsupported entity"}, {"label" : "connection", "tail" : ": RocksDBConnection", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeReader.connection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#connection:com.johnsnowlabs.storage.RocksDBConnection", "kind" : "val"}, {"label" : "caseSensitiveIndex", "tail" : ": Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeReader.caseSensitiveIndex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#caseSensitiveIndex:Boolean", "kind" : "val"}, {"label" : "clear", "tail" : "(): Unit", "member" : "com.johnsnowlabs.storage.StorageReader.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#clear():Unit", "kind" : "def"}, {"label" : "containsIndex", "tail" : "(index: String): Boolean", "member" : "com.johnsnowlabs.storage.StorageReader.containsIndex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#containsIndex(index:String):Boolean", "kind" : "def"}, {"label" : "lookup", "tail" : "(index: String): Option[JTreeComponent]", "member" : "com.johnsnowlabs.storage.StorageReader.lookup", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#lookup(index:String):Option[A]", "kind" : "def"}, {"label" : "_lookup", "tail" : "(index: String): Option[JTreeComponent]", "member" : "com.johnsnowlabs.storage.StorageReader._lookup", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#_lookup(index:String):Option[A]", "kind" : "def"}, {"label" : "lookupDisk", "tail" : "(index: String): Option[JTreeComponent]", "member" : "com.johnsnowlabs.storage.StorageReader.lookupDisk", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#lookupDisk(index:String):Option[A]", "kind" : "def"}, {"label" : "getConnection", "tail" : "(): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasConnection.getConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#getConnection:com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "com.johnsnowlabs.storage.HasConnection.close", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#close():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeReader.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeWriter", "shortDescription" : "", "members_class" : [{"label" : "toBytes", "tail" : "(content: JTreeComponent): Array[Byte]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeWriter.toBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#toBytes(content:com.johnsnowlabs.nlp.annotators.resolution.JTreeComponent):Array[Byte]", "kind" : "def"}, {"label" : "writeBufferSize", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeWriter.writeBufferSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#writeBufferSize:Int", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeWriter#<init>", "error" : "unsupported entity"}, {"label" : "connection", "tail" : ": RocksDBConnection", "member" : "com.johnsnowlabs.nlp.annotators.resolution.JTreeWriter.connection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#connection:com.johnsnowlabs.storage.RocksDBConnection", "kind" : "val"}, {"label" : "close", "tail" : "(): Unit", "member" : "com.johnsnowlabs.storage.StorageBatchWriter.close", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#close():Unit", "kind" : "def"}, {"label" : "flush", "tail" : "(batch: WriteBatch): Unit", "member" : "com.johnsnowlabs.storage.StorageBatchWriter.flush", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#flush(batch:org.rocksdb.WriteBatch):Unit", "kind" : "def"}, {"label" : "merge", "tail" : "(word: String, content: JTreeComponent): Unit", "member" : "com.johnsnowlabs.storage.StorageBatchWriter.merge", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#merge(word:String,content:A):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(word: String, content: JTreeComponent): Unit", "member" : "com.johnsnowlabs.storage.StorageBatchWriter.add", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#add(word:String,content:A):Unit", "kind" : "def"}, {"label" : "merge", "tail" : "(batch: WriteBatch, word: String, content: JTreeComponent): Unit", "member" : "com.johnsnowlabs.storage.StorageWriter.merge", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#merge(batch:org.rocksdb.WriteBatch,word:String,content:A):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(batch: WriteBatch, word: String, content: JTreeComponent): Unit", "member" : "com.johnsnowlabs.storage.StorageWriter.put", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#put(batch:org.rocksdb.WriteBatch,word:String,content:A):Unit", "kind" : "def"}, {"label" : "getConnection", "tail" : "(): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasConnection.getConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#getConnection:com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/JTreeWriter.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.PoolingStrategy", "shortDescription" : "Helper object to use while setting poolingStrategy parameter", "object" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html", "members_object" : [{"label" : "MAX", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.PoolingStrategy.MAX", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#MAX:String", "kind" : "val"}, {"label" : "MIN", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.PoolingStrategy.MIN", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#MIN:String", "kind" : "val"}, {"label" : "AVERAGE", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.PoolingStrategy.AVERAGE", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#AVERAGE:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/PoolingStrategy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver", "members_trait" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): BigChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): BigChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): BigChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): BigChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#pretrained():com.johnsnowlabs.nlp.annotators.resolution.BigChunkEntityResolverModel", "kind" : "def"}, {"label" : "databases", "tail" : ": Array[Name]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver.databases", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#databases:Array[com.johnsnowlabs.storage.JSLDatabase.Name]", "kind" : "val"}, {"label" : "defaultModelName", "tail" : ": None.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedBigChunkEntityResolver.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#defaultModelName:None.type", "kind" : "val"}, {"label" : "hitsAtK", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, k: Int, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.hitsAtK", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#hitsAtK(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,k:Int,numOfChars:Int):Double", "kind" : "def"}, {"label" : "accuracy", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.accuracy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#accuracy(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,numOfChars:Int):Double", "kind" : "def"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#defaultLang:String", "kind" : "val"}, {"label" : "readStorage", "tail" : "(instance: BigChunkEntityResolverModel, path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.storage.StorageReadable.readStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#readStorage(instance:T,path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "loadStorage", "tail" : "(path: String, spark: SparkSession, storageRef: String): Unit", "member" : "com.johnsnowlabs.storage.StorageReadable.loadStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#loadStorage(path:String,spark:org.apache.spark.sql.SparkSession,storageRef:String):Unit", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[BigChunkEntityResolverModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (BigChunkEntityResolverModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): BigChunkEntityResolverModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedBigChunkEntityResolver.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedChunkEntityResolver", "members_trait" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): ChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): ChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): ChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): ChunkEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedChunkEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#pretrained():com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": None.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedChunkEntityResolver.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#defaultModelName:None.type", "kind" : "val"}, {"label" : "hitsAtK", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, k: Int, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.hitsAtK", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#hitsAtK(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,k:Int,numOfChars:Int):Double", "kind" : "def"}, {"label" : "accuracy", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.accuracy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#accuracy(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,numOfChars:Int):Double", "kind" : "def"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[ChunkEntityResolverModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (ChunkEntityResolverModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): ChunkEntityResolverModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedChunkEntityResolver.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedSentenceEntityResolver", "members_trait" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): SentenceEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedSentenceEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): SentenceEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedSentenceEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): SentenceEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedSentenceEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): SentenceEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedSentenceEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#pretrained():com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": None.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedSentenceEntityResolver.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#defaultModelName:None.type", "kind" : "val"}, {"label" : "hitsAtK", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, k: Int, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.hitsAtK", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#hitsAtK(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,k:Int,numOfChars:Int):Double", "kind" : "def"}, {"label" : "accuracy", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.accuracy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#accuracy(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,numOfChars:Int):Double", "kind" : "def"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[SentenceEntityResolverModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (SentenceEntityResolverModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): SentenceEntityResolverModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/ReadablePretrainedSentenceEntityResolver.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach", "shortDescription" : "Contains all the parameters and methods to train a SentenceEntityResolverModel.", "members_class" : [{"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): SentenceEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel", "kind" : "def"}, {"label" : "extractAuxLabelMap", "tail" : "(dataset: Dataset[_]): Map[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.extractAuxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#extractAuxLabelMap(dataset:org.apache.spark.sql.Dataset[_]):scala.collection.Map[String,String]", "kind" : "def"}, {"label" : "normalizedColumnName", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.normalizedColumnName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#normalizedColumnName:String", "kind" : "lazy val"}, {"label" : "labelColumnName", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.labelColumnName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#labelColumnName:String", "kind" : "lazy val"}, {"label" : "embeddingsColumnName", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.embeddingsColumnName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#embeddingsColumnName:String", "kind" : "lazy val"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach#<init>", "error" : "unsupported entity"}, {"label" : "getNormalizedCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.getNormalizedCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getNormalizedCol:String", "kind" : "def"}, {"label" : "setNormalizedCol", "tail" : "(value: String): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.setNormalizedCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setNormalizedCol(value:String):SentenceEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "normalizedCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.normalizedCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#normalizedCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.getLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getLabelCol:String", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.setLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setLabelCol(value:String):SentenceEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.labelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#description:String", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#outputAnnotatorType:SentenceEntityResolverApproach.this.AnnotatorType", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"label" : "getUseAuxLabel", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.getUseAuxLabel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getUseAuxLabel():Boolean", "kind" : "def"}, {"label" : "setUseAuxLabel", "tail" : "(b: Boolean): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.setUseAuxLabel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setUseAuxLabel(b:Boolean):SentenceEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "useAuxLabel", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.useAuxLabel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#useAuxLabel:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getReturnCosineDistances", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.getReturnCosineDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getReturnCosineDistances:Boolean", "kind" : "def"}, {"label" : "setReturnCosineDistances", "tail" : "(value: Boolean): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.setReturnCosineDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setReturnCosineDistances(value:Boolean):SentenceEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "returnCosineDistances", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.returnCosineDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#returnCosineDistances:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getReturnAllKEmbeddings", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.getReturnAllKEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getReturnAllKEmbeddings():Boolean", "kind" : "def"}, {"label" : "setReturnAllKEmbeddings", "tail" : "(b: Boolean): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.setReturnAllKEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setReturnAllKEmbeddings(b:Boolean):SentenceEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "returnAllKEmbeddings", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.returnAllKEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#returnAllKEmbeddings:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "auxLabelMap", "tail" : ": StructFeature[Map[String, String]]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.auxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#auxLabelMap:com.johnsnowlabs.nlp.serialization.StructFeature[scala.collection.Map[String,String]]", "kind" : "val"}, {"label" : "getAuxLabelMap", "tail" : "(): Map[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.getAuxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getAuxLabelMap():scala.collection.Map[String,String]", "kind" : "def"}, {"label" : "setAuxLabelMap", "tail" : "(m: Map[String, String]): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.setAuxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setAuxLabelMap(m:scala.collection.Map[String,String]):SentenceEntityResolverApproach.this.type", "kind" : "def"}, {"label" : "getAuxLabelCol", "tail" : "(): Option[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.getAuxLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getAuxLabelCol():Option[String]", "kind" : "def"}, {"label" : "auxLabelCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.auxLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#auxLabelCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setAuxLabelCol", "tail" : "(c: String): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.setAuxLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setAuxLabelCol(c:String):SentenceEntityResolverApproach.this.type", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverApproach.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#uid:String", "kind" : "val"}, {"label" : "setCaseSensitive", "tail" : "(value: Boolean): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.setCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setCaseSensitive(value:Boolean):HasCaseSensitiveProperties.this.type", "kind" : "def"}, {"label" : "getCaseSensitive", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.getCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getCaseSensitive:Boolean", "kind" : "def"}, {"label" : "caseSensitive", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.caseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#caseSensitive:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "getMissAsEmpty", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getMissAsEmpty:Boolean", "kind" : "def"}, {"label" : "setMissAsEmpty", "tail" : "(v: Boolean): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setMissAsEmpty(v:Boolean):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "missAsEmpty", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.missAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#missAsEmpty:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getConfidenceFunction", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getConfidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getConfidenceFunction:String", "kind" : "def"}, {"label" : "setConfidenceFunction", "tail" : "(v: String): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setConfidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setConfidenceFunction(v:String):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "confidenceFunction", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.confidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#confidenceFunction:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getThreshold", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getThreshold:Double", "kind" : "def"}, {"label" : "setThreshold", "tail" : "(dist: Double): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setThreshold(dist:Double):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "threshold", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.threshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#threshold:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "getNeighbours", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getNeighbours:Int", "kind" : "def"}, {"label" : "setNeighbours", "tail" : "(k: Int): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setNeighbours(k:Int):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "neighbours", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.neighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#neighbours:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getDistanceFunction", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getDistanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getDistanceFunction:String", "kind" : "def"}, {"label" : "setDistanceFunction", "tail" : "(value: String): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setDistanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setDistanceFunction(value:String):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "distanceFunction", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.distanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#distanceFunction:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[SentenceEntityResolverModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): SentenceEntityResolverModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): SentenceEntityResolverModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: SentenceEntityResolverModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): SentenceEntityResolverApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[SentenceEntityResolverModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): SentenceEntityResolverModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): SentenceEntityResolverModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): SentenceEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): SentenceEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): SentenceEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): SentenceEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): SentenceEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): SentenceEntityResolverApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverApproach.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel", "shortDescription" : "The model transforms a dataset with Input Annotation type SENTENCE_EMBEDDINGS, coming from e.g.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html", "members_class" : [{"label" : "databases", "tail" : ": Array[Name]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.databases", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#databases:Array[com.johnsnowlabs.storage.Database.Name]", "kind" : "val"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "createReader", "tail" : "(database: Name, connection: RocksDBConnection): WordEmbeddingsReader", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.createReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#createReader(database:com.johnsnowlabs.storage.Database.Name,connection:com.johnsnowlabs.storage.RocksDBConnection):com.johnsnowlabs.nlp.embeddings.WordEmbeddingsReader", "kind" : "def"}, {"label" : "getSearchTree", "tail" : "(): SerializableKDTree[TreeData]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.getSearchTree", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getSearchTree:com.johnsnowlabs.ml.search.SerializableKDTree[com.johnsnowlabs.nlp.annotators.resolution.TreeData]", "kind" : "def"}, {"label" : "setSearchTree", "tail" : "(tree: SerializableKDTree[TreeData]): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.setSearchTree", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setSearchTree(tree:com.johnsnowlabs.ml.search.SerializableKDTree[com.johnsnowlabs.nlp.annotators.resolution.TreeData]):SentenceEntityResolverModel.this.type", "kind" : "def"}, {"label" : "searchTree", "tail" : ": StructFeature_HadoopFix[SerializableKDTree[TreeData]]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.searchTree", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#searchTree:com.johnsnowlabs.nlp.annotators.resolution.util.StructFeature_HadoopFix[com.johnsnowlabs.ml.search.SerializableKDTree[com.johnsnowlabs.nlp.annotators.resolution.TreeData]]", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#outputAnnotatorType:SentenceEntityResolverModel.this.AnnotatorType", "kind" : "val"}, {"label" : "getUseAuxLabel", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.getUseAuxLabel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getUseAuxLabel():Boolean", "kind" : "def"}, {"label" : "setUseAuxLabel", "tail" : "(b: Boolean): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.setUseAuxLabel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setUseAuxLabel(b:Boolean):SentenceEntityResolverModel.this.type", "kind" : "def"}, {"label" : "useAuxLabel", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.useAuxLabel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#useAuxLabel:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getReturnEuclideanDistances", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.getReturnEuclideanDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getReturnEuclideanDistances:Boolean", "kind" : "def"}, {"label" : "setReturnEuclideanDistances", "tail" : "(value: Boolean): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.setReturnEuclideanDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setReturnEuclideanDistances(value:Boolean):SentenceEntityResolverModel.this.type", "kind" : "def"}, {"label" : "getReturnCosineDistances", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.getReturnCosineDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getReturnCosineDistances:Boolean", "kind" : "def"}, {"label" : "setReturnCosineDistances", "tail" : "(value: Boolean): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.setReturnCosineDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setReturnCosineDistances(value:Boolean):SentenceEntityResolverModel.this.type", "kind" : "def"}, {"label" : "returnCosineDistances", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.returnCosineDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#returnCosineDistances:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "returnEuclideanDistances", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.returnEuclideanDistances", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#returnEuclideanDistances:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel#<init>", "error" : "unsupported entity"}, {"label" : "getReturnAllKEmbeddings", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.getReturnAllKEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getReturnAllKEmbeddings():Boolean", "kind" : "def"}, {"label" : "setReturnAllKEmbeddings", "tail" : "(b: Boolean): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.setReturnAllKEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setReturnAllKEmbeddings(b:Boolean):SentenceEntityResolverModel.this.type", "kind" : "def"}, {"label" : "returnAllKEmbeddings", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.returnAllKEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#returnAllKEmbeddings:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getAuxLabelCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.getAuxLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getAuxLabelCol():String", "kind" : "def"}, {"label" : "setAuxLabelCol", "tail" : "(c: String): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.setAuxLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setAuxLabelCol(c:String):SentenceEntityResolverModel.this.type", "kind" : "def"}, {"label" : "auxLabelCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.auxLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#auxLabelCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "auxLabelMap", "tail" : ": StructFeature[Map[String, String]]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.auxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#auxLabelMap:com.johnsnowlabs.nlp.serialization.StructFeature[scala.collection.Map[String,String]]", "kind" : "val"}, {"label" : "getAuxLabelMap", "tail" : "(): Map[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.getAuxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getAuxLabelMap():scala.collection.Map[String,String]", "kind" : "def"}, {"label" : "setAuxLabelMap", "tail" : "(m: Map[String, String]): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.setAuxLabelMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setAuxLabelMap(m:scala.collection.Map[String,String]):SentenceEntityResolverModel.this.type", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "wrapSentenceEmbeddingsMetadata", "tail" : "(col: Column, embeddingsDim: Int, embeddingsRef: Option[String]): Column", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.wrapSentenceEmbeddingsMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#wrapSentenceEmbeddingsMetadata(col:org.apache.spark.sql.Column,embeddingsDim:Int,embeddingsRef:Option[String]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "wrapEmbeddingsMetadata", "tail" : "(col: Column, embeddingsDim: Int, embeddingsRef: Option[String]): Column", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.wrapEmbeddingsMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#wrapEmbeddingsMetadata(col:org.apache.spark.sql.Column,embeddingsDim:Int,embeddingsRef:Option[String]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getDimension", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.getDimension", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getDimension:Int", "kind" : "def"}, {"label" : "setDimension", "tail" : "(value: Int): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.setDimension", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setDimension(value:Int):HasEmbeddingsProperties.this.type", "kind" : "def"}, {"label" : "dimension", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.embeddings.HasEmbeddingsProperties.dimension", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#dimension:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "deserializeStorage", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.storage.HasStorageModel.deserializeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#deserializeStorage(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.storage.HasStorageModel.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "saveStorage", "tail" : "(path: String, spark: SparkSession, withinStorage: Boolean): Unit", "member" : "com.johnsnowlabs.storage.HasStorageModel.saveStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#saveStorage(path:String,spark:org.apache.spark.sql.SparkSession,withinStorage:Boolean):Unit", "kind" : "def"}, {"label" : "serializeStorage", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.storage.HasStorageModel.serializeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#serializeStorage(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getIncludeStorage", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.storage.HasExcludableStorage.getIncludeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getIncludeStorage:Boolean", "kind" : "def"}, {"label" : "setIncludeStorage", "tail" : "(value: Boolean): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.storage.HasExcludableStorage.setIncludeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setIncludeStorage(value:Boolean):HasExcludableStorage.this.type", "kind" : "def"}, {"label" : "includeStorage", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.storage.HasExcludableStorage.includeStorage", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#includeStorage:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getReader", "tail" : "(database: Name): StorageReader[A]", "member" : "com.johnsnowlabs.storage.HasStorageReader.getReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getReader[A](database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.StorageReader[A]", "kind" : "def"}, {"label" : "readers", "tail" : ": Map[Name, StorageReader[_]]", "member" : "com.johnsnowlabs.storage.HasStorageReader.readers", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#readers:scala.collection.mutable.Map[com.johnsnowlabs.storage.Database.Name,com.johnsnowlabs.storage.StorageReader[_]]", "kind" : "val"}, {"label" : "setCaseSensitive", "tail" : "(value: Boolean): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.setCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setCaseSensitive(value:Boolean):HasCaseSensitiveProperties.this.type", "kind" : "def"}, {"label" : "getCaseSensitive", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.getCaseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getCaseSensitive:Boolean", "kind" : "def"}, {"label" : "caseSensitive", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.HasCaseSensitiveProperties.caseSensitive", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#caseSensitive:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "validateStorageRef", "tail" : "(dataset: Dataset[_], inputCols: Array[String], annotatorType: String): Unit", "member" : "com.johnsnowlabs.storage.HasStorageRef.validateStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#validateStorageRef(dataset:org.apache.spark.sql.Dataset[_],inputCols:Array[String],annotatorType:String):Unit", "kind" : "def"}, {"label" : "getStorageRef", "tail" : "(): String", "member" : "com.johnsnowlabs.storage.HasStorageRef.getStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getStorageRef:String", "kind" : "def"}, {"label" : "setStorageRef", "tail" : "(value: String): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.storage.HasStorageRef.setStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setStorageRef(value:String):HasStorageRef.this.type", "kind" : "def"}, {"label" : "createDatabaseConnection", "tail" : "(database: Name): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasStorageRef.createDatabaseConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#createDatabaseConnection(database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "storageRef", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.storage.HasStorageRef.storageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#storageRef:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getMissAsEmpty", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getMissAsEmpty:Boolean", "kind" : "def"}, {"label" : "setMissAsEmpty", "tail" : "(v: Boolean): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setMissAsEmpty(v:Boolean):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "missAsEmpty", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.missAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#missAsEmpty:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getConfidenceFunction", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getConfidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getConfidenceFunction:String", "kind" : "def"}, {"label" : "setConfidenceFunction", "tail" : "(v: String): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setConfidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setConfidenceFunction(v:String):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "confidenceFunction", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.confidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#confidenceFunction:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getThreshold", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getThreshold:Double", "kind" : "def"}, {"label" : "setThreshold", "tail" : "(dist: Double): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setThreshold(dist:Double):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "threshold", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.threshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#threshold:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "getNeighbours", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getNeighbours:Int", "kind" : "def"}, {"label" : "setNeighbours", "tail" : "(k: Int): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setNeighbours(k:Int):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "neighbours", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.neighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#neighbours:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getDistanceFunction", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getDistanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getDistanceFunction:String", "kind" : "def"}, {"label" : "setDistanceFunction", "tail" : "(value: String): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setDistanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setDistanceFunction(value:String):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "distanceFunction", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.distanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#distanceFunction:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): SentenceEntityResolverModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): SentenceEntityResolverModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[SentenceEntityResolverModel]): SentenceEntityResolverModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[SentenceEntityResolverModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): SentenceEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): SentenceEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): SentenceEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): SentenceEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): SentenceEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): SentenceEntityResolverModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): SentenceEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedSentenceEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): SentenceEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedSentenceEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): SentenceEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedSentenceEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): SentenceEntityResolverModel", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedSentenceEntityResolver.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#pretrained():com.johnsnowlabs.nlp.annotators.resolution.SentenceEntityResolverModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": None.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.ReadablePretrainedSentenceEntityResolver.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#defaultModelName:None.type", "kind" : "val"}, {"label" : "hitsAtK", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, k: Int, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.hitsAtK", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#hitsAtK(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,k:Int,numOfChars:Int):Double", "kind" : "def"}, {"label" : "accuracy", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.accuracy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#accuracy(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,numOfChars:Int):Double", "kind" : "def"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[SentenceEntityResolverModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (SentenceEntityResolverModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): SentenceEntityResolverModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/SentenceEntityResolverModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.TreeData", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.resolution.TreeData#<init>", "error" : "unsupported entity"}, {"label" : "normalized", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.TreeData.normalized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#normalized:String", "kind" : "val"}, {"label" : "trained", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.TreeData.trained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#trained:Array[String]", "kind" : "val"}, {"label" : "code", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.TreeData.code", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#code:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/TreeData.html", "kind" : "case class"}], "com.johnsnowlabs.ml.tensorflow" : [{"name" : "com.johnsnowlabs.ml.tensorflow.AssertionBatch", "shortDescription" : "", "members_class" : [{"member" : "com.johnsnowlabs.ml.tensorflow.AssertionBatch#<init>", "error" : "unsupported entity"}, {"label" : "maxLength", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionBatch.maxLength", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#maxLength:Int", "kind" : "val"}, {"label" : "end", "tail" : ": Array[Int]", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionBatch.end", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#end:Array[Int]", "kind" : "val"}, {"label" : "start", "tail" : ": Array[Int]", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionBatch.start", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#start:Array[Int]", "kind" : "val"}, {"label" : "sentenceLengths", "tail" : ": Array[Int]", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionBatch.sentenceLengths", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#sentenceLengths:Array[Int]", "kind" : "val"}, {"label" : "wordEmbeddings", "tail" : ": Array[Array[Array[Float]]]", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionBatch.wordEmbeddings", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#wordEmbeddings:Array[Array[Array[Float]]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionBatch.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder", "shortDescription" : "This class contains methods for working with assertion dataset, such as split, normalise, decode", "members_class" : [{"label" : "centerIfTooLong", "tail" : "(maxSentLen: Int)(sentence: WordpieceEmbeddingsSentence, start: Int, end: Int): (WordpieceEmbeddingsSentence, Int, Int)", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.centerIfTooLong", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#centerIfTooLong(maxSentLen:Int)(sentence:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence,start:Int,end:Int):(com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence,Int,Int)", "kind" : "def"}, {"label" : "encodeOneHot", "tail" : "(label: String): Array[Float]", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.encodeOneHot", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#encodeOneHot(label:String):Array[Float]", "kind" : "def"}, {"label" : "encodeInputData", "tail" : "(sentences: Array[WordpieceEmbeddingsSentence], start: Array[Int], end: Array[Int], embeddingsDim: Int, maxSentenceLength: Int): AssertionBatch", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.encodeInputData", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#encodeInputData(sentences:Array[com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence],start:Array[Int],end:Array[Int],embeddingsDim:Int,maxSentenceLength:Int):com.johnsnowlabs.ml.tensorflow.AssertionBatch", "kind" : "def"}, {"label" : "l2norm", "tail" : "(xs: Array[Float]): Float", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.l2norm", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#l2norm(xs:Array[Float]):Float", "kind" : "def"}, {"label" : "normalize", "tail" : "(vec: Array[Float]): Array[Float]", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.normalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#normalize(vec:Array[Float]):Array[Float]", "kind" : "def"}, {"label" : "randomSplit", "tail" : "(dataset: Seq[Datapoint], fraction: Float): (Seq[Datapoint], Seq[Datapoint])", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.randomSplit", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#randomSplit(dataset:Seq[com.johnsnowlabs.nlp.annotators.assertion.Datapoint],fraction:Float):(Seq[com.johnsnowlabs.nlp.annotators.assertion.Datapoint],Seq[com.johnsnowlabs.nlp.annotators.assertion.Datapoint])", "kind" : "def"}, {"label" : "decodeOutputData", "tail" : "(tagIds: Array[Int]): Array[String]", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.decodeOutputData", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#decodeOutputData(tagIds:Array[Int]):Array[String]", "kind" : "def"}, {"label" : "tags", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.tags", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#tags:Array[String]", "kind" : "val"}, {"label" : "tags2Id", "tail" : ": Map[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.tags2Id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#tags2Id:Map[String,Int]", "kind" : "val"}, {"label" : "targetMark", "tail" : ": Array[Float]", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.targetMark", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#targetMark:Array[Float]", "kind" : "val"}, {"label" : "nonTargetMark", "tail" : ": Array[Float]", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.nonTargetMark", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#nonTargetMark:Array[Float]", "kind" : "val"}, {"member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder#<init>", "error" : "unsupported entity"}, {"label" : "extraFeatSize", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.extraFeatSize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#extraFeatSize:Int", "kind" : "val"}, {"label" : "params", "tail" : ": DatasetEncoderParams", "member" : "com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder.params", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#params:com.johnsnowlabs.ml.tensorflow.DatasetEncoderParams", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/AssertionDatasetEncoder.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion", "shortDescription" : "Created by jose on 15\/03\/18.", "members_class" : [{"label" : "measure", "tail" : "(labeled: Array[(WordpieceEmbeddingsSentence, AssertionAnnotationWithLabel)], batchSize: Int, outputLogsPath: String, embeddingsDim: Int, maxLen: Int, configProtoBytes: Option[Array[Byte]], enableOutputLogs: Boolean, extended: Boolean, includeConfidence: Boolean, uuid: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion.measure", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#measure(labeled:Array[(com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence,com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel)],batchSize:Int,outputLogsPath:String,embeddingsDim:Int,maxLen:Int,configProtoBytes:Option[Array[Byte]],enableOutputLogs:Boolean,extended:Boolean,includeConfidence:Boolean,uuid:String):Unit", "kind" : "def"}, {"label" : "tagsForTokens", "tail" : "(labels: Array[Array[(String, Option[Double])]], pieces: Array[WordpieceEmbeddingsSentence]): Array[Array[(String, Option[Double])]]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion.tagsForTokens", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#tagsForTokens(labels:Array[Array[(String,Option[Double])]],pieces:Array[com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence]):Array[Array[(String,Option[Double])]]", "kind" : "def"}, {"label" : "tagsForTokens", "tail" : "(labels: Array[(String, Option[Double])], pieces: WordpieceEmbeddingsSentence): Array[(String, Option[Double])]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion.tagsForTokens", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#tagsForTokens(labels:Array[(String,Option[Double])],pieces:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence):Array[(String,Option[Double])]", "kind" : "def"}, {"label" : "calcStat", "tail" : "(tp: Int, fp: Int, fn: Int): (Float, Float, Float)", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion.calcStat", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#calcStat(tp:Int,fp:Int,fn:Int):(Float,Float,Float)", "kind" : "def"}, {"label" : "getPiecesTags", "tail" : "(tokenTags: Array[TextSentenceLabels], sentences: Array[WordpieceEmbeddingsSentence]): Array[Array[String]]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion.getPiecesTags", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#getPiecesTags(tokenTags:Array[com.johnsnowlabs.ml.crf.TextSentenceLabels],sentences:Array[com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence]):Array[Array[String]]", "kind" : "def"}, {"label" : "getPiecesTags", "tail" : "(tokenTags: TextSentenceLabels, sentence: WordpieceEmbeddingsSentence): Array[String]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion.getPiecesTags", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#getPiecesTags(tokenTags:com.johnsnowlabs.ml.crf.TextSentenceLabels,sentence:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence):Array[String]", "kind" : "def"}, {"label" : "train", "tail" : "(trainDataset: Array[(WordpieceEmbeddingsSentence, AssertionAnnotationWithLabel)], lr: Float, batchSize: Int, dropout: Float, startEpoch: Int, endEpoch: Int, maxLen: Int, embeddingsDim: Int, graphFileName: String, test: Array[(WordpieceEmbeddingsSentence, AssertionAnnotationWithLabel)], configProtoBytes: Option[Array[Byte]], validationSplit: Float, includeConfidence: Boolean, enableOutputLogs: Boolean, outputLogsPath: String, uuid: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion.train", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#train(trainDataset:Array[(com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence,com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel)],lr:Float,batchSize:Int,dropout:Float,startEpoch:Int,endEpoch:Int,maxLen:Int,embeddingsDim:Int,graphFileName:String,test:Array[(com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence,com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel)],configProtoBytes:Option[Array[Byte]],validationSplit:Float,includeConfidence:Boolean,enableOutputLogs:Boolean,outputLogsPath:String,uuid:String):Unit", "kind" : "def"}, {"label" : "predict", "tail" : "(chunks: Array[IndexedChunk], maxLen: Int, embeddingsDim: Int, configProtoBytes: Option[Array[Byte]], includeConfidence: Boolean): Array[AssertionAnnotationWithLabel]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion.predict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#predict(chunks:Array[com.johnsnowlabs.nlp.annotators.datasets.IndexedChunk],maxLen:Int,embeddingsDim:Int,configProtoBytes:Option[Array[Byte]],includeConfidence:Boolean):Array[com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel]", "kind" : "def"}, {"member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion#<init>", "error" : "unsupported entity"}, {"label" : "verboseLevel", "tail" : ": nlp.annotators.ner.Verbose.Value", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion.verboseLevel", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#verboseLevel:com.johnsnowlabs.nlp.annotators.ner.Verbose.Value", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion.batchSize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#batchSize:Int", "kind" : "val"}, {"label" : "encoder", "tail" : ": AssertionDatasetEncoder", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion.encoder", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#encoder:com.johnsnowlabs.ml.tensorflow.AssertionDatasetEncoder", "kind" : "val"}, {"label" : "tensorflow", "tail" : ": TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowAssertion.tensorflow", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "val"}, {"label" : "outputLog", "tail" : "(value: ⇒ String, uuid: String, shouldLog: Boolean, outputLogsPath: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.outputLog", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#outputLog(value:=>String,uuid:String,shouldLog:Boolean,outputLogsPath:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(value: ⇒ String, minLevel: Level): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.log", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#log(value:=>String,minLevel:com.johnsnowlabs.nlp.annotators.ner.Verbose.Level):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.logger", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "getLogName", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.getLogName", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#getLogName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowAssertion.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.TensorflowBertRE", "shortDescription" : "", "members_class" : [{"label" : "predict", "tail" : "(batch: Seq[WordpieceTokenizedSentence], maxSentenceLength: Int): Array[(Int, Int, Float)]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowBertRE.predict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#predict(batch:Seq[com.johnsnowlabs.nlp.annotators.common.WordpieceTokenizedSentence],maxSentenceLength:Int):Array[(Int,Int,Float)]", "kind" : "def"}, {"label" : "encode", "tail" : "(sentences: Seq[WordpieceTokenizedSentence], maxSequenceLength: Int): Seq[(Array[Int], Int, Int)]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowBertRE.encode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#encode(sentences:Seq[com.johnsnowlabs.nlp.annotators.common.WordpieceTokenizedSentence],maxSequenceLength:Int):Seq[(Array[Int],Int,Int)]", "kind" : "def"}, {"member" : "com.johnsnowlabs.ml.tensorflow.TensorflowBertRE#<init>", "error" : "unsupported entity"}, {"label" : "bertREConfig", "tail" : ": BertREConfig", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowBertRE.bertREConfig", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#bertREConfig:com.johnsnowlabs.nlp.annotators.re.BertREConfig", "kind" : "val"}, {"label" : "tensorflow", "tail" : ": TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowBertRE.tensorflow", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowBertRE.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier", "shortDescription" : "", "members_class" : [{"label" : "predict", "tail" : "(features: Array[Array[Float]], configProtoBytes: Option[Array[Byte]]): (Array[Long], Array[Float])", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier.predict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#predict(features:Array[Array[Float]],configProtoBytes:Option[Array[Byte]]):(Array[Long],Array[Float])", "kind" : "def"}, {"label" : "internalPredict", "tail" : "(features: Array[Array[Float]], labels: Array[Array[Float]], configProtoBytes: Option[Array[Byte]], classWeights: Array[Float]): (Float, Float)", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier.internalPredict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#internalPredict(features:Array[Array[Float]],labels:Array[Array[Float]],configProtoBytes:Option[Array[Byte]],classWeights:Array[Float]):(Float,Float)", "kind" : "def"}, {"label" : "train", "tail" : "(features: Array[Array[Float]], labels: Array[Array[Float]], batchSize: Int, epochsNumber: Int, learningRate: Float, validationSplit: Float, classWeights: Array[Float], dropout: Float, configProtoBytes: Option[Array[Byte]], uuid: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier.train", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#train(features:Array[Array[Float]],labels:Array[Array[Float]],batchSize:Int,epochsNumber:Int,learningRate:Float,validationSplit:Float,classWeights:Array[Float],dropout:Float,configProtoBytes:Option[Array[Byte]],uuid:String):Unit", "kind" : "def"}, {"label" : "logMessage", "tail" : "(message: String, uuid: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier.logMessage", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#logMessage(message:String,uuid:String):Unit", "kind" : "def"}, {"label" : "getTFModel", "tail" : "(): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier.getTFModel", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#getTFModel:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"member" : "com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier#<init>", "error" : "unsupported entity"}, {"label" : "outputLogsPath", "tail" : ": Option[String]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier.outputLogsPath", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#outputLogsPath:Option[String]", "kind" : "val"}, {"label" : "verboseLevel", "tail" : ": nlp.annotators.ner.Verbose.Value", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier.verboseLevel", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#verboseLevel:com.johnsnowlabs.nlp.annotators.ner.Verbose.Value", "kind" : "val"}, {"label" : "model", "tail" : ": TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier.model", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#model:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "val"}, {"label" : "outputLog", "tail" : "(value: ⇒ String, uuid: String, shouldLog: Boolean, outputLogsPath: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.outputLog", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#outputLog(value:=>String,uuid:String,shouldLog:Boolean,outputLogsPath:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(value: ⇒ String, minLevel: Level): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.log", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#log(value:=>String,minLevel:com.johnsnowlabs.nlp.annotators.ner.Verbose.Level):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.logger", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "getLogName", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.getLogName", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#getLogName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowGenericClassifier.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.TensorflowMedicalNer", "shortDescription" : "", "members_class" : [{"label" : "train", "tail" : "(trainDataset: ⇒ Iterator[Array[(TextSentenceLabels, WordpieceEmbeddingsSentence)]], trainLength: Long, validDataset: ⇒ Iterator[Array[(TextSentenceLabels, WordpieceEmbeddingsSentence)]], validLength: Long, lr: Float, po: Float, dropout: Float, startEpoch: Int, endEpoch: Int, graphFileName: String, test: ⇒ Iterator[Array[(TextSentenceLabels, WordpieceEmbeddingsSentence)]], configProtoBytes: Option[Array[Byte]], validationSplit: Float, evaluationLogExtended: Boolean, includeConfidence: Boolean, enableOutputLogs: Boolean, outputLogsPath: String, uuid: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowMedicalNer.train", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#train(trainDataset:=>Iterator[Array[(com.johnsnowlabs.ml.crf.TextSentenceLabels,com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence)]],trainLength:Long,validDataset:=>Iterator[Array[(com.johnsnowlabs.ml.crf.TextSentenceLabels,com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence)]],validLength:Long,lr:Float,po:Float,dropout:Float,startEpoch:Int,endEpoch:Int,graphFileName:String,test:=>Iterator[Array[(com.johnsnowlabs.ml.crf.TextSentenceLabels,com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence)]],configProtoBytes:Option[Array[Byte]],validationSplit:Float,evaluationLogExtended:Boolean,includeConfidence:Boolean,enableOutputLogs:Boolean,outputLogsPath:String,uuid:String):Unit", "kind" : "def"}, {"label" : "predict", "tail" : "(dataset: Array[WordpieceEmbeddingsSentence], configProtoBytes: Option[Array[Byte]], includeConfidence: Boolean): Array[Array[(String, Option[Array[Map[String, String]]])]]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowMedicalNer.predict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#predict(dataset:Array[com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence],configProtoBytes:Option[Array[Byte]],includeConfidence:Boolean):Array[Array[(String,Option[Array[scala.collection.Map[String,String]]])]]", "kind" : "def"}, {"member" : "com.johnsnowlabs.ml.tensorflow.TensorflowMedicalNer#<init>", "error" : "unsupported entity"}, {"label" : "verboseLevel", "tail" : ": nlp.annotators.ner.Verbose.Value", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowMedicalNer.verboseLevel", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#verboseLevel:com.johnsnowlabs.nlp.annotators.ner.Verbose.Value", "kind" : "val"}, {"label" : "batchSize", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowMedicalNer.batchSize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#batchSize:Int", "kind" : "val"}, {"label" : "encoder", "tail" : ": NerDatasetEncoder", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowMedicalNer.encoder", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#encoder:com.johnsnowlabs.ml.tensorflow.NerDatasetEncoder", "kind" : "val"}, {"label" : "tensorflow", "tail" : ": TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowMedicalNer.tensorflow", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "val"}, {"label" : "measure", "tail" : "(labeled: Iterator[Array[(TextSentenceLabels, WordpieceEmbeddingsSentence)]], extended: Boolean, includeConfidence: Boolean, enableOutputLogs: Boolean, outputLogsPath: String, uuid: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowNer.measure", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#measure(labeled:Iterator[Array[(com.johnsnowlabs.ml.crf.TextSentenceLabels,com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence)]],extended:Boolean,includeConfidence:Boolean,enableOutputLogs:Boolean,outputLogsPath:String,uuid:String):Unit", "kind" : "def"}, {"label" : "tagsForTokens", "tail" : "(labels: Array[Array[(String, Option[Array[Map[String, String]]])]], pieces: Array[WordpieceEmbeddingsSentence]): Array[Array[(String, Option[Array[Map[String, String]]])]]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowNer.tagsForTokens", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#tagsForTokens(labels:Array[Array[(String,Option[Array[scala.collection.Map[String,String]]])]],pieces:Array[com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence]):Array[Array[(String,Option[Array[scala.collection.Map[String,String]]])]]", "kind" : "def"}, {"label" : "tagsForTokens", "tail" : "(labels: Array[(String, Option[Array[Map[String, String]]])], pieces: WordpieceEmbeddingsSentence): Array[(String, Option[Array[Map[String, String]]])]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowNer.tagsForTokens", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#tagsForTokens(labels:Array[(String,Option[Array[scala.collection.Map[String,String]]])],pieces:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence):Array[(String,Option[Array[scala.collection.Map[String,String]]])]", "kind" : "def"}, {"label" : "calcStat", "tail" : "(tp: Int, fp: Int, fn: Int): (Float, Float, Float)", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowNer.calcStat", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#calcStat(tp:Int,fp:Int,fn:Int):(Float,Float,Float)", "kind" : "def"}, {"label" : "getPiecesTags", "tail" : "(tokenTags: Array[TextSentenceLabels], sentences: Array[WordpieceEmbeddingsSentence]): Array[Array[String]]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowNer.getPiecesTags", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#getPiecesTags(tokenTags:Array[com.johnsnowlabs.ml.crf.TextSentenceLabels],sentences:Array[com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence]):Array[Array[String]]", "kind" : "def"}, {"label" : "getPiecesTags", "tail" : "(tokenTags: TextSentenceLabels, sentence: WordpieceEmbeddingsSentence): Array[String]", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowNer.getPiecesTags", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#getPiecesTags(tokenTags:com.johnsnowlabs.ml.crf.TextSentenceLabels,sentence:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence):Array[String]", "kind" : "def"}, {"label" : "getLogName", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.TensorflowNer.getLogName", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#getLogName:String", "kind" : "def"}, {"label" : "outputLog", "tail" : "(value: ⇒ String, uuid: String, shouldLog: Boolean, outputLogsPath: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.outputLog", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#outputLog(value:=>String,uuid:String,shouldLog:Boolean,outputLogsPath:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(value: ⇒ String, minLevel: Level): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.log", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#log(value:=>String,minLevel:com.johnsnowlabs.nlp.annotators.ner.Verbose.Level):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.logger", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/TensorflowMedicalNer.html", "kind" : "class"}], "com.johnsnowlabs.nlp.eval" : [{"name" : "com.johnsnowlabs.nlp.eval.BaseChunk", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.eval.BaseChunk#<init>", "error" : "unsupported entity"}, {"label" : "tokens", "tail" : ": Seq[BaseToken]", "member" : "com.johnsnowlabs.nlp.eval.BaseChunk.tokens", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#tokens:Seq[com.johnsnowlabs.nlp.eval.BaseToken]", "kind" : "val"}, {"label" : "entity", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.eval.BaseChunk.entity", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#entity:String", "kind" : "val"}, {"label" : "end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.eval.BaseChunk.end", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#end:Int", "kind" : "val"}, {"label" : "begin", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.eval.BaseChunk.begin", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#begin:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/eval\/BaseChunk.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.eval.BaseToken", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.eval.BaseToken#<init>", "error" : "unsupported entity"}, {"label" : "token", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.eval.BaseToken.token", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#token:String", "kind" : "val"}, {"label" : "end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.eval.BaseToken.end", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#end:Int", "kind" : "val"}, {"label" : "begin", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.eval.BaseToken.begin", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#begin:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/eval\/BaseToken.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.eval.EvaluationMetrics", "members_trait" : [{"label" : "calcStat", "tail" : "(correct: Long, predicted: Long, predictedCorrect: Long): (Float, Float, Float)", "member" : "com.johnsnowlabs.nlp.eval.EvaluationMetrics.calcStat", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#calcStat(correct:Long,predicted:Long,predictedCorrect:Long):(Float,Float,Float)", "kind" : "def"}, {"label" : "calcStat", "tail" : "(predicted: Seq[T], gold: Seq[T]): (Float, Float, Float)", "member" : "com.johnsnowlabs.nlp.eval.EvaluationMetrics.calcStat", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#calcStat[T](predicted:Seq[T],gold:Seq[T]):(Float,Float,Float)", "kind" : "def"}, {"label" : "confusionMatrix", "tail" : "(predicted: Seq[T], gold: Seq[T]): Map[T, Map[T, Int]]", "member" : "com.johnsnowlabs.nlp.eval.EvaluationMetrics.confusionMatrix", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#confusionMatrix[T](predicted:Seq[T],gold:Seq[T]):scala.collection.immutable.Map[T,scala.collection.mutable.Map[T,Int]]", "kind" : "def"}, {"label" : "TpFnFp", "tail" : "", "member" : "com.johnsnowlabs.nlp.eval.EvaluationMetrics.TpFnFp", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#TpFnFpextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Created by jose on 19\/12\/17.", "trait" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationMetrics.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.eval.EvaluationModes", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html", "members_object" : [{"label" : "SUPPORTED_MODES", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.eval.EvaluationModes.SUPPORTED_MODES", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#SUPPORTED_MODES:Array[String]", "kind" : "val"}, {"label" : "PARTIAL_CHUNK_PER_TOKEN", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.eval.EvaluationModes.PARTIAL_CHUNK_PER_TOKEN", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#PARTIAL_CHUNK_PER_TOKEN:String", "kind" : "val"}, {"label" : "TAG", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.eval.EvaluationModes.TAG", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#TAG:String", "kind" : "val"}, {"label" : "PARTIAL_CHUNK", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.eval.EvaluationModes.PARTIAL_CHUNK", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#PARTIAL_CHUNK:String", "kind" : "val"}, {"label" : "FULL_CHUNK", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.eval.EvaluationModes.FULL_CHUNK", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#FULL_CHUNK:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/EvaluationModes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.eval.HasBeginEnd", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "end", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.eval.HasBeginEnd.end", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#end:Int", "kind" : "abstract def"}, {"label" : "begin", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.eval.HasBeginEnd.begin", "link" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html#begin:Int", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/eval\/HasBeginEnd.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.eval.POSEvaluation", "shortDescription" : "", "members_class" : [{"label" : "computeAccuracy", "tail" : "(posEvalConfiguration: PosEvalConfiguration): Unit", "member" : "com.johnsnowlabs.nlp.eval.POSEvaluation.computeAccuracy", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#computeAccuracy(posEvalConfiguration:POSEvaluation.this.PosEvalConfiguration):Unit", "kind" : "def"}, {"label" : "computeAccuracyAnnotator", "tail" : "(trainFile: String, posApproach: PerceptronApproach): Unit", "member" : "com.johnsnowlabs.nlp.eval.POSEvaluation.computeAccuracyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#computeAccuracyAnnotator(trainFile:String,posApproach:com.johnsnowlabs.nlp.annotator.PerceptronApproach):Unit", "kind" : "def"}, {"label" : "computeAccuracyModel", "tail" : "(posModel: PerceptronModel): Unit", "member" : "com.johnsnowlabs.nlp.eval.POSEvaluation.computeAccuracyModel", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#computeAccuracyModel(posModel:com.johnsnowlabs.nlp.annotator.PerceptronModel):Unit", "kind" : "def"}, {"label" : "loggingData", "tail" : ": LoggingData", "member" : "com.johnsnowlabs.nlp.eval.POSEvaluation.loggingData", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#loggingData:com.johnsnowlabs.nlp.eval.util.LoggingData", "kind" : "val"}, {"label" : "goldTokenizer", "tail" : ": GoldTokenizer", "member" : "com.johnsnowlabs.nlp.eval.POSEvaluation.goldTokenizer", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#goldTokenizer:com.johnsnowlabs.nlp.eval.util.GoldTokenizer", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.eval.POSEvaluation#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/eval\/POSEvaluation.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.eval.utils", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html", "members_object" : [{"label" : "isChunkInChunks", "tail" : "(chunks: Seq[BaseChunk], targetChunk: BaseChunk, mode: String): (Double, Double, Double)", "member" : "com.johnsnowlabs.nlp.eval.utils.isChunkInChunks", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#isChunkInChunks(chunks:Seq[com.johnsnowlabs.nlp.eval.BaseChunk],targetChunk:com.johnsnowlabs.nlp.eval.BaseChunk,mode:String):(Double,Double,Double)", "kind" : "def"}, {"label" : "checkOverlap", "tail" : "(a: HasBeginEnd, b: HasBeginEnd): Int", "member" : "com.johnsnowlabs.nlp.eval.utils.checkOverlap", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#checkOverlap(a:com.johnsnowlabs.nlp.eval.HasBeginEnd,b:com.johnsnowlabs.nlp.eval.HasBeginEnd):Int", "kind" : "def"}, {"label" : "chunkifyTokens", "tail" : "(tokens: Seq[Annotation]): Seq[BaseChunk]", "member" : "com.johnsnowlabs.nlp.eval.utils.chunkifyTokens", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#chunkifyTokens(tokens:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.eval.BaseChunk]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/utils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.johnsnowlabs.util" : [{"name" : "com.johnsnowlabs.util.Compatibility", "shortDescription" : "", "members_case class" : [{"label" : "findVersion", "tail" : "(model: String): List[Map[String, String]]", "member" : "com.johnsnowlabs.util.Compatibility.findVersion", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#findVersion(model:String):java.util.List[java.util.Map[String,String]]", "kind" : "def"}, {"member" : "com.johnsnowlabs.util.Compatibility#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/util\/Compatibility.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/util\/Compatibility.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/util\/Compatibility.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.util.HashUtil", "shortDescription" : "", "object" : "com\/johnsnowlabs\/util\/HashUtil$.html", "members_object" : [{"label" : "hash", "tail" : "(u: String, seed: Int): Long", "member" : "com.johnsnowlabs.util.HashUtil.hash", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#hash(u:String,seed:Int):Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/util\/HashUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.johnsnowlabs.nlp.annotators" : [{"name" : "com.johnsnowlabs.nlp.annotators.Chunk2Token", "shortDescription" : "A feature transformer that converts the input array of strings (annotatorType CHUNK) into anarray of chunk-based tokens (annotatorType TOKEN).", "members_class" : [{"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.Chunk2Token.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.Chunk2Token#<init>", "error" : "unsupported entity"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.Chunk2Token.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#inputAnnotatorTypes:Array[Chunk2Token.this.AnnotatorType]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.Chunk2Token.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#outputAnnotatorType:Chunk2Token.this.AnnotatorType", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.Chunk2Token#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.Chunk2Token.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): Chunk2Token.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): Chunk2Token", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): Chunk2Token.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): Chunk2Token.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): Chunk2Token.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): Chunk2Token.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): Chunk2Token.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): Chunk2Token.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): Chunk2Token.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): Chunk2Token.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): Chunk2Token.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): Chunk2Token.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): Chunk2Token.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[Chunk2Token]): Chunk2Token", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[Chunk2Token]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): Chunk2Token.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): Chunk2Token.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): Chunk2Token.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): Chunk2Token.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): Chunk2Token.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): Chunk2Token.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/Chunk2Token.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer", "shortDescription" : "Annotator which normalizes raw text from clinical documents, e.g.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html", "members_class" : [{"label" : "getPolicy", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer.getPolicy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#getPolicy:String", "kind" : "def"}, {"label" : "getLowercase", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer.getLowercase", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#getLowercase:Boolean", "kind" : "def"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "setPolicy", "tail" : "(value: String): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer.setPolicy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setPolicy(value:String):DrugNormalizer.this.type", "kind" : "def"}, {"label" : "setLowercase", "tail" : "(value: Boolean): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer.setLowercase", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setLowercase(value:Boolean):DrugNormalizer.this.type", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer#<init>", "error" : "unsupported entity"}, {"label" : "policy", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer.policy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#policy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "lowercase", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer.lowercase", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#lowercase:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "abbreviations", "tail" : ": MapFeature[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer.abbreviations", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#abbreviations:com.johnsnowlabs.nlp.serialization.MapFeature[String,String]", "kind" : "val"}, {"label" : "patterns", "tail" : ": MapFeature[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer.patterns", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#patterns:com.johnsnowlabs.nlp.serialization.MapFeature[String,String]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#outputAnnotatorType:DrugNormalizer.this.AnnotatorType", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#inputAnnotatorTypes:Array[DrugNormalizer.this.AnnotatorType]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.DrugNormalizer.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): DrugNormalizer", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): DrugNormalizer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[DrugNormalizer]): DrugNormalizer", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[DrugNormalizer]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DrugNormalizer.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DrugNormalizer.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DrugNormalizer.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DrugNormalizer.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DrugNormalizer.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DrugNormalizer.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[DrugNormalizer]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): DrugNormalizer", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/DrugNormalizer.html", "kind" : "class"}], "com.johnsnowlabs.nlp.annotators.assertion" : [{"name" : "com.johnsnowlabs.nlp.annotators.assertion.Datapoint", "shortDescription" : "Created by jose on 19\/03\/18.", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.assertion.Datapoint#<init>", "error" : "unsupported entity"}, {"label" : "end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.assertion.Datapoint.end", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#end:Int", "kind" : "val"}, {"label" : "start", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.assertion.Datapoint.start", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#start:Int", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.Datapoint.label", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#label:String", "kind" : "val"}, {"label" : "target", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.Datapoint.target", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#target:String", "kind" : "val"}, {"label" : "sentence", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.Datapoint.sentence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#sentence:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/Datapoint.html", "kind" : "case class"}], "com.johnsnowlabs.nlp.annotators.merge" : [{"name" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach", "shortDescription" : "Merges NER Chunks by prioritizing overlapping indices(chunks with longer lengths and highest information will be kept from each ner model)Labels can be changed by setReplaceDictResource.", "members_class" : [{"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): ChunkMergeModel", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel", "kind" : "def"}, {"label" : "transformReplaceDict", "tail" : "(replaceDict: Array[(String, String)]): Map[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.transformReplaceDict", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#transformReplaceDict(replaceDict:Array[(String,String)]):Map[String,String]", "kind" : "def"}, {"label" : "setReplaceDictResource", "tail" : "(path: String, readAs: Format, options: Map[String, String]): ChunkMergeApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.setReplaceDictResource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#setReplaceDictResource(path:String,readAs:com.johnsnowlabs.nlp.util.io.ReadAs.Format,options:Map[String,String]):ChunkMergeApproach.this.type", "kind" : "def"}, {"label" : "setReplaceDictResource", "tail" : "(path: ExternalResource): ChunkMergeApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.setReplaceDictResource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#setReplaceDictResource(path:com.johnsnowlabs.nlp.util.io.ExternalResource):ChunkMergeApproach.this.type", "kind" : "def"}, {"label" : "replaceDictResource", "tail" : ": ExternalResourceParam", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.replaceDictResource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#replaceDictResource:com.johnsnowlabs.nlp.annotators.param.ExternalResourceParam", "kind" : "val"}, {"label" : "setFalsePositivesResource", "tail" : "(path: String, readAs: Format, options: Map[String, String]): ChunkMergeApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.setFalsePositivesResource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#setFalsePositivesResource(path:String,readAs:com.johnsnowlabs.nlp.util.io.ReadAs.Format,options:Map[String,String]):ChunkMergeApproach.this.type", "kind" : "def"}, {"label" : "setFalsePositivesResource", "tail" : "(path: ExternalResource): ChunkMergeApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.setFalsePositivesResource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#setFalsePositivesResource(path:com.johnsnowlabs.nlp.util.io.ExternalResource):ChunkMergeApproach.this.type", "kind" : "def"}, {"label" : "falsePositivesResource", "tail" : ": ExternalResourceParam", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.falsePositivesResource", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#falsePositivesResource:com.johnsnowlabs.nlp.annotators.param.ExternalResourceParam", "kind" : "val"}, {"label" : "getMergeOverlapping", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.getMergeOverlapping", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#getMergeOverlapping:Boolean", "kind" : "def"}, {"label" : "setMergeOverlapping", "tail" : "(v: Boolean): ChunkMergeApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.setMergeOverlapping", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#setMergeOverlapping(v:Boolean):ChunkMergeApproach.this.type", "kind" : "def"}, {"label" : "mergeOverlapping", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.mergeOverlapping", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#mergeOverlapping:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#inputAnnotatorTypes:Array[ChunkMergeApproach.this.AnnotatorType]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#outputAnnotatorType:ChunkMergeApproach.this.AnnotatorType", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#description:String", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeApproach.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#uid:String", "kind" : "val"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[ChunkMergeModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): ChunkMergeModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): ChunkMergeModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: ChunkMergeModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): ChunkMergeApproach.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): ChunkMergeApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): ChunkMergeApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): ChunkMergeApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[ChunkMergeModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): ChunkMergeModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): ChunkMergeModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ChunkMergeApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ChunkMergeApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ChunkMergeApproach.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ChunkMergeApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ChunkMergeApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ChunkMergeApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeApproach.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel", "shortDescription" : "Merges entities coming from different CHUNK annotations", "object" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html", "members_class" : [{"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "replaceDictMap", "tail" : ": Map[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.replaceDictMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#replaceDictMap:Map[String,String]", "kind" : "lazy val"}, {"label" : "falsePositivesArray", "tail" : ": Array[(String, String, String)]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.falsePositivesArray", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#falsePositivesArray:Array[(String,String,String)]", "kind" : "lazy val"}, {"label" : "possibleEntityFields", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.possibleEntityFields", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#possibleEntityFields:Array[String]", "kind" : "val"}, {"label" : "getReplaceDict", "tail" : "(): Map[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.getReplaceDict", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#getReplaceDict:Map[String,String]", "kind" : "def"}, {"label" : "setReplaceDict", "tail" : "(value: Map[String, String]): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.setReplaceDict", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setReplaceDict(value:Map[String,String]):ChunkMergeModel.this.type", "kind" : "def"}, {"label" : "replaceDict", "tail" : ": MapFeature[String, String]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.replaceDict", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#replaceDict:com.johnsnowlabs.nlp.serialization.MapFeature[String,String]", "kind" : "val"}, {"label" : "getFalsePositives", "tail" : "(): Array[(String, String, String)]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.getFalsePositives", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#getFalsePositives:Array[(String,String,String)]", "kind" : "def"}, {"label" : "setFalsePositives", "tail" : "(value: Array[(String, String, String)]): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.setFalsePositives", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setFalsePositives(value:Array[(String,String,String)]):ChunkMergeModel.this.type", "kind" : "def"}, {"label" : "falsePositives", "tail" : ": ArrayFeature[(String, String, String)]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.falsePositives", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#falsePositives:com.johnsnowlabs.nlp.serialization.ArrayFeature[(String,String,String)]", "kind" : "val"}, {"label" : "getMergeOverlapping", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.getMergeOverlapping", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#getMergeOverlapping:Boolean", "kind" : "def"}, {"label" : "setMergeOverlapping", "tail" : "(v: Boolean): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.setMergeOverlapping", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setMergeOverlapping(v:Boolean):ChunkMergeModel.this.type", "kind" : "def"}, {"label" : "mergeOverlapping", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.mergeOverlapping", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#mergeOverlapping:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#inputAnnotatorTypes:Array[ChunkMergeModel.this.AnnotatorType]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#outputAnnotatorType:ChunkMergeModel.this.AnnotatorType", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): ChunkMergeModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): ChunkMergeModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[ChunkMergeModel]): ChunkMergeModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[ChunkMergeModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ChunkMergeModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ChunkMergeModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ChunkMergeModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ChunkMergeModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ChunkMergeModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ChunkMergeModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): ChunkMergeModel", "member" : "com.johnsnowlabs.nlp.annotators.merge.ReadablePretrainedChunkMerge.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): ChunkMergeModel", "member" : "com.johnsnowlabs.nlp.annotators.merge.ReadablePretrainedChunkMerge.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): ChunkMergeModel", "member" : "com.johnsnowlabs.nlp.annotators.merge.ReadablePretrainedChunkMerge.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): ChunkMergeModel", "member" : "com.johnsnowlabs.nlp.annotators.merge.ReadablePretrainedChunkMerge.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#pretrained():com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": Option[Nothing]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ReadablePretrainedChunkMerge.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#defaultModelName:Option[Nothing]", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[ChunkMergeModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (ChunkMergeModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): ChunkMergeModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ChunkMergeModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.merge.ReadablePretrainedChunkMerge", "members_trait" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): ChunkMergeModel", "member" : "com.johnsnowlabs.nlp.annotators.merge.ReadablePretrainedChunkMerge.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): ChunkMergeModel", "member" : "com.johnsnowlabs.nlp.annotators.merge.ReadablePretrainedChunkMerge.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): ChunkMergeModel", "member" : "com.johnsnowlabs.nlp.annotators.merge.ReadablePretrainedChunkMerge.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): ChunkMergeModel", "member" : "com.johnsnowlabs.nlp.annotators.merge.ReadablePretrainedChunkMerge.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#pretrained():com.johnsnowlabs.nlp.annotators.merge.ChunkMergeModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": Option[Nothing]", "member" : "com.johnsnowlabs.nlp.annotators.merge.ReadablePretrainedChunkMerge.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#defaultModelName:Option[Nothing]", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[ChunkMergeModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (ChunkMergeModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): ChunkMergeModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/merge\/ReadablePretrainedChunkMerge.html", "kind" : "trait"}], "com.johnsnowlabs.nlp.annotators.disambiguation.util" : [{"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.CategoryToDomainMapping", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html", "members_object" : [{"label" : "getDomain", "tail" : "(category: String): String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.CategoryToDomainMapping.getDomain", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#getDomain(category:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/CategoryToDomainMapping$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams", "members_trait" : [{"label" : "getPredictionLimit", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getPredictionLimit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#getPredictionLimit:Int", "kind" : "def"}, {"label" : "setPredictionLimit", "tail" : "(v: Int): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setPredictionLimit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setPredictionLimit(v:Int):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getNearMatchingGapParam", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getNearMatchingGapParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#getNearMatchingGapParam:Int", "kind" : "def"}, {"label" : "setNearMatchingGapParam", "tail" : "(v: Int): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setNearMatchingGapParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setNearMatchingGapParam(v:Int):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getLevenshteinDistanceThresholdParam", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getLevenshteinDistanceThresholdParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#getLevenshteinDistanceThresholdParam:Double", "kind" : "def"}, {"label" : "setLevenshteinDistanceThresholdParam", "tail" : "(v: Double): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setLevenshteinDistanceThresholdParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setLevenshteinDistanceThresholdParam(v:Double):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getNarrowWithApproximateMatching", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getNarrowWithApproximateMatching", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#getNarrowWithApproximateMatching:Boolean", "kind" : "def"}, {"label" : "setNarrowWithApproximateMatching", "tail" : "(v: Boolean): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setNarrowWithApproximateMatching", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setNarrowWithApproximateMatching(v:Boolean):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "setEmbeddingType", "tail" : "(v: String): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setEmbeddingType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setEmbeddingType(v:String):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getEmbeddingType", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getEmbeddingType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#getEmbeddingType:String", "kind" : "def"}, {"label" : "getTokenSearch", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getTokenSearch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#getTokenSearch:Boolean", "kind" : "def"}, {"label" : "setTokenSearch", "tail" : "(v: Boolean): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setTokenSearch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setTokenSearch(v:Boolean):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getNumFirstChars", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getNumFirstChars", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#getNumFirstChars:Int", "kind" : "def"}, {"label" : "setNumFirstChars", "tail" : "(v: Int): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setNumFirstChars", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setNumFirstChars(v:Int):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "setKnowledgeBaseStructure", "tail" : "(kb: Knowledge): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setKnowledgeBaseStructure", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setKnowledgeBaseStructure(kb:com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "predictionsLimit", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.predictionsLimit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#predictionsLimit:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "nearMatchingGapParam", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.nearMatchingGapParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#nearMatchingGapParam:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "levenshteinDistanceThresholdParam", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.levenshteinDistanceThresholdParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#levenshteinDistanceThresholdParam:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "narrowWithApproximateMatching", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.narrowWithApproximateMatching", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#narrowWithApproximateMatching:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "tokenSearch", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.tokenSearch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#tokenSearch:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "numFirstChars", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.numFirstChars", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#numFirstChars:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "embeddingTypeParam", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.embeddingTypeParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#embeddingTypeParam:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "knowledgeBaseStructure", "tail" : ": StructFeature[Knowledge]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.knowledgeBaseStructure", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#knowledgeBaseStructure:com.johnsnowlabs.nlp.serialization.StructFeature[com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge]", "kind" : "val"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): DisambiguatorModelParams.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DisambiguatorModelParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DisambiguatorModelParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DisambiguatorModelParams.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DisambiguatorModelParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DisambiguatorModelParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DisambiguatorModelParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Params", "member" : "org.apache.spark.ml.param.Params.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.Params", "kind" : "abstract def"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.util.Identifiable.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html#uid:String", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/DisambiguatorModelParams.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.SwitchableSentenceEmbeddings", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html", "members_object" : [{"label" : "sentenceEmbeddings", "tail" : "(embeddingType: String, strategy: String, cols: SentenceEmbeddingColumns): AnnotatorModel[_]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.SwitchableSentenceEmbeddings.sentenceEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#sentenceEmbeddings(embeddingType:String,strategy:String,cols:com.johnsnowlabs.nlp.annotators.disambiguation.util.SwitchableSentenceEmbeddings.SentenceEmbeddingColumns):com.johnsnowlabs.nlp.AnnotatorModel[_]", "kind" : "def"}, {"label" : "SentenceEmbeddingColumns", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.SwitchableSentenceEmbeddings.SentenceEmbeddingColumns", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#SentenceEmbeddingColumnsextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/SwitchableSentenceEmbeddings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.johnsnowlabs.nlp.annotators.disambiguation.util.linalg" : [{"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.linalg.CosineMetrics", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cosineSimilarity", "tail" : "(x: LinalgVector, y: LinalgVector): LinalgScalar", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.linalg.CosineMetrics.cosineSimilarity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html#cosineSimilarity(x:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector,y:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgScalar", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetrics.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.linalg.CosineMetricsBreezeImpl", "members_trait" : [{"label" : "cosineSimilarity", "tail" : "(_x: LinalgVector, _y: LinalgVector): LinalgScalar", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.linalg.CosineMetricsBreezeImpl.cosineSimilarity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#cosineSimilarity(_x:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector,_y:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgScalar", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/CosineMetricsBreezeImpl.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.linalg.Topology", "members_trait" : [{"label" : "getNearestNeighbours", "tail" : "(x: LinalgVector, ys: Array[LinalgVector]): Array[(DataId, Score)]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.linalg.Topology.getNearestNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#getNearestNeighbours(x:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector,ys:Array[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector]):Array[(com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId,com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.Score)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cosineSimilarity", "tail" : "(x: LinalgVector, y: LinalgVector): LinalgScalar", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.linalg.CosineMetrics.cosineSimilarity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html#cosineSimilarity(x:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector,y:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgScalar", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/linalg\/Topology.html", "kind" : "trait"}], "com.johnsnowlabs.storage" : [{"name" : "com.johnsnowlabs.storage.JSLDatabase", "shortDescription" : "", "object" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html", "members_object" : [{"label" : "ERJTree", "tail" : ": Name", "member" : "com.johnsnowlabs.storage.JSLDatabase.ERJTree", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#ERJTree:com.johnsnowlabs.storage.JSLDatabase.Name", "kind" : "val"}, {"label" : "Name", "tail" : "", "member" : "com.johnsnowlabs.storage.JSLDatabase.Name", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#Name=com.johnsnowlabs.storage.Database", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/storage\/JSLDatabase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.johnsnowlabs.nlp.annotators.classification" : [{"name" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach", "shortDescription" : "Trains a model to classify documents with a Logarithmic Regression algorithm.", "members_class" : [{"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DocumentLogRegClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel", "kind" : "def"}, {"label" : "ovrClassifier", "tail" : ": OneVsRest", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.ovrClassifier", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#ovrClassifier:org.apache.spark.ml.classification.OneVsRest", "kind" : "lazy val"}, {"label" : "lrClassifier", "tail" : ": LogisticRegression", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.lrClassifier", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#lrClassifier:org.apache.spark.ml.classification.LogisticRegression", "kind" : "lazy val"}, {"label" : "sidx", "tail" : ": StringIndexer", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.sidx", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#sidx:org.apache.spark.ml.feature.StringIndexer", "kind" : "lazy val"}, {"label" : "idf", "tail" : ": IDF", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.idf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#idf:org.apache.spark.ml.feature.IDF", "kind" : "lazy val"}, {"label" : "tf", "tail" : ": HashingTF", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.tf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#tf:org.apache.spark.ml.feature.HashingTF", "kind" : "lazy val"}, {"label" : "labelPredictedCol", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.labelPredictedCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#labelPredictedCol:String", "kind" : "lazy val"}, {"label" : "labelEncodedCol", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.labelEncodedCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#labelEncodedCol:String", "kind" : "lazy val"}, {"label" : "labelRawCol", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.labelRawCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#labelRawCol:String", "kind" : "lazy val"}, {"label" : "tfidfCol", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.tfidfCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#tfidfCol:String", "kind" : "lazy val"}, {"label" : "tfCol", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.tfCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#tfCol:String", "kind" : "lazy val"}, {"label" : "tokenRawCol", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.tokenRawCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#tokenRawCol:String", "kind" : "lazy val"}, {"label" : "tokenAnnotationCol", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.tokenAnnotationCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#tokenAnnotationCol:String", "kind" : "lazy val"}, {"label" : "getMergeChunks", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.getMergeChunks", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getMergeChunks:Boolean", "kind" : "def"}, {"label" : "setMergeChunks", "tail" : "(value: Boolean): DocumentLogRegClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.setMergeChunks", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setMergeChunks(value:Boolean):DocumentLogRegClassifierApproach.this.type", "kind" : "def"}, {"label" : "mergeChunks", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.mergeChunks", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#mergeChunks:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getLabels", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.getLabels", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getLabels:Array[String]", "kind" : "def"}, {"label" : "setLabels", "tail" : "(value: Array[String]): DocumentLogRegClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.setLabels", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setLabels(value:Array[String]):DocumentLogRegClassifierApproach.this.type", "kind" : "def"}, {"label" : "labels", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.labels", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#labels:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "getClassificationModelPath", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.getClassificationModelPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getClassificationModelPath:String", "kind" : "def"}, {"label" : "setClassificationModelPath", "tail" : "(value: String): DocumentLogRegClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.setClassificationModelPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setClassificationModelPath(value:String):DocumentLogRegClassifierApproach.this.type", "kind" : "def"}, {"label" : "classificationModelPath", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.classificationModelPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#classificationModelPath:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getVectorizationModelPath", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.getVectorizationModelPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getVectorizationModelPath:String", "kind" : "def"}, {"label" : "setVectorizationModelPath", "tail" : "(value: String): DocumentLogRegClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.setVectorizationModelPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setVectorizationModelPath(value:String):DocumentLogRegClassifierApproach.this.type", "kind" : "def"}, {"label" : "vectorizationModelPath", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.vectorizationModelPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#vectorizationModelPath:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getFitIntercept", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.getFitIntercept", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getFitIntercept:Boolean", "kind" : "def"}, {"label" : "setFitIntercept", "tail" : "(value: Boolean): DocumentLogRegClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.setFitIntercept", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setFitIntercept(value:Boolean):DocumentLogRegClassifierApproach.this.type", "kind" : "def"}, {"label" : "fitIntercept", "tail" : ": Param[Boolean]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.fitIntercept", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#fitIntercept:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "getTol", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.getTol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getTol:Double", "kind" : "def"}, {"label" : "setTol", "tail" : "(value: Double): DocumentLogRegClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.setTol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setTol(value:Double):DocumentLogRegClassifierApproach.this.type", "kind" : "def"}, {"label" : "tol", "tail" : ": Param[Double]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.tol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#tol:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getMaxIter", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.getMaxIter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getMaxIter:Int", "kind" : "def"}, {"label" : "setMaxIter", "tail" : "(value: Int): DocumentLogRegClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.setMaxIter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setMaxIter(value:Int):DocumentLogRegClassifierApproach.this.type", "kind" : "def"}, {"label" : "maxIter", "tail" : ": Param[Int]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.maxIter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#maxIter:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.getLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getLabelCol:String", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): DocumentLogRegClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.setLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setLabelCol(value:String):DocumentLogRegClassifierApproach.this.type", "kind" : "def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.labelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#description:String", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#outputAnnotatorType:DocumentLogRegClassifierApproach.this.AnnotatorType", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#inputAnnotatorTypes:Array[DocumentLogRegClassifierApproach.this.AnnotatorType]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierApproach.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#uid:String", "kind" : "val"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[DocumentLogRegClassifierModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): DocumentLogRegClassifierModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): DocumentLogRegClassifierModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: DocumentLogRegClassifierModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): DocumentLogRegClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): DocumentLogRegClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): DocumentLogRegClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): DocumentLogRegClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[DocumentLogRegClassifierModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DocumentLogRegClassifierModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DocumentLogRegClassifierModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DocumentLogRegClassifierApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DocumentLogRegClassifierApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DocumentLogRegClassifierApproach.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DocumentLogRegClassifierApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DocumentLogRegClassifierApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DocumentLogRegClassifierApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierApproach.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel", "shortDescription" : "Classifies documents with a Logarithmic Regression algorithm.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html", "members_class" : [{"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "docCol", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.docCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#docCol:String", "kind" : "lazy val"}, {"label" : "labelArray", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.labelArray", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#labelArray:Array[String]", "kind" : "lazy val"}, {"label" : "classificationPipeline", "tail" : ": Pipeline", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.classificationPipeline", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#classificationPipeline:org.apache.spark.ml.Pipeline", "kind" : "lazy val"}, {"label" : "tokenRawCol", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.tokenRawCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#tokenRawCol:String", "kind" : "lazy val"}, {"label" : "tokenAnnotationCol", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.tokenAnnotationCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#tokenAnnotationCol:String", "kind" : "lazy val"}, {"label" : "getMergeChunks", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.getMergeChunks", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#getMergeChunks:Boolean", "kind" : "def"}, {"label" : "setMergeChunks", "tail" : "(value: Boolean): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.setMergeChunks", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setMergeChunks(value:Boolean):DocumentLogRegClassifierModel.this.type", "kind" : "def"}, {"label" : "mergeChunks", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.mergeChunks", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#mergeChunks:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getLabels", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.getLabels", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#getLabels:Array[String]", "kind" : "def"}, {"label" : "setLabels", "tail" : "(value: Array[String]): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.setLabels", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setLabels(value:Array[String]):DocumentLogRegClassifierModel.this.type", "kind" : "def"}, {"label" : "labels", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.labels", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#labels:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "getClassificationModel", "tail" : "(): OneVsRestModel", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.getClassificationModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#getClassificationModel:org.apache.spark.ml.classification.OneVsRestModel", "kind" : "def"}, {"label" : "setClassificationModel", "tail" : "(value: OneVsRestModel): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.setClassificationModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setClassificationModel(value:org.apache.spark.ml.classification.OneVsRestModel):DocumentLogRegClassifierModel.this.type", "kind" : "def"}, {"label" : "classificationModel", "tail" : ": StructFeature[OneVsRestModel]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.classificationModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#classificationModel:com.johnsnowlabs.nlp.serialization.StructFeature[org.apache.spark.ml.classification.OneVsRestModel]", "kind" : "val"}, {"label" : "getVectorizationModel", "tail" : "(): PipelineModel", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.getVectorizationModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#getVectorizationModel:org.apache.spark.ml.PipelineModel", "kind" : "def"}, {"label" : "setVectorizationModel", "tail" : "(value: PipelineModel): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.setVectorizationModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setVectorizationModel(value:org.apache.spark.ml.PipelineModel):DocumentLogRegClassifierModel.this.type", "kind" : "def"}, {"label" : "vectorizationModel", "tail" : ": StructFeature[PipelineModel]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.vectorizationModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#vectorizationModel:com.johnsnowlabs.nlp.serialization.StructFeature[org.apache.spark.ml.PipelineModel]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#outputAnnotatorType:DocumentLogRegClassifierModel.this.AnnotatorType", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#inputAnnotatorTypes:Array[DocumentLogRegClassifierModel.this.AnnotatorType]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#uid:String", "kind" : "val"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): DocumentLogRegClassifierModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): DocumentLogRegClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[DocumentLogRegClassifierModel]): DocumentLogRegClassifierModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[DocumentLogRegClassifierModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DocumentLogRegClassifierModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DocumentLogRegClassifierModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DocumentLogRegClassifierModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DocumentLogRegClassifierModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DocumentLogRegClassifierModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DocumentLogRegClassifierModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): DocumentLogRegClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.classification.ReadablePretrainedDocumentLogRegClassifierModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): DocumentLogRegClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.classification.ReadablePretrainedDocumentLogRegClassifierModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): DocumentLogRegClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.classification.ReadablePretrainedDocumentLogRegClassifierModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): DocumentLogRegClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.classification.ReadablePretrainedDocumentLogRegClassifierModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#pretrained():com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": None.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.ReadablePretrainedDocumentLogRegClassifierModel.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#defaultModelName:None.type", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[DocumentLogRegClassifierModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (DocumentLogRegClassifierModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): DocumentLogRegClassifierModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/DocumentLogRegClassifierModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.classification.ReadablePretrainedDocumentLogRegClassifierModel", "members_trait" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): DocumentLogRegClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.classification.ReadablePretrainedDocumentLogRegClassifierModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): DocumentLogRegClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.classification.ReadablePretrainedDocumentLogRegClassifierModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): DocumentLogRegClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.classification.ReadablePretrainedDocumentLogRegClassifierModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): DocumentLogRegClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.classification.ReadablePretrainedDocumentLogRegClassifierModel.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#pretrained():com.johnsnowlabs.nlp.annotators.classification.DocumentLogRegClassifierModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": None.type", "member" : "com.johnsnowlabs.nlp.annotators.classification.ReadablePretrainedDocumentLogRegClassifierModel.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#defaultModelName:None.type", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[DocumentLogRegClassifierModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (DocumentLogRegClassifierModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): DocumentLogRegClassifierModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/classification\/ReadablePretrainedDocumentLogRegClassifierModel.html", "kind" : "trait"}], "com.johnsnowlabs.nlp.eval.spell" : [{"name" : "com.johnsnowlabs.nlp.eval.spell.NorvigSpellEvaluation", "shortDescription" : "", "members_class" : [{"label" : "computeAccuracyModel", "tail" : "(spell: NorvigSweetingModel): Unit", "member" : "com.johnsnowlabs.nlp.eval.spell.NorvigSpellEvaluation.computeAccuracyModel", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#computeAccuracyModel(spell:com.johnsnowlabs.nlp.annotator.NorvigSweetingModel):Unit", "kind" : "def"}, {"label" : "computeAccuracyAnnotator", "tail" : "(trainFile: String, spell: NorvigSweetingApproach): Unit", "member" : "com.johnsnowlabs.nlp.eval.spell.NorvigSpellEvaluation.computeAccuracyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#computeAccuracyAnnotator(trainFile:String,spell:com.johnsnowlabs.nlp.annotator.NorvigSweetingApproach):Unit", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.eval.spell.NorvigSpellEvaluation#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/eval\/spell\/NorvigSpellEvaluation.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.eval.spell.SymSpellEvaluation", "shortDescription" : "", "members_class" : [{"label" : "getEvaluationDataSet", "tail" : "(predictionDataSet: Dataset[_], groundTruthDataSet: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.eval.spell.SymSpellEvaluation.getEvaluationDataSet", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#getEvaluationDataSet(predictionDataSet:org.apache.spark.sql.Dataset[_],groundTruthDataSet:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "getDataSetFromFile", "tail" : "(textFile: String): Dataset[_]", "member" : "com.johnsnowlabs.nlp.eval.spell.SymSpellEvaluation.getDataSetFromFile", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#getDataSetFromFile(textFile:String):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "computeAccuracyModel", "tail" : "(spell: SymmetricDeleteModel): Unit", "member" : "com.johnsnowlabs.nlp.eval.spell.SymSpellEvaluation.computeAccuracyModel", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#computeAccuracyModel(spell:com.johnsnowlabs.nlp.annotator.SymmetricDeleteModel):Unit", "kind" : "def"}, {"label" : "computeAccuracyAnnotator", "tail" : "(trainFile: String, spell: SymmetricDeleteApproach): Unit", "member" : "com.johnsnowlabs.nlp.eval.spell.SymSpellEvaluation.computeAccuracyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#computeAccuracyAnnotator(trainFile:String,spell:com.johnsnowlabs.nlp.annotator.SymmetricDeleteApproach):Unit", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.eval.spell.SymSpellEvaluation#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/eval\/spell\/SymSpellEvaluation.html", "kind" : "class"}], "com.johnsnowlabs.ml" : [], "com.johnsnowlabs.nlp.annotators.assertion.dl" : [{"name" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach", "shortDescription" : "Contains all the methods for training an AssertionDLModel.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html", "members_class" : [{"label" : "verboseLevel", "tail" : ": Level", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.verboseLevel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#verboseLevel:com.johnsnowlabs.nlp.annotators.ner.Verbose.Level", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach#<init>", "error" : "unsupported entity"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#outputAnnotatorType:AssertionDLApproach.this.AnnotatorType", "kind" : "val"}, {"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"label" : "testDataset", "tail" : ": ExternalResourceParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.testDataset", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#testDataset:com.johnsnowlabs.nlp.annotators.param.ExternalResourceParam", "kind" : "val"}, {"label" : "setValidationSplit", "tail" : "(validationSplit: Float): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setValidationSplit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setValidationSplit(validationSplit:Float):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "validationSplit", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.validationSplit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#validationSplit:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "getOutputLogsPath", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.getOutputLogsPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#getOutputLogsPath:String", "kind" : "def"}, {"label" : "getEnableOutputLogs", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.getEnableOutputLogs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#getEnableOutputLogs:Boolean", "kind" : "def"}, {"label" : "setOutputLogsPath", "tail" : "(v: String): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setOutputLogsPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setOutputLogsPath(v:String):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "setEnableOutputLogs", "tail" : "(v: Boolean): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setEnableOutputLogs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setEnableOutputLogs(v:Boolean):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "getIncludeConfidence", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.getIncludeConfidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#getIncludeConfidence:Boolean", "kind" : "def"}, {"label" : "setIncludeConfidence", "tail" : "(value: Boolean): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setIncludeConfidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setIncludeConfidence(value:Boolean):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "setVerbose", "tail" : "(verbose: Level): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setVerbose", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setVerbose(verbose:com.johnsnowlabs.nlp.annotators.ner.Verbose.Level):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "setMaxSentLen", "tail" : "(len: Int): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setMaxSentLen", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setMaxSentLen(len:Int):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "setDropout", "tail" : "(factor: Float): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setDropout", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setDropout(factor:Float):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "setLearningRate", "tail" : "(rate: Float): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setLearningRate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setLearningRate(rate:Float):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "setEpochs", "tail" : "(number: Int): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setEpochs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setEpochs(number:Int):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "setBatchSize", "tail" : "(size: Int): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setBatchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setBatchSize(size:Int):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "setChunkCol", "tail" : "(c: String): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setChunkCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setChunkCol(c:String):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "setEndCol", "tail" : "(e: String): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setEndCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setEndCol(e:String):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "setStartCol", "tail" : "(s: String): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setStartCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setStartCol(s:String):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(label: String): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setLabelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setLabelCol(label:String):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "getConfigProtoBytes", "tail" : "(): Option[Array[Byte]]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.getConfigProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#getConfigProtoBytes:Option[Array[Byte]]", "kind" : "def"}, {"label" : "setConfigProtoBytes", "tail" : "(bytes: Array[Int]): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setConfigProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setConfigProtoBytes(bytes:Array[Int]):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "setGraphFolder", "tail" : "(path: String): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.setGraphFolder", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setGraphFolder(path:String):AssertionDLApproach.this.type", "kind" : "def"}, {"label" : "verbose", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.verbose", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#verbose:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "outputLogsPath", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.outputLogsPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#outputLogsPath:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "enableOutputLogs", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.enableOutputLogs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#enableOutputLogs:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "includeConfidence", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.includeConfidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#includeConfidence:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "configProtoBytes", "tail" : ": IntArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.configProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#configProtoBytes:org.apache.spark.ml.param.IntArrayParam", "kind" : "val"}, {"label" : "graphFolder", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.graphFolder", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#graphFolder:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "maxSentLen", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.maxSentLen", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#maxSentLen:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "dropout", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.dropout", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#dropout:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "learningRate", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.learningRate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#learningRate:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "epochs", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.epochs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#epochs:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "batchSize", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.batchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#batchSize:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "chunkCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.chunkCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#chunkCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "endCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.endCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#endCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "startCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.startCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#startCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.labelCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#description:String", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLApproach.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#uid:String", "kind" : "val"}, {"label" : "outputLog", "tail" : "(value: ⇒ String, uuid: String, shouldLog: Boolean, outputLogsPath: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.outputLog", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#outputLog(value:=>String,uuid:String,shouldLog:Boolean,outputLogsPath:String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(value: ⇒ String, minLevel: Level): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#log(value:=>String,minLevel:com.johnsnowlabs.nlp.annotators.ner.Verbose.Level):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.logger", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "getLogName", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.Logging.getLogName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#getLogName:String", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[AssertionDLModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: AssertionDLModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): AssertionDLApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[AssertionDLModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): AssertionDLModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): AssertionDLModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): AssertionDLApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): AssertionDLApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): AssertionDLApproach.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): AssertionDLApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): AssertionDLApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): AssertionDLApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[AssertionDLApproach]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): AssertionDLApproach", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLApproach.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "shortDescription" : "This is a main class in AssertionDL family.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html", "members_class" : [{"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "model", "tail" : "(): TensorflowAssertion", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.model", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#model:com.johnsnowlabs.ml.tensorflow.TensorflowAssertion", "kind" : "def"}, {"label" : "getClasses", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.getClasses", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#getClasses:Array[String]", "kind" : "def"}, {"label" : "getIncludeConfidence", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.getIncludeConfidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#getIncludeConfidence:Boolean", "kind" : "def"}, {"label" : "setIncludeConfidence", "tail" : "(value: Boolean): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.setIncludeConfidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setIncludeConfidence(value:Boolean):AssertionDLModel.this.type", "kind" : "def"}, {"label" : "includeConfidence", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.includeConfidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#includeConfidence:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getConfigProtoBytes", "tail" : "(): Option[Array[Byte]]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.getConfigProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#getConfigProtoBytes:Option[Array[Byte]]", "kind" : "def"}, {"label" : "setConfigProtoBytes", "tail" : "(bytes: Array[Int]): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.setConfigProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setConfigProtoBytes(bytes:Array[Int]):com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"label" : "classes", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.classes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#classes:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "configProtoBytes", "tail" : ": IntArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.configProtoBytes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#configProtoBytes:org.apache.spark.ml.param.IntArrayParam", "kind" : "val"}, {"label" : "datasetParams", "tail" : ": StructFeature[DatasetEncoderParams]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.datasetParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#datasetParams:com.johnsnowlabs.nlp.serialization.StructFeature[com.johnsnowlabs.ml.tensorflow.DatasetEncoderParams]", "kind" : "val"}, {"label" : "setMaxSentLen", "tail" : "(len: Int): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.setMaxSentLen", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setMaxSentLen(len:Int):AssertionDLModel.this.type", "kind" : "def"}, {"label" : "maxSentLen", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.maxSentLen", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#maxSentLen:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "setBatchSize", "tail" : "(size: Int): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.setBatchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setBatchSize(size:Int):AssertionDLModel.this.type", "kind" : "def"}, {"label" : "batchSize", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.batchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#batchSize:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "setTensorflow", "tail" : "(tf: TensorflowWrapper): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.setTensorflow", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setTensorflow(tf:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper):com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"label" : "tensorflow", "tail" : ": TensorflowWrapper", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.tensorflow", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "var"}, {"label" : "setDatasetParams", "tail" : "(params: DatasetEncoderParams): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.setDatasetParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setDatasetParams(params:com.johnsnowlabs.ml.tensorflow.DatasetEncoderParams):com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel#<init>", "error" : "unsupported entity"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#outputAnnotatorType:AssertionDLModel.this.AnnotatorType", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "validateStorageRef", "tail" : "(dataset: Dataset[_], inputCols: Array[String], annotatorType: String): Unit", "member" : "com.johnsnowlabs.storage.HasStorageRef.validateStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#validateStorageRef(dataset:org.apache.spark.sql.Dataset[_],inputCols:Array[String],annotatorType:String):Unit", "kind" : "def"}, {"label" : "getStorageRef", "tail" : "(): String", "member" : "com.johnsnowlabs.storage.HasStorageRef.getStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#getStorageRef:String", "kind" : "def"}, {"label" : "setStorageRef", "tail" : "(value: String): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.storage.HasStorageRef.setStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setStorageRef(value:String):HasStorageRef.this.type", "kind" : "def"}, {"label" : "createDatabaseConnection", "tail" : "(database: Name): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasStorageRef.createDatabaseConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#createDatabaseConnection(database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "storageRef", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.storage.HasStorageRef.storageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#storageRef:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "writeTensorflowHub", "tail" : "(path: String, tfPath: String, spark: SparkSession, suffix: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#writeTensorflowHub(path:String,tfPath:String,spark:org.apache.spark.sql.SparkSession,suffix:String):Unit", "kind" : "def"}, {"label" : "writeTensorflowModelV2", "tail" : "(path: String, spark: SparkSession, tensorflow: TensorflowWrapper, suffix: String, filename: String, configProtoBytes: Option[Array[Byte]]): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowModelV2", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#writeTensorflowModelV2(path:String,spark:org.apache.spark.sql.SparkSession,tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,suffix:String,filename:String,configProtoBytes:Option[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "writeTensorflowModel", "tail" : "(path: String, spark: SparkSession, tensorflow: TensorflowWrapper, suffix: String, filename: String, configProtoBytes: Option[Array[Byte]]): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#writeTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,suffix:String,filename:String,configProtoBytes:Option[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): AssertionDLModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[AssertionDLModel]): AssertionDLModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[AssertionDLModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): AssertionDLModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): AssertionDLModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): AssertionDLModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): AssertionDLModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): AssertionDLModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): AssertionDLModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadablePretrainedAssertionDL.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadablePretrainedAssertionDL.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadablePretrainedAssertionDL.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadablePretrainedAssertionDL.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#pretrained():com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": None.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadablePretrainedAssertionDL.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#defaultModelName:None.type", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#defaultLang:String", "kind" : "val"}, {"label" : "readAssertionGraph", "tail" : "(instance: AssertionDLModel, path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadsAssertionGraph.readAssertionGraph", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#readAssertionGraph(instance:com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel,path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "tfFile", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadsAssertionGraph.tfFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#tfFile:String", "kind" : "val"}, {"label" : "readTensorflowHub", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String]): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#readTensorflowHub(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String]):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowChkPoints", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowChkPoints", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#readTensorflowChkPoints(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowWithSPModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean, loadSP: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowWithSPModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#readTensorflowWithSPModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean,loadSP:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#readTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[AssertionDLModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (AssertionDLModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): AssertionDLModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/AssertionDLModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadablePretrainedAssertionDL", "members_trait" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadablePretrainedAssertionDL.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#pretrained(name:String,lang:String,remoteLoc:String):com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadablePretrainedAssertionDL.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#pretrained(name:String,lang:String):com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadablePretrainedAssertionDL.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#pretrained(name:String):com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): AssertionDLModel", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadablePretrainedAssertionDL.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#pretrained():com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": None.type", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadablePretrainedAssertionDL.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#defaultModelName:None.type", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[AssertionDLModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (AssertionDLModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): AssertionDLModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadablePretrainedAssertionDL.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadsAssertionGraph", "members_trait" : [{"label" : "readAssertionGraph", "tail" : "(instance: AssertionDLModel, path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadsAssertionGraph.readAssertionGraph", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#readAssertionGraph(instance:com.johnsnowlabs.nlp.annotators.assertion.dl.AssertionDLModel,path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "tfFile", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.assertion.dl.ReadsAssertionGraph.tfFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#tfFile:String", "kind" : "val"}, {"label" : "readTensorflowHub", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String]): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#readTensorflowHub(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String]):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowChkPoints", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowChkPoints", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#readTensorflowChkPoints(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowWithSPModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean, loadSP: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowWithSPModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#readTensorflowWithSPModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean,loadSP:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#readTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[AssertionDLModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (AssertionDLModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): AssertionDLModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/assertion\/dl\/ReadsAssertionGraph.html", "kind" : "trait"}], "com.johnsnowlabs.util.wmd4j.emd" : [{"name" : "com.johnsnowlabs.util.wmd4j.emd.EarthMovers", "shortDescription" : "Algorithm authors:", "members_class" : [{"label" : "distance", "tail" : "(Pc: Array[Long], Qc: Array[Long], C: Array[Array[Long]], extraMassPenalty: Long): Long", "member" : "com.johnsnowlabs.util.wmd4j.emd.EarthMovers.distance", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#distance(Pc:Array[Long],Qc:Array[Long],C:Array[Array[Long]],extraMassPenalty:Long):Long", "kind" : "def"}, {"label" : "distance", "tail" : "(P: Array[Double], Q: Array[Double], C: Array[Array[Double]], extraMassPenalty: Double): Double", "member" : "com.johnsnowlabs.util.wmd4j.emd.EarthMovers.distance", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#distance(P:Array[Double],Q:Array[Double],C:Array[Array[Double]],extraMassPenalty:Double):Double", "kind" : "def"}, {"member" : "com.johnsnowlabs.util.wmd4j.emd.EarthMovers#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/util\/wmd4j\/emd\/EarthMovers.html", "kind" : "class"}], "com.johnsnowlabs.nlp.eval.ner" : [{"name" : "com.johnsnowlabs.nlp.eval.ner.NerCrfEvaluation", "shortDescription" : "", "members_class" : [{"label" : "computeAccuracyAnnotator", "tail" : "(trainFile: String, nerCrfApproach: NerCrfApproach, wordEmbeddings: WordEmbeddingsModel): Unit", "member" : "com.johnsnowlabs.nlp.eval.ner.NerCrfEvaluation.computeAccuracyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#computeAccuracyAnnotator(trainFile:String,nerCrfApproach:com.johnsnowlabs.nlp.annotator.NerCrfApproach,wordEmbeddings:com.johnsnowlabs.nlp.annotator.WordEmbeddingsModel):Unit", "kind" : "def"}, {"label" : "computeAccuracyModel", "tail" : "(nerCrfModel: NerCrfModel): Unit", "member" : "com.johnsnowlabs.nlp.eval.ner.NerCrfEvaluation.computeAccuracyModel", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#computeAccuracyModel(nerCrfModel:com.johnsnowlabs.nlp.annotator.NerCrfModel):Unit", "kind" : "def"}, {"label" : "loggingData", "tail" : ": LoggingData", "member" : "com.johnsnowlabs.nlp.eval.ner.NerCrfEvaluation.loggingData", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#loggingData:com.johnsnowlabs.nlp.eval.util.LoggingData", "kind" : "val"}, {"label" : "goldTokenizer", "tail" : ": GoldTokenizer", "member" : "com.johnsnowlabs.nlp.eval.ner.NerCrfEvaluation.goldTokenizer", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#goldTokenizer:com.johnsnowlabs.nlp.eval.util.GoldTokenizer", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.eval.ner.NerCrfEvaluation#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerCrfEvaluation.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.eval.ner.NerDLEvaluation", "shortDescription" : "", "members_class" : [{"label" : "computeAccuracy", "tail" : "(nerEvalDLConfiguration: NerEvalDLConfiguration): Unit", "member" : "com.johnsnowlabs.nlp.eval.ner.NerDLEvaluation.computeAccuracy", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#computeAccuracy(nerEvalDLConfiguration:NerDLEvaluation.this.NerEvalDLConfiguration):Unit", "kind" : "def"}, {"label" : "computeAccuracyAnnotator", "tail" : "(trainFile: String, nerInputCols: Array[String], nerOutputCol: String, labelColumn: String, minEpochs: Int, maxEpochs: Int, verbose: Int, randomSeed: Int, lr: Float, po: Float, batchSize: Int, dropout: Float, graphFolder: String, userContrib: Boolean, trainValidationProp: Float, evaluationLogExtended: Boolean, enableOutputLogs: Boolean, testDataSet: String, includeConfidence: Boolean, includeValidationProp: Boolean, embeddingsInputCols: Array[String], embeddingsOutputCol: String, embeddingsPath: String, dimension: Int, format: String): Unit", "member" : "com.johnsnowlabs.nlp.eval.ner.NerDLEvaluation.computeAccuracyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#computeAccuracyAnnotator(trainFile:String,nerInputCols:Array[String],nerOutputCol:String,labelColumn:String,minEpochs:Int,maxEpochs:Int,verbose:Int,randomSeed:Int,lr:Float,po:Float,batchSize:Int,dropout:Float,graphFolder:String,userContrib:Boolean,trainValidationProp:Float,evaluationLogExtended:Boolean,enableOutputLogs:Boolean,testDataSet:String,includeConfidence:Boolean,includeValidationProp:Boolean,embeddingsInputCols:Array[String],embeddingsOutputCol:String,embeddingsPath:String,dimension:Int,format:String):Unit", "kind" : "def"}, {"label" : "computeAccuracyAnnotator", "tail" : "(trainFile: String, nerDLApproach: NerDLApproach, wordEmbeddings: WordEmbeddingsModel): Unit", "member" : "com.johnsnowlabs.nlp.eval.ner.NerDLEvaluation.computeAccuracyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#computeAccuracyAnnotator(trainFile:String,nerDLApproach:com.johnsnowlabs.nlp.annotator.NerDLApproach,wordEmbeddings:com.johnsnowlabs.nlp.annotator.WordEmbeddingsModel):Unit", "kind" : "def"}, {"label" : "computeAccuracyModel", "tail" : "(nerDLModel: NerDLModel): Unit", "member" : "com.johnsnowlabs.nlp.eval.ner.NerDLEvaluation.computeAccuracyModel", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#computeAccuracyModel(nerDLModel:com.johnsnowlabs.nlp.annotator.NerDLModel):Unit", "kind" : "def"}, {"label" : "loggingData", "tail" : ": LoggingData", "member" : "com.johnsnowlabs.nlp.eval.ner.NerDLEvaluation.loggingData", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#loggingData:com.johnsnowlabs.nlp.eval.util.LoggingData", "kind" : "val"}, {"label" : "goldTokenizer", "tail" : ": GoldTokenizer", "member" : "com.johnsnowlabs.nlp.eval.ner.NerDLEvaluation.goldTokenizer", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#goldTokenizer:com.johnsnowlabs.nlp.eval.util.GoldTokenizer", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.eval.ner.NerDLEvaluation#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLEvaluation.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.eval.ner.NerDLMetrics", "shortDescription" : "", "members_class" : [{"label" : "computeMetricsFromDF", "tail" : "(dataset: DataFrame, predictionCol: String, labelCol: String): Dataset[Row]", "member" : "com.johnsnowlabs.nlp.eval.ner.NerDLMetrics.computeMetricsFromDF", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#computeMetricsFromDF(dataset:org.apache.spark.sql.DataFrame,predictionCol:String,labelCol:String):org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "documentMetricsUdf", "tail" : "(functionMode: String): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.eval.ner.NerDLMetrics.documentMetricsUdf", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#documentMetricsUdf(functionMode:String):org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.eval.ner.NerDLMetrics#<init>", "error" : "unsupported entity"}, {"label" : "dropO", "tail" : ": Boolean", "member" : "com.johnsnowlabs.nlp.eval.ner.NerDLMetrics.dropO", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#dropO:Boolean", "kind" : "val"}, {"label" : "mode", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.eval.ner.NerDLMetrics.mode", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#mode:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/eval\/ner\/NerDLMetrics.html", "kind" : "class"}], "com.johnsnowlabs.nlp.eval.util" : [{"name" : "com.johnsnowlabs.nlp.eval.util.GoldTokenizer", "shortDescription" : "", "members_class" : [{"label" : "getTestTokensTagsDataSet", "tail" : "(testFile: String): Dataset[_]", "member" : "com.johnsnowlabs.nlp.eval.util.GoldTokenizer.getTestTokensTagsDataSet", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#getTestTokensTagsDataSet(testFile:String):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "getGoldenTokenizer", "tail" : "(testFile: String): Dataset[_]", "member" : "com.johnsnowlabs.nlp.eval.util.GoldTokenizer.getGoldenTokenizer", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#getGoldenTokenizer(testFile:String):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "calLengthOfArray", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.eval.util.GoldTokenizer.calLengthOfArray", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#calLengthOfArray:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "extractMissingTokens", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.eval.util.GoldTokenizer.extractMissingTokens", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#extractMissingTokens:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.eval.util.GoldTokenizer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/eval\/util\/GoldTokenizer.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.eval.util.LoggingData", "shortDescription" : "", "members_class" : [{"label" : "closeLog", "tail" : "(): Unit", "member" : "com.johnsnowlabs.nlp.eval.util.LoggingData.closeLog", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#closeLog():Unit", "kind" : "def"}, {"label" : "logMetric", "tail" : "(metric: String, value: Double): Unit", "member" : "com.johnsnowlabs.nlp.eval.util.LoggingData.logMetric", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#logMetric(metric:String,value:Double):Unit", "kind" : "def"}, {"label" : "getParams", "tail" : "(annotator: Any): Array[Option[(String, String)]]", "member" : "com.johnsnowlabs.nlp.eval.util.LoggingData.getParams", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#getParams(annotator:Any):Array[Option[(String,String)]]", "kind" : "def"}, {"label" : "logParameters", "tail" : "(annotator: Any): Unit", "member" : "com.johnsnowlabs.nlp.eval.util.LoggingData.logParameters", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#logParameters(annotator:Any):Unit", "kind" : "def"}, {"label" : "getOrCreateExperimentId", "tail" : "(client: MlflowClient, experimentName: String): String", "member" : "com.johnsnowlabs.nlp.eval.util.LoggingData.getOrCreateExperimentId", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#getOrCreateExperimentId(client:org.mlflow.tracking.MlflowClient,experimentName:String):String", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.eval.util.LoggingData#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/eval\/util\/LoggingData.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.eval.util.TagsMetrics", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html", "members_object" : [{"label" : "computeMicroAverage", "tail" : "(metrics: MulticlassMetrics, loggingData: LoggingData): Unit", "member" : "com.johnsnowlabs.nlp.eval.util.TagsMetrics.computeMicroAverage", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#computeMicroAverage(metrics:org.apache.spark.mllib.evaluation.MulticlassMetrics,loggingData:com.johnsnowlabs.nlp.eval.util.LoggingData):Unit", "kind" : "def"}, {"label" : "computeAccuracyByEntity", "tail" : "(metrics: MulticlassMetrics, labels: List[String], loggingData: LoggingData): Unit", "member" : "com.johnsnowlabs.nlp.eval.util.TagsMetrics.computeAccuracyByEntity", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#computeAccuracyByEntity(metrics:org.apache.spark.mllib.evaluation.MulticlassMetrics,labels:List[String],loggingData:com.johnsnowlabs.nlp.eval.util.LoggingData):Unit", "kind" : "def"}, {"label" : "computeAccuracy", "tail" : "(metrics: MulticlassMetrics, loggingData: LoggingData): Unit", "member" : "com.johnsnowlabs.nlp.eval.util.TagsMetrics.computeAccuracy", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#computeAccuracy(metrics:org.apache.spark.mllib.evaluation.MulticlassMetrics,loggingData:com.johnsnowlabs.nlp.eval.util.LoggingData):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/util\/TagsMetrics$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings" : [{"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor", "members_trait" : [{"label" : "EmbeddingsRef", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor.EmbeddingsRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#EmbeddingsRef:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getSentenceEmbedding", "tail" : "(annotations: Seq[Annotation]): SentenceEmbeddingWithType", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor.getSentenceEmbedding", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html#getSentenceEmbedding(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.SentenceEmbeddingWithType", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/EmbeddingsExtractor.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.PoolingLogic", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "poolEmbeddings", "tail" : "(embeddings: Array[Array[Float]]): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.PoolingLogic.poolEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html#poolEmbeddings(embeddings:Array[Array[Float]]):Array[Double]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/embeddings\/PoolingLogic.html", "kind" : "trait"}], "com.johnsnowlabs.nlp.annotators.generic_classifier" : [{"name" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach", "shortDescription" : "Trains a TensorFlow model for generic classification of feature vectors.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html", "members_class" : [{"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): GenericClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getOutputLogsPath", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getOutputLogsPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getOutputLogsPath:String", "kind" : "def"}, {"label" : "getFeatureScaling", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getFeatureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getFeatureScaling:String", "kind" : "def"}, {"label" : "getFixImbalance", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getFixImbalance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getFixImbalance:Boolean", "kind" : "def"}, {"label" : "getMaxEpochs", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getMaxEpochs", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getMaxEpochs:Int", "kind" : "def"}, {"label" : "getModelFile", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getModelFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getModelFile:String", "kind" : "def"}, {"label" : "getValidationSplit", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getValidationSplit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getValidationSplit:Float", "kind" : "def"}, {"label" : "getDropout", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getDropout", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getDropout:Float", "kind" : "def"}, {"label" : "getBatchSize", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getBatchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getBatchSize:Int", "kind" : "def"}, {"label" : "getLearningRate", "tail" : "(): Float", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getLearningRate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getLearningRate:Float", "kind" : "def"}, {"label" : "getLabelColumn", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.getLabelColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getLabelColumn:String", "kind" : "def"}, {"label" : "setOutputLogsPath", "tail" : "(outputLogsPath: String): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setOutputLogsPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setOutputLogsPath(outputLogsPath:String):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setFeatureScaling", "tail" : "(featureScaling: String): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setFeatureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setFeatureScaling(featureScaling:String):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setFixImbalance", "tail" : "(fix: Boolean): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setFixImbalance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setFixImbalance(fix:Boolean):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setModelFile", "tail" : "(modelFile: String): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setModelFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setModelFile(modelFile:String):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setValidationSplit", "tail" : "(validationSplit: Float): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setValidationSplit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setValidationSplit(validationSplit:Float):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setEpochsNumber", "tail" : "(epochs: Int): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setEpochsNumber", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setEpochsNumber(epochs:Int):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setDropout", "tail" : "(dropout: Float): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setDropout", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setDropout(dropout:Float):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setBatchSize", "tail" : "(batch: Int): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setBatchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setBatchSize(batch:Int):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setlearningRate", "tail" : "(lr: Float): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setlearningRate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setlearningRate(lr:Float):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "setLabelColumn", "tail" : "(column: String): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.setLabelColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setLabelColumn(column:String):GenericClassifierApproach.this.type", "kind" : "def"}, {"label" : "outputLogsPath", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.outputLogsPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#outputLogsPath:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "featureScaling", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.featureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#featureScaling:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "fixImbalance", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.fixImbalance", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#fixImbalance:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "validationSplit", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.validationSplit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#validationSplit:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "modelFile", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.modelFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#modelFile:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "epochsN", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.epochsN", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#epochsN:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "dropout", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.dropout", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#dropout:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "batchSize", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.batchSize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#batchSize:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "learningRate", "tail" : ": FloatParam", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.learningRate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#learningRate:org.apache.spark.ml.param.FloatParam", "kind" : "val"}, {"label" : "labelColumn", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.labelColumn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#labelColumn:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#outputAnnotatorType:String", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#inputAnnotatorTypes:Array[GenericClassifierApproach.this.AnnotatorType]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#description:String", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierApproach.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#uid:String", "kind" : "val"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[GenericClassifierModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): GenericClassifierModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): GenericClassifierModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: GenericClassifierModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): GenericClassifierApproach.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[GenericClassifierModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): GenericClassifierModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): GenericClassifierModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): GenericClassifierApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): GenericClassifierApproach.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): GenericClassifierApproach.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): GenericClassifierApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): GenericClassifierApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): GenericClassifierApproach.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[GenericClassifierApproach]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): GenericClassifierApproach", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierApproach.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder", "shortDescription" : "", "members_class" : [{"label" : "collectData", "tail" : "(data: Dataset[_], labelCol: String, inputCol: String, doUpsampling: Boolean, featureScaling: String): (Array[Array[Float]], Array[Array[Float]], Array[String])", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder.collectData", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#collectData(data:org.apache.spark.sql.Dataset[_],labelCol:String,inputCol:String,doUpsampling:Boolean,featureScaling:String):(Array[Array[Float]],Array[Array[Float]],Array[String])", "kind" : "def"}, {"label" : "collectScaleParams", "tail" : "(data: Array[Array[Float]], forceRecollect: Boolean): Map[String, Array[Float]]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder.collectScaleParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#collectScaleParams(data:Array[Array[Float]],forceRecollect:Boolean):Map[String,Array[Float]]", "kind" : "def"}, {"label" : "minMax", "tail" : "(data: Array[Array[Float]]): Array[Array[Float]]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder.minMax", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#minMax(data:Array[Array[Float]]):Array[Array[Float]]", "kind" : "def"}, {"label" : "zScore", "tail" : "(data: Array[Array[Float]]): Array[Array[Float]]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder.zScore", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#zScore(data:Array[Array[Float]]):Array[Array[Float]]", "kind" : "def"}, {"label" : "saveDiv", "tail" : "(x: Float, y: Float, elseValue: Float): Float", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder.saveDiv", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#saveDiv(x:Float,y:Float,elseValue:Float):Float", "kind" : "def"}, {"label" : "getScaleParams", "tail" : "(): Map[String, Array[Float]]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder.getScaleParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#getScaleParams:Map[String,Array[Float]]", "kind" : "def"}, {"label" : "getClassWeights", "tail" : "(): Array[Float]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder.getClassWeights", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#getClassWeights:Array[Float]", "kind" : "def"}, {"label" : "classWeights", "tail" : ": Option[Array[Float]]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder.classWeights", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#classWeights:Option[Array[Float]]", "kind" : "var"}, {"label" : "scaleParams", "tail" : ": Option[Map[String, Array[Float]]]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder.scaleParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#scaleParams:Option[Map[String,Array[Float]]]", "kind" : "var"}, {"member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierDataEncoder.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel", "shortDescription" : "Creates a generic single-label classifier which uses pre-generated Tensorflow graphs.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html", "members_class" : [{"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "scaleFeatures", "tail" : "(features: Array[Array[Float]]): Array[Array[Float]]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.scaleFeatures", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#scaleFeatures(features:Array[Array[Float]]):Array[Array[Float]]", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "getEncoder", "tail" : "(): GenericClassifierDataEncoder", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.getEncoder", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#getEncoder:com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder", "kind" : "def"}, {"label" : "setEncoder", "tail" : "(encoder: GenericClassifierDataEncoder): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.setEncoder", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setEncoder(encoder:com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierDataEncoder):GenericClassifierModel.this.type", "kind" : "def"}, {"label" : "model", "tail" : "(): TensorflowGenericClassifier", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.model", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#model:com.johnsnowlabs.ml.tensorflow.TensorflowGenericClassifier", "kind" : "def"}, {"label" : "setTensorflowModel", "tail" : "(spark: SparkSession, tf: TensorflowWrapper): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.setTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setTensorflowModel(spark:org.apache.spark.sql.SparkSession,tf:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper):GenericClassifierModel.this.type", "kind" : "def"}, {"label" : "getFeatureScaling", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.getFeatureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#getFeatureScaling:String", "kind" : "def"}, {"label" : "setFeatureScaling", "tail" : "(featureScaling: String): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.setFeatureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setFeatureScaling(featureScaling:String):GenericClassifierModel.this.type", "kind" : "def"}, {"label" : "featureScaling", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.featureScaling", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#featureScaling:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getCategories", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.getCategories", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#getCategories():Array[String]", "kind" : "def"}, {"label" : "getCategoryName", "tail" : "(id: Int): String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.getCategoryName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#getCategoryName(id:Int):String", "kind" : "def"}, {"label" : "setCategoryNames", "tail" : "(categoryNames: Array[String]): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.setCategoryNames", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setCategoryNames(categoryNames:Array[String]):GenericClassifierModel.this.type", "kind" : "def"}, {"label" : "outputAnnotatorType", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#outputAnnotatorType:String", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#inputAnnotatorTypes:Array[GenericClassifierModel.this.AnnotatorType]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "writeTensorflowHub", "tail" : "(path: String, tfPath: String, spark: SparkSession, suffix: String): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#writeTensorflowHub(path:String,tfPath:String,spark:org.apache.spark.sql.SparkSession,suffix:String):Unit", "kind" : "def"}, {"label" : "writeTensorflowModelV2", "tail" : "(path: String, spark: SparkSession, tensorflow: TensorflowWrapper, suffix: String, filename: String, configProtoBytes: Option[Array[Byte]]): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowModelV2", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#writeTensorflowModelV2(path:String,spark:org.apache.spark.sql.SparkSession,tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,suffix:String,filename:String,configProtoBytes:Option[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "writeTensorflowModel", "tail" : "(path: String, spark: SparkSession, tensorflow: TensorflowWrapper, suffix: String, filename: String, configProtoBytes: Option[Array[Byte]]): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.WriteTensorflowModel.writeTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#writeTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,tensorflow:com.johnsnowlabs.ml.tensorflow.TensorflowWrapper,suffix:String,filename:String,configProtoBytes:Option[Array[Byte]]):Unit", "kind" : "def"}, {"label" : "validateStorageRef", "tail" : "(dataset: Dataset[_], inputCols: Array[String], annotatorType: String): Unit", "member" : "com.johnsnowlabs.storage.HasStorageRef.validateStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#validateStorageRef(dataset:org.apache.spark.sql.Dataset[_],inputCols:Array[String],annotatorType:String):Unit", "kind" : "def"}, {"label" : "getStorageRef", "tail" : "(): String", "member" : "com.johnsnowlabs.storage.HasStorageRef.getStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#getStorageRef:String", "kind" : "def"}, {"label" : "setStorageRef", "tail" : "(value: String): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.storage.HasStorageRef.setStorageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setStorageRef(value:String):HasStorageRef.this.type", "kind" : "def"}, {"label" : "createDatabaseConnection", "tail" : "(database: Name): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasStorageRef.createDatabaseConnection", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#createDatabaseConnection(database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "storageRef", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.storage.HasStorageRef.storageRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#storageRef:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): GenericClassifierModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): GenericClassifierModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[GenericClassifierModel]): GenericClassifierModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[GenericClassifierModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): GenericClassifierModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): GenericClassifierModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): GenericClassifierModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): GenericClassifierModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): GenericClassifierModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): GenericClassifierModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): GenericClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#pretrained(name:String,lang:String,remoteLoc:String):T", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): GenericClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#pretrained(name:String,lang:String):T", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): GenericClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#pretrained(name:String):T", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): GenericClassifierModel", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#pretrained():T", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": Some[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#defaultModelName:Some[String]", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#defaultLang:String", "kind" : "val"}, {"label" : "readGenericClassifierGraph", "tail" : "(instance: GenericClassifierModel, path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadsGenericClassifierGraph.readGenericClassifierGraph", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#readGenericClassifierGraph(instance:com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel,path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "tfFile", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadsGenericClassifierGraph.tfFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#tfFile:String", "kind" : "val"}, {"label" : "readTensorflowHub", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String]): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#readTensorflowHub(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String]):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowChkPoints", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowChkPoints", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#readTensorflowChkPoints(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowWithSPModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean, loadSP: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowWithSPModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#readTensorflowWithSPModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean,loadSP:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#readTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[GenericClassifierModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (GenericClassifierModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): GenericClassifierModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/GenericClassifierModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier", "members_trait" : [{"label" : "pretrained", "tail" : "(name: String, lang: String, remoteLoc: String): T", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#pretrained(name:String,lang:String,remoteLoc:String):T", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String, lang: String): T", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#pretrained(name:String,lang:String):T", "kind" : "def"}, {"label" : "pretrained", "tail" : "(name: String): T", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#pretrained(name:String):T", "kind" : "def"}, {"label" : "pretrained", "tail" : "(): T", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier.pretrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#pretrained():T", "kind" : "def"}, {"label" : "defaultModelName", "tail" : ": Some[String]", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadablePretrainedGenericClassifier.defaultModelName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#defaultModelName:Some[String]", "kind" : "val"}, {"label" : "defaultLoc", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLoc", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#defaultLoc:String", "kind" : "lazy val"}, {"label" : "defaultLang", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.HasPretrained.defaultLang", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#defaultLang:String", "kind" : "val"}, {"label" : "read", "tail" : "(): MLReader[T]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (T, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): T", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadablePretrainedGenericClassifier.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadsGenericClassifierGraph", "members_trait" : [{"label" : "readGenericClassifierGraph", "tail" : "(instance: GenericClassifierModel, path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadsGenericClassifierGraph.readGenericClassifierGraph", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#readGenericClassifierGraph(instance:com.johnsnowlabs.nlp.annotators.generic_classifier.GenericClassifierModel,path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "tfFile", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.generic_classifier.ReadsGenericClassifierGraph.tfFile", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#tfFile:String", "kind" : "val"}, {"label" : "readTensorflowHub", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String]): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowHub", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#readTensorflowHub(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String]):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowChkPoints", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowChkPoints", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#readTensorflowChkPoints(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowWithSPModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean, loadSP: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowWithSPModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#readTensorflowWithSPModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean,loadSP:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "readTensorflowModel", "tail" : "(path: String, spark: SparkSession, suffix: String, zipped: Boolean, useBundle: Boolean, tags: Array[String], initAllTables: Boolean): TensorflowWrapper", "member" : "com.johnsnowlabs.ml.tensorflow.ReadTensorflowModel.readTensorflowModel", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#readTensorflowModel(path:String,spark:org.apache.spark.sql.SparkSession,suffix:String,zipped:Boolean,useBundle:Boolean,tags:Array[String],initAllTables:Boolean):com.johnsnowlabs.ml.tensorflow.TensorflowWrapper", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[T]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (T, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): T", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/generic_classifier\/ReadsGenericClassifierGraph.html", "kind" : "trait"}], "com.johnsnowlabs.ml.search" : [{"name" : "com.johnsnowlabs.ml.search.JSerializableKDTree", "shortDescription" : "", "members_class" : [{"label" : "range", "tail" : "(q: Array[Float], radius: Double, neighbors: List[Neighbor[Array[Float], JTreeData]]): Unit", "member" : "com.johnsnowlabs.ml.search.JSerializableKDTree.range", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#range(q:Array[Float],radius:Double,neighbors:java.util.List[smile.neighbor.Neighbor[Array[Float],com.johnsnowlabs.nlp.annotators.resolution.JTreeData]]):Unit", "kind" : "def"}, {"label" : "knn", "tail" : "(q: Array[Float], k: Int): Array[Neighbor[Array[Float], JTreeData]]", "member" : "com.johnsnowlabs.ml.search.JSerializableKDTree.knn", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#knn(q:Array[Float],k:Int):Array[smile.neighbor.Neighbor[Array[Float],com.johnsnowlabs.nlp.annotators.resolution.JTreeData]]", "kind" : "def"}, {"label" : "nearest", "tail" : "(q: Array[Float]): Neighbor[Array[Float], JTreeData]", "member" : "com.johnsnowlabs.ml.search.JSerializableKDTree.nearest", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#nearest(q:Array[Float]):smile.neighbor.Neighbor[Array[Float],com.johnsnowlabs.nlp.annotators.resolution.JTreeData]", "kind" : "def"}, {"label" : "isIdenticalExcluded", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.ml.search.JSerializableKDTree.isIdenticalExcluded", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#isIdenticalExcluded():Boolean", "kind" : "def"}, {"label" : "setIdenticalExcluded", "tail" : "(excluded: Boolean): JSerializableKDTree", "member" : "com.johnsnowlabs.ml.search.JSerializableKDTree.setIdenticalExcluded", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#setIdenticalExcluded(excluded:Boolean):com.johnsnowlabs.ml.search.JSerializableKDTree", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.search.JSerializableKDTree.toString", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#toString():String", "kind" : "def"}, {"label" : "setReader", "tail" : "(dataReader: JDataReader): Unit", "member" : "com.johnsnowlabs.ml.search.JSerializableKDTree.setReader", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#setReader(dataReader:com.johnsnowlabs.nlp.annotators.resolution.JDataReader):Unit", "kind" : "def"}, {"label" : "isReaderEmpty", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.ml.search.JSerializableKDTree.isReaderEmpty", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#isReaderEmpty():Boolean", "kind" : "def"}, {"member" : "com.johnsnowlabs.ml.search.JSerializableKDTree#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.ml.search.JSerializableKDTree#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/search\/JSerializableKDTree.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.search.Recipe", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.ml.search.Recipe#<init>", "error" : "unsupported entity"}, {"label" : "isLower", "tail" : ": Boolean", "member" : "com.johnsnowlabs.ml.search.Recipe.isLower", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#isLower:Boolean", "kind" : "val"}, {"label" : "end", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.search.Recipe.end", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#end:Int", "kind" : "val"}, {"label" : "begin", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.search.Recipe.begin", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#begin:Int", "kind" : "val"}, {"label" : "node", "tail" : ": Node", "member" : "com.johnsnowlabs.ml.search.Recipe.node", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#node:com.johnsnowlabs.ml.search.Node", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/search\/Recipe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/ml\/search\/Recipe.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.ml.search.SerializableKDTree", "shortDescription" : "", "members_class" : [{"label" : "range", "tail" : "(q: Array[Float], radius: Double, neighbors: List[Neighbor[Array[Float], E]]): Unit", "member" : "com.johnsnowlabs.ml.search.SerializableKDTree.range", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#range(q:Array[Float],radius:Double,neighbors:java.util.List[smile.neighbor.Neighbor[Array[Float],E]]):Unit", "kind" : "def"}, {"label" : "knn", "tail" : "(q: Array[Float], k: Int): Array[Neighbor[Array[Float], E]]", "member" : "com.johnsnowlabs.ml.search.SerializableKDTree.knn", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#knn(q:Array[Float],k:Int):Array[smile.neighbor.Neighbor[Array[Float],E]]", "kind" : "def"}, {"label" : "nearest", "tail" : "(q: Array[Float]): Neighbor[Array[Float], E]", "member" : "com.johnsnowlabs.ml.search.SerializableKDTree.nearest", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#nearest(q:Array[Float]):smile.neighbor.Neighbor[Array[Float],E]", "kind" : "def"}, {"label" : "isIdenticalExcluded", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.ml.search.SerializableKDTree.isIdenticalExcluded", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#isIdenticalExcluded():Boolean", "kind" : "def"}, {"label" : "setDistanceFunction", "tail" : "(dist: String): SerializableKDTree[E]", "member" : "com.johnsnowlabs.ml.search.SerializableKDTree.setDistanceFunction", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#setDistanceFunction(dist:String):com.johnsnowlabs.ml.search.SerializableKDTree[E]", "kind" : "def"}, {"label" : "setIdenticalExcluded", "tail" : "(excluded: Boolean): SerializableKDTree[E]", "member" : "com.johnsnowlabs.ml.search.SerializableKDTree.setIdenticalExcluded", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#setIdenticalExcluded(excluded:Boolean):com.johnsnowlabs.ml.search.SerializableKDTree[E]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.search.SerializableKDTree.toString", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#toString():String", "kind" : "def"}, {"member" : "com.johnsnowlabs.ml.search.SerializableKDTree#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.ml.search.SerializableKDTree#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/search\/SerializableKDTree.html", "kind" : "class"}], "com.johnsnowlabs.nlp.annotators.disambiguation.linalg" : [{"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.linalg.ManifoldTopologyBreeze", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html", "members_object" : [{"label" : "cosineSimilarity", "tail" : "(_x: LinalgVector, _y: LinalgVector): LinalgScalar", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.linalg.CosineMetricsBreezeImpl.cosineSimilarity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#cosineSimilarity(_x:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector,_y:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgScalar", "kind" : "def"}, {"label" : "getNearestNeighbours", "tail" : "(x: LinalgVector, ys: Array[LinalgVector]): Array[(DataId, Score)]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.linalg.Topology.getNearestNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#getNearestNeighbours(x:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector,ys:Array[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.LinalgVector]):Array[(com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId,com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.Score)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/linalg\/package$$ManifoldTopologyBreeze$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.johnsnowlabs.nlp.annotators.resolution.util" : [{"name" : "com.johnsnowlabs.nlp.annotators.resolution.util.StringFunctions", "members_trait" : [{"label" : "label2path", "tail" : "(label: String): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.util.StringFunctions.label2path", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#label2path(label:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StringFunctions.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.util.StructFeature_HadoopFix", "shortDescription" : "", "members_class" : [{"label" : "deserializeObject", "tail" : "(spark: SparkSession, path: String, field: String): Option[TValue]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.util.StructFeature_HadoopFix.deserializeObject", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#deserializeObject(spark:org.apache.spark.sql.SparkSession,path:String,field:String):Option[TValue]", "kind" : "def"}, {"label" : "serializeObject", "tail" : "(spark: SparkSession, path: String, field: String, value: TValue): Unit", "member" : "com.johnsnowlabs.nlp.annotators.resolution.util.StructFeature_HadoopFix.serializeObject", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#serializeObject(spark:org.apache.spark.sql.SparkSession,path:String,field:String,value:TValue):Unit", "kind" : "def"}, {"label" : "fixDeserialize", "tail" : "(bytes: Array[Byte], loader: ClassLoader): T", "member" : "com.johnsnowlabs.nlp.annotators.resolution.util.StructFeature_HadoopFix.fixDeserialize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#fixDeserialize[T](bytes:Array[Byte],loader:ClassLoader):T", "kind" : "def"}, {"label" : "fixSerialize", "tail" : "(o: T): Array[Byte]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.util.StructFeature_HadoopFix.fixSerialize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#fixSerialize[T](o:T):Array[Byte]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.resolution.util.StructFeature_HadoopFix#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.util.StructFeature_HadoopFix.name", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#name:String", "kind" : "val"}, {"label" : "model", "tail" : ": HasFeatures", "member" : "com.johnsnowlabs.nlp.annotators.resolution.util.StructFeature_HadoopFix.model", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#model:com.johnsnowlabs.nlp.HasFeatures", "kind" : "val"}, {"label" : "deserializeDataset", "tail" : "(spark: SparkSession, path: String, field: String): Option[TValue]", "member" : "com.johnsnowlabs.nlp.serialization.StructFeature.deserializeDataset", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#deserializeDataset(spark:org.apache.spark.sql.SparkSession,path:String,field:String):Option[TValue]", "kind" : "def"}, {"label" : "serializeDataset", "tail" : "(spark: SparkSession, path: String, field: String, value: TValue): Unit", "member" : "com.johnsnowlabs.nlp.serialization.StructFeature.serializeDataset", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#serializeDataset(spark:org.apache.spark.sql.SparkSession,path:String,field:String,value:TValue):Unit", "kind" : "def"}, {"label" : "encoder", "tail" : ": Encoder[TValue]", "member" : "com.johnsnowlabs.nlp.serialization.StructFeature.encoder", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#encoder:org.apache.spark.sql.Encoder[TValue]", "kind" : "implicit val"}, {"label" : "isSet", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.serialization.Feature.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#isSet:Boolean", "kind" : "final def"}, {"label" : "setFallback", "tail" : "(v: Option[() ⇒ TValue]): HasFeatures", "member" : "com.johnsnowlabs.nlp.serialization.Feature.setFallback", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#setFallback(v:Option[()=>TComplete]):com.johnsnowlabs.nlp.HasFeatures", "kind" : "def"}, {"label" : "setValue", "tail" : "(value: Option[Any]): HasFeatures", "member" : "com.johnsnowlabs.nlp.serialization.Feature.setValue", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#setValue(value:Option[Any]):com.johnsnowlabs.nlp.HasFeatures", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(): TValue", "member" : "com.johnsnowlabs.nlp.serialization.Feature.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#getOrDefault:TComplete", "kind" : "final def"}, {"label" : "orDefault", "tail" : "(): Option[TValue]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.orDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#orDefault:Option[TComplete]", "kind" : "final def"}, {"label" : "get", "tail" : "(): Option[TValue]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#get:Option[TComplete]", "kind" : "final def"}, {"label" : "getFieldPath", "tail" : "(path: String, field: String): Path", "member" : "com.johnsnowlabs.nlp.serialization.Feature.getFieldPath", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#getFieldPath(path:String,field:String):org.apache.hadoop.fs.Path", "kind" : "final def"}, {"label" : "deserialize", "tail" : "(spark: SparkSession, path: String, field: String): Option[_]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.deserialize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#deserialize(spark:org.apache.spark.sql.SparkSession,path:String,field:String):Option[_]", "kind" : "final def"}, {"label" : "serializeInfer", "tail" : "(spark: SparkSession, path: String, field: String, value: Any): Unit", "member" : "com.johnsnowlabs.nlp.serialization.Feature.serializeInfer", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#serializeInfer(spark:org.apache.spark.sql.SparkSession,path:String,field:String,value:Any):Unit", "kind" : "final def"}, {"label" : "serialize", "tail" : "(spark: SparkSession, path: String, field: String, value: TValue): Unit", "member" : "com.johnsnowlabs.nlp.serialization.Feature.serialize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#serialize(spark:org.apache.spark.sql.SparkSession,path:String,field:String,value:TComplete):Unit", "kind" : "final def"}, {"label" : "fallbackLazyValue", "tail" : ": Option[() ⇒ TValue]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.fallbackLazyValue", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#fallbackLazyValue:Option[()=>TComplete]", "kind" : "final var"}, {"label" : "fallbackRawValue", "tail" : ": Option[TValue]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.fallbackRawValue", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#fallbackRawValue:Option[TComplete]", "kind" : "final var"}, {"label" : "rawValue", "tail" : ": Option[TValue]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.rawValue", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#rawValue:Option[TComplete]", "kind" : "final var"}, {"label" : "broadcastValue", "tail" : ": Option[Broadcast[TValue]]", "member" : "com.johnsnowlabs.nlp.serialization.Feature.broadcastValue", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#broadcastValue:Option[org.apache.spark.broadcast.Broadcast[TComplete]]", "kind" : "final var"}, {"label" : "useBroadcast", "tail" : ": Boolean", "member" : "com.johnsnowlabs.nlp.serialization.Feature.useBroadcast", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#useBroadcast:Boolean", "kind" : "val"}, {"label" : "serializationMode", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.serialization.Feature.serializationMode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#serializationMode:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/util\/StructFeature_HadoopFix.html", "kind" : "class"}], "com.johnsnowlabs.util.distances" : [{"name" : "com.johnsnowlabs.util.distances.StringDistances", "shortDescription" : "", "object" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html", "members_object" : [{"label" : "levenshtein", "tail" : "(neighbors: Array[TreeData], tokens: Array[String]): Array[DistanceResult]", "member" : "com.johnsnowlabs.util.distances.StringDistances.levenshtein", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#levenshtein(neighbors:Array[com.johnsnowlabs.nlp.annotators.resolution.TreeData],tokens:Array[String]):Array[com.johnsnowlabs.nlp.annotators.resolution.DistanceResult]", "kind" : "def"}, {"label" : "jaroWinkler", "tail" : "(neighbors: Array[TreeData], tokens: Array[String]): Array[DistanceResult]", "member" : "com.johnsnowlabs.util.distances.StringDistances.jaroWinkler", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#jaroWinkler(neighbors:Array[com.johnsnowlabs.nlp.annotators.resolution.TreeData],tokens:Array[String]):Array[com.johnsnowlabs.nlp.annotators.resolution.DistanceResult]", "kind" : "def"}, {"label" : "sorensenDice", "tail" : "(neighbors: Array[TreeData], tokens: Array[String]): Array[DistanceResult]", "member" : "com.johnsnowlabs.util.distances.StringDistances.sorensenDice", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#sorensenDice(neighbors:Array[com.johnsnowlabs.nlp.annotators.resolution.TreeData],tokens:Array[String]):Array[com.johnsnowlabs.nlp.annotators.resolution.DistanceResult]", "kind" : "def"}, {"label" : "jaccard", "tail" : "(neighbors: Array[TreeData], tokens: Array[String]): Array[DistanceResult]", "member" : "com.johnsnowlabs.util.distances.StringDistances.jaccard", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#jaccard(neighbors:Array[com.johnsnowlabs.nlp.annotators.resolution.TreeData],tokens:Array[String]):Array[com.johnsnowlabs.nlp.annotators.resolution.DistanceResult]", "kind" : "def"}, {"label" : "tfidfCosine", "tail" : "(neighbors: Array[TreeData], tokens: Array[String], termIDF: Map[String, (Int, Double)], caseSensitive: Boolean): Array[DistanceResult]", "member" : "com.johnsnowlabs.util.distances.StringDistances.tfidfCosine", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#tfidfCosine(neighbors:Array[com.johnsnowlabs.nlp.annotators.resolution.TreeData],tokens:Array[String],termIDF:scala.collection.Map[String,(Int,Double)],caseSensitive:Boolean):Array[com.johnsnowlabs.nlp.annotators.resolution.DistanceResult]", "kind" : "def"}, {"label" : "wmd", "tail" : "(neighbors: Array[TreeData], tokens: Array[String], extramassPenalty: Double, vectors: WordVectors): Array[DistanceResult]", "member" : "com.johnsnowlabs.util.distances.StringDistances.wmd", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#wmd(neighbors:Array[com.johnsnowlabs.nlp.annotators.resolution.TreeData],tokens:Array[String],extramassPenalty:Double,vectors:com.johnsnowlabs.util.wmd4j.WordVectors):Array[com.johnsnowlabs.nlp.annotators.resolution.DistanceResult]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/util\/distances\/StringDistances$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.johnsnowlabs.nlp.annotators.disambiguation.util.read" : [{"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.read.Reader", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getRecord", "tail" : "(id: DataId): Option[Record]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.read.Reader.getRecord", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#getRecord(id:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId):Option[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.ContextMappingsSchema.Record]", "kind" : "abstract def"}, {"label" : "findChunkId", "tail" : "(chunk: String): Option[List[DataId]]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.read.Reader.findChunkId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html#findChunkId(chunk:String):Option[List[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/Reader.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.read.RocksDbReader", "shortDescription" : "", "members_class" : [{"label" : "getRecord", "tail" : "(id: DataId): Option[Record]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.read.RocksDbReader.getRecord", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#getRecord(id:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId):Option[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.ContextMappingsSchema.Record]", "kind" : "def"}, {"label" : "findChunkId", "tail" : "(chunk: String): Option[List[DataId]]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.read.RocksDbReader.findChunkId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#findChunkId(chunk:String):Option[List[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId]]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.read.RocksDbReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/util\/read\/RocksDbReader.html", "kind" : "class"}], "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action" : [{"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.A", "shortDescription" : "", "members_class" : [{"label" : "parent", "tail" : ": Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.A.parent", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#parent:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "var"}, {"label" : "toString", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.A.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.A.name", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#name:String", "kind" : "var"}, {"label" : "production", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.A.production", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#production:String", "kind" : "var"}, {"label" : "production_id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.A.production_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#production_id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "var"}, {"label" : "grammar_dict", "tail" : ": LinkedHashMap[Int, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.A.grammar_dict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#grammar_dict:scala.collection.mutable.LinkedHashMap[Int,String]", "kind" : "var"}, {"label" : "id_c", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.A.id_c", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#id_c:Int", "kind" : "val"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.A#<init>", "error" : "unsupported entity"}, {"label" : "add_children", "tail" : "(child: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.add_children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#add_children(child:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "get_next_action", "tail" : "(is_sketch: Boolean): List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.get_next_action", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#get_next_action(is_sketch:Boolean):List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "KEYWORDS", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.KEYWORDS", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#KEYWORDS:List[String]", "kind" : "val"}, {"label" : "children", "tail" : ": List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#children:List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "var"}, {"label" : "score", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#score:Int", "kind" : "var"}, {"label" : "pt", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.pt", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#pt:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/A.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "shortDescription" : "", "members_class" : [{"label" : "add_children", "tail" : "(child: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.add_children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#add_children(child:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "get_next_action", "tail" : "(is_sketch: Boolean): List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.get_next_action", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#get_next_action(is_sketch:Boolean):List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "KEYWORDS", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.KEYWORDS", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#KEYWORDS:List[String]", "kind" : "val"}, {"label" : "children", "tail" : ": List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#children:List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "var"}, {"label" : "score", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#score:Int", "kind" : "var"}, {"label" : "pt", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.pt", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#pt:Int", "kind" : "var"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "production_id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.production_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#production_id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "abstract val"}, {"label" : "grammar_dict", "tail" : ": LinkedHashMap[Int, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.grammar_dict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#grammar_dict:scala.collection.mutable.LinkedHashMap[Int,String]", "kind" : "abstract val"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.name", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#name:String", "kind" : "abstract val"}, {"label" : "production", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.production", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#production:String", "kind" : "abstract val"}, {"label" : "parent", "tail" : ": Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.parent", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#parent:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "abstract val"}, {"label" : "id_c", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.id_c", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html#id_c:Int", "kind" : "abstract val"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Action.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.C", "shortDescription" : "", "members_class" : [{"label" : "parent", "tail" : ": Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.C.parent", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#parent:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "var"}, {"label" : "toString", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.C.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.C.name", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#name:String", "kind" : "var"}, {"label" : "production", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.C.production", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#production:String", "kind" : "var"}, {"label" : "table", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.C.table", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#table:String", "kind" : "var"}, {"label" : "production_id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.C.production_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#production_id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "var"}, {"label" : "grammar_dict", "tail" : ": LinkedHashMap[Int, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.C.grammar_dict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#grammar_dict:scala.collection.mutable.LinkedHashMap[Int,String]", "kind" : "var"}, {"label" : "id_c", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.C.id_c", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#id_c:Int", "kind" : "val"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.C#<init>", "error" : "unsupported entity"}, {"label" : "add_children", "tail" : "(child: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.add_children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#add_children(child:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "get_next_action", "tail" : "(is_sketch: Boolean): List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.get_next_action", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#get_next_action(is_sketch:Boolean):List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "KEYWORDS", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.KEYWORDS", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#KEYWORDS:List[String]", "kind" : "val"}, {"label" : "children", "tail" : ": List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#children:List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "var"}, {"label" : "score", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#score:Int", "kind" : "var"}, {"label" : "pt", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.pt", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#pt:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/C.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Filter", "shortDescription" : "", "members_class" : [{"label" : "parent", "tail" : ": Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Filter.parent", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#parent:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "var"}, {"label" : "toString", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Filter.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Filter.name", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#name:String", "kind" : "var"}, {"label" : "production", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Filter.production", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#production:String", "kind" : "var"}, {"label" : "production_id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Filter.production_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#production_id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "var"}, {"label" : "grammar_dict", "tail" : ": LinkedHashMap[Int, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Filter.grammar_dict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#grammar_dict:scala.collection.mutable.LinkedHashMap[Int,String]", "kind" : "var"}, {"label" : "id_c", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Filter.id_c", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#id_c:Int", "kind" : "val"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Filter#<init>", "error" : "unsupported entity"}, {"label" : "add_children", "tail" : "(child: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.add_children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#add_children(child:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "get_next_action", "tail" : "(is_sketch: Boolean): List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.get_next_action", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#get_next_action(is_sketch:Boolean):List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "KEYWORDS", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.KEYWORDS", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#KEYWORDS:List[String]", "kind" : "val"}, {"label" : "children", "tail" : ": List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#children:List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "var"}, {"label" : "score", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#score:Int", "kind" : "var"}, {"label" : "pt", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.pt", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#pt:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Filter.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.N", "shortDescription" : "", "members_class" : [{"label" : "parent", "tail" : ": Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.N.parent", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#parent:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "var"}, {"label" : "toString", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.N.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.N.name", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#name:String", "kind" : "var"}, {"label" : "production", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.N.production", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#production:String", "kind" : "var"}, {"label" : "production_id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.N.production_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#production_id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "var"}, {"label" : "grammar_dict", "tail" : ": LinkedHashMap[Int, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.N.grammar_dict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#grammar_dict:scala.collection.mutable.LinkedHashMap[Int,String]", "kind" : "var"}, {"label" : "id_c", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.N.id_c", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#id_c:Int", "kind" : "val"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.N#<init>", "error" : "unsupported entity"}, {"label" : "add_children", "tail" : "(child: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.add_children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#add_children(child:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "get_next_action", "tail" : "(is_sketch: Boolean): List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.get_next_action", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#get_next_action(is_sketch:Boolean):List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "KEYWORDS", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.KEYWORDS", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#KEYWORDS:List[String]", "kind" : "val"}, {"label" : "children", "tail" : ": List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#children:List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "var"}, {"label" : "score", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#score:Int", "kind" : "var"}, {"label" : "pt", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.pt", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#pt:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/N.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Order", "shortDescription" : "", "members_class" : [{"label" : "parent", "tail" : ": Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Order.parent", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#parent:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "var"}, {"label" : "toString", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Order.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Order.name", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#name:String", "kind" : "var"}, {"label" : "production", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Order.production", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#production:String", "kind" : "var"}, {"label" : "production_id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Order.production_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#production_id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "var"}, {"label" : "grammar_dict", "tail" : ": LinkedHashMap[Int, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Order.grammar_dict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#grammar_dict:scala.collection.mutable.LinkedHashMap[Int,String]", "kind" : "var"}, {"label" : "id_c", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Order.id_c", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#id_c:Int", "kind" : "val"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Order#<init>", "error" : "unsupported entity"}, {"label" : "add_children", "tail" : "(child: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.add_children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#add_children(child:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "get_next_action", "tail" : "(is_sketch: Boolean): List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.get_next_action", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#get_next_action(is_sketch:Boolean):List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "KEYWORDS", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.KEYWORDS", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#KEYWORDS:List[String]", "kind" : "val"}, {"label" : "children", "tail" : ": List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#children:List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "var"}, {"label" : "score", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#score:Int", "kind" : "var"}, {"label" : "pt", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.pt", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#pt:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Order.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root", "shortDescription" : "", "members_class" : [{"label" : "parent", "tail" : ": Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root.parent", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#parent:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "var"}, {"label" : "toString", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root.name", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#name:String", "kind" : "var"}, {"label" : "production", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root.production", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#production:String", "kind" : "var"}, {"label" : "production_id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root.production_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#production_id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "var"}, {"label" : "grammar_dict", "tail" : ": LinkedHashMap[Int, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root.grammar_dict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#grammar_dict:scala.collection.mutable.LinkedHashMap[Int,String]", "kind" : "var"}, {"label" : "id_c", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root.id_c", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#id_c:Int", "kind" : "val"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root#<init>", "error" : "unsupported entity"}, {"label" : "add_children", "tail" : "(child: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.add_children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#add_children(child:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "get_next_action", "tail" : "(is_sketch: Boolean): List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.get_next_action", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#get_next_action(is_sketch:Boolean):List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "KEYWORDS", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.KEYWORDS", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#KEYWORDS:List[String]", "kind" : "val"}, {"label" : "children", "tail" : ": List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#children:List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "var"}, {"label" : "score", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#score:Int", "kind" : "var"}, {"label" : "pt", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.pt", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#pt:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root1", "shortDescription" : "", "members_class" : [{"label" : "parent", "tail" : ": Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root1.parent", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#parent:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "var"}, {"label" : "toString", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root1.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root1.name", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#name:String", "kind" : "var"}, {"label" : "production", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root1.production", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#production:String", "kind" : "var"}, {"label" : "production_id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root1.production_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#production_id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "var"}, {"label" : "grammar_dict", "tail" : ": LinkedHashMap[Int, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root1.grammar_dict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#grammar_dict:scala.collection.mutable.LinkedHashMap[Int,String]", "kind" : "var"}, {"label" : "id_c", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root1.id_c", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#id_c:Int", "kind" : "val"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Root1#<init>", "error" : "unsupported entity"}, {"label" : "add_children", "tail" : "(child: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.add_children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#add_children(child:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "get_next_action", "tail" : "(is_sketch: Boolean): List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.get_next_action", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#get_next_action(is_sketch:Boolean):List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "KEYWORDS", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.KEYWORDS", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#KEYWORDS:List[String]", "kind" : "val"}, {"label" : "children", "tail" : ": List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#children:List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "var"}, {"label" : "score", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#score:Int", "kind" : "var"}, {"label" : "pt", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.pt", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#pt:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Root1.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sel", "shortDescription" : "", "members_class" : [{"label" : "parent", "tail" : ": Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sel.parent", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#parent:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "var"}, {"label" : "toString", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sel.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sel.name", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#name:String", "kind" : "var"}, {"label" : "production", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sel.production", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#production:String", "kind" : "var"}, {"label" : "production_id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sel.production_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#production_id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "var"}, {"label" : "grammar_dict", "tail" : ": LinkedHashMap[Int, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sel.grammar_dict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#grammar_dict:scala.collection.mutable.LinkedHashMap[Int,String]", "kind" : "var"}, {"label" : "id_c", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sel.id_c", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#id_c:Int", "kind" : "val"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sel#<init>", "error" : "unsupported entity"}, {"label" : "add_children", "tail" : "(child: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.add_children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#add_children(child:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "get_next_action", "tail" : "(is_sketch: Boolean): List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.get_next_action", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#get_next_action(is_sketch:Boolean):List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "KEYWORDS", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.KEYWORDS", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#KEYWORDS:List[String]", "kind" : "val"}, {"label" : "children", "tail" : ": List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#children:List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "var"}, {"label" : "score", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#score:Int", "kind" : "var"}, {"label" : "pt", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.pt", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#pt:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sup", "shortDescription" : "", "members_class" : [{"label" : "parent", "tail" : ": Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sup.parent", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#parent:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "var"}, {"label" : "toString", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sup.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sup.name", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#name:String", "kind" : "var"}, {"label" : "production", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sup.production", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#production:String", "kind" : "var"}, {"label" : "production_id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sup.production_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#production_id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "var"}, {"label" : "grammar_dict", "tail" : ": LinkedHashMap[Int, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sup.grammar_dict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#grammar_dict:scala.collection.mutable.LinkedHashMap[Int,String]", "kind" : "var"}, {"label" : "id_c", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sup.id_c", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#id_c:Int", "kind" : "val"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Sup#<init>", "error" : "unsupported entity"}, {"label" : "add_children", "tail" : "(child: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.add_children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#add_children(child:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "get_next_action", "tail" : "(is_sketch: Boolean): List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.get_next_action", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#get_next_action(is_sketch:Boolean):List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "KEYWORDS", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.KEYWORDS", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#KEYWORDS:List[String]", "kind" : "val"}, {"label" : "children", "tail" : ": List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#children:List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "var"}, {"label" : "score", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#score:Int", "kind" : "var"}, {"label" : "pt", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.pt", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#pt:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/Sup.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.T", "shortDescription" : "", "members_class" : [{"label" : "parent", "tail" : ": Action", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.T.parent", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#parent:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action", "kind" : "var"}, {"label" : "toString", "tail" : "(): String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.T.toString", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.T.name", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#name:String", "kind" : "var"}, {"label" : "production", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.T.production", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#production:String", "kind" : "var"}, {"label" : "table", "tail" : ": String", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.T.table", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#table:String", "kind" : "var"}, {"label" : "production_id", "tail" : ": LinkedHashMap[String, Int]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.T.production_id", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#production_id:scala.collection.mutable.LinkedHashMap[String,Int]", "kind" : "var"}, {"label" : "grammar_dict", "tail" : ": LinkedHashMap[Int, String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.T.grammar_dict", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#grammar_dict:scala.collection.mutable.LinkedHashMap[Int,String]", "kind" : "var"}, {"label" : "id_c", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.T.id_c", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#id_c:Int", "kind" : "val"}, {"member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.T#<init>", "error" : "unsupported entity"}, {"label" : "add_children", "tail" : "(child: Action): Unit", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.add_children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#add_children(child:com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action):Unit", "kind" : "def"}, {"label" : "get_next_action", "tail" : "(is_sketch: Boolean): List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.get_next_action", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#get_next_action(is_sketch:Boolean):List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "def"}, {"label" : "KEYWORDS", "tail" : ": List[String]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.KEYWORDS", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#KEYWORDS:List[String]", "kind" : "val"}, {"label" : "children", "tail" : ": List[Action]", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.children", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#children:List[com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action]", "kind" : "var"}, {"label" : "score", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.score", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#score:Int", "kind" : "var"}, {"label" : "pt", "tail" : ": Int", "member" : "com.johnsnowlabs.ml.tensorflow.text2sql.rule.action.Action.pt", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#pt:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/ml\/tensorflow\/text2sql\/rule\/action\/T.html", "kind" : "class"}], "com.johnsnowlabs.nlp" : [{"name" : "com.johnsnowlabs.nlp.FeaturesAssembler", "shortDescription" : "The FeaturesAssembler is used to collect features from different columns.", "members_class" : [{"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.FeaturesAssembler.transform", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.FeaturesAssembler.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Transformer", "member" : "com.johnsnowlabs.nlp.FeaturesAssembler.copy", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Transformer", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.FeaturesAssembler#<init>", "error" : "unsupported entity"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.FeaturesAssembler.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): FeaturesAssembler.this.type", "member" : "com.johnsnowlabs.nlp.FeaturesAssembler.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#setInputCols(value:Array[String]):FeaturesAssembler.this.type", "kind" : "def"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.FeaturesAssembler.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#outputAnnotatorType:FeaturesAssembler.this.AnnotatorType", "kind" : "val"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.FeaturesAssembler.inputCols", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.FeaturesAssembler#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.FeaturesAssembler.uid", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#uid:String", "kind" : "val"}, {"label" : "validateStorageRef", "tail" : "(dataset: Dataset[_], inputCols: Array[String], annotatorType: String): Unit", "member" : "com.johnsnowlabs.storage.HasStorageRef.validateStorageRef", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#validateStorageRef(dataset:org.apache.spark.sql.Dataset[_],inputCols:Array[String],annotatorType:String):Unit", "kind" : "def"}, {"label" : "getStorageRef", "tail" : "(): String", "member" : "com.johnsnowlabs.storage.HasStorageRef.getStorageRef", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#getStorageRef:String", "kind" : "def"}, {"label" : "setStorageRef", "tail" : "(value: String): FeaturesAssembler.this.type", "member" : "com.johnsnowlabs.storage.HasStorageRef.setStorageRef", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#setStorageRef(value:String):HasStorageRef.this.type", "kind" : "def"}, {"label" : "createDatabaseConnection", "tail" : "(database: Name): RocksDBConnection", "member" : "com.johnsnowlabs.storage.HasStorageRef.createDatabaseConnection", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#createDatabaseConnection(database:com.johnsnowlabs.storage.Database.Name):com.johnsnowlabs.storage.RocksDBConnection", "kind" : "def"}, {"label" : "storageRef", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.storage.HasStorageRef.storageRef", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#storageRef:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): FeaturesAssembler.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): FeaturesAssembler.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): FeaturesAssembler.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): FeaturesAssembler.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): FeaturesAssembler.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): FeaturesAssembler.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): FeaturesAssembler.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): FeaturesAssembler.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): FeaturesAssembler.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#AnnotatorType=String", "kind" : "type"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#save(path:String):Unit", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): FeaturesAssembler.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): FeaturesAssembler.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): FeaturesAssembler.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): FeaturesAssembler.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): FeaturesAssembler.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): FeaturesAssembler.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/FeaturesAssembler.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.HasFeaturesJsl", "members_trait" : [{"label" : "$$", "tail" : "(feature: ResolverMapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeaturesJsl.$$", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#$$[K<:String,V<:com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel](feature:com.johnsnowlabs.nlp.serialization.ResolverMapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ResolverMapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeaturesJsl.get", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#get[K<:String,V<:com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel](feature:com.johnsnowlabs.nlp.serialization.ResolverMapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ResolverMapFeature[K, V], value: () ⇒ Map[K, V]): HasFeaturesJsl.this.type", "member" : "com.johnsnowlabs.nlp.HasFeaturesJsl.setDefault", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#setDefault[K<:String,V<:com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel](feature:com.johnsnowlabs.nlp.serialization.ResolverMapFeature[K,V],value:()=>Map[K,V]):HasFeaturesJsl.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ResolverMapFeature[K, V], value: Map[K, V]): HasFeaturesJsl.this.type", "member" : "com.johnsnowlabs.nlp.HasFeaturesJsl.set", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#set[K<:String,V<:com.johnsnowlabs.nlp.annotators.resolution.ChunkEntityResolverModel](feature:com.johnsnowlabs.nlp.serialization.ResolverMapFeature[K,V],value:Map[K,V]):HasFeaturesJsl.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeaturesJsl.features", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): HasFeaturesJsl.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): HasFeaturesJsl.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): HasFeaturesJsl.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): HasFeaturesJsl.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): HasFeaturesJsl.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): HasFeaturesJsl.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): HasFeaturesJsl.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): HasFeaturesJsl.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/HasFeaturesJsl.html", "kind" : "trait"}], "com.johnsnowlabs.nlp.annotators.datasets" : [{"name" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationAndText", "shortDescription" : "Case class, which represents Assertion Together with Text", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationAndText#<init>", "error" : "unsupported entity"}, {"label" : "end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationAndText.end", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#end:Int", "kind" : "val"}, {"label" : "start", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationAndText.start", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#start:Int", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationAndText.label", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#label:String", "kind" : "val"}, {"label" : "target", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationAndText.target", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#target:String", "kind" : "val"}, {"label" : "text", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationAndText.text", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#text:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationAndText.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel", "shortDescription" : "Case class, which represents Assertion Together with Label", "object" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html", "members_object" : [{"label" : "fromChunk", "tail" : "(sentence: Annotation, label: String, confidence: Double, chunkContent: Seq[Row], embeddingsSentence: WordpieceEmbeddingsSentence): Seq[AssertionAnnotationWithLabel]", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel.fromChunk", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#fromChunk(sentence:com.johnsnowlabs.nlp.Annotation,label:String,confidence:Double,chunkContent:Seq[org.apache.spark.sql.Row],embeddingsSentence:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence):Seq[com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel]", "kind" : "def"}, {"label" : "chunkIndexToTokenIndex", "tail" : "(b: Int, e: Int, idx: Int, cdx: Int, embeddingsSentence: WordpieceEmbeddingsSentence): IndexedChunk", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel.chunkIndexToTokenIndex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#chunkIndexToTokenIndex(b:Int,e:Int,idx:Int,cdx:Int,embeddingsSentence:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence):com.johnsnowlabs.nlp.annotators.datasets.IndexedChunk", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel#<init>", "error" : "unsupported entity"}, {"label" : "chunkId", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel.chunkId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#chunkId:Int", "kind" : "val"}, {"label" : "sentenceId", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel.sentenceId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#sentenceId:Int", "kind" : "val"}, {"label" : "end", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel.end", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#end:Int", "kind" : "val"}, {"label" : "start", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel.start", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#start:Int", "kind" : "val"}, {"label" : "confidence", "tail" : ": Double", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel.confidence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#confidence:Double", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.datasets.AssertionAnnotationWithLabel.label", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#label:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/AssertionAnnotationWithLabel.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.datasets.IndexedChunk", "shortDescription" : "Case class, which represents Indexed Chunk", "members_case class" : [{"member" : "com.johnsnowlabs.nlp.annotators.datasets.IndexedChunk#<init>", "error" : "unsupported entity"}, {"label" : "chunkEnd", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.datasets.IndexedChunk.chunkEnd", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#chunkEnd:Int", "kind" : "val"}, {"label" : "chunkBegin", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.datasets.IndexedChunk.chunkBegin", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#chunkBegin:Int", "kind" : "val"}, {"label" : "chunkId", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.datasets.IndexedChunk.chunkId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#chunkId:String", "kind" : "val"}, {"label" : "sentenceId", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.datasets.IndexedChunk.sentenceId", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#sentenceId:String", "kind" : "val"}, {"label" : "tokenEnd", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.datasets.IndexedChunk.tokenEnd", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#tokenEnd:Int", "kind" : "val"}, {"label" : "tokenBegin", "tail" : ": Int", "member" : "com.johnsnowlabs.nlp.annotators.datasets.IndexedChunk.tokenBegin", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#tokenBegin:Int", "kind" : "val"}, {"label" : "wordpieceEmbeddingsSentence", "tail" : ": WordpieceEmbeddingsSentence", "member" : "com.johnsnowlabs.nlp.annotators.datasets.IndexedChunk.wordpieceEmbeddingsSentence", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#wordpieceEmbeddingsSentence:com.johnsnowlabs.nlp.annotators.common.WordpieceEmbeddingsSentence", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/datasets\/IndexedChunk.html", "kind" : "case class"}], "com.johnsnowlabs.nlp.annotators.resolution.params" : [{"name" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams", "members_trait" : [{"label" : "getMissAsEmpty", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getMissAsEmpty:Boolean", "kind" : "def"}, {"label" : "setMissAsEmpty", "tail" : "(v: Boolean): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setMissAsEmpty(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "missAsEmpty", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.missAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#missAsEmpty:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getAllDistancesMetadata", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getAllDistancesMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getAllDistancesMetadata:Boolean", "kind" : "def"}, {"label" : "setAllDistancesMetadata", "tail" : "(v: Boolean): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setAllDistancesMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setAllDistancesMetadata(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "allDistancesMetadata", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.allDistancesMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#allDistancesMetadata:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getConfidenceFunction", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getConfidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getConfidenceFunction:String", "kind" : "def"}, {"label" : "setConfidenceFunction", "tail" : "(v: String): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setConfidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setConfidenceFunction(v:String):ResolverParams.this.type", "kind" : "def"}, {"label" : "confidenceFunction", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.confidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#confidenceFunction:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getPoolingStrategy", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getPoolingStrategy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getPoolingStrategy:String", "kind" : "def"}, {"label" : "setPoolingStrategy", "tail" : "(value: String): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setPoolingStrategy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setPoolingStrategy(value:String):ResolverParams.this.type", "kind" : "def"}, {"label" : "poolingStrategy", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.poolingStrategy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#poolingStrategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getDistanceWeights", "tail" : "(): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getDistanceWeights", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getDistanceWeights:Array[Double]", "kind" : "def"}, {"label" : "setDistanceWeights", "tail" : "(v: Array[Double]): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setDistanceWeights", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setDistanceWeights(v:Array[Double]):ResolverParams.this.type", "kind" : "def"}, {"label" : "distanceWeights", "tail" : ": DoubleArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.distanceWeights", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#distanceWeights:org.apache.spark.ml.param.DoubleArrayParam", "kind" : "val"}, {"label" : "getEnableLevenshtein", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableLevenshtein", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getEnableLevenshtein:Boolean", "kind" : "def"}, {"label" : "setEnableLevenshtein", "tail" : "(v: Boolean): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableLevenshtein", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setEnableLevenshtein(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableLevenshtein", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableLevenshtein", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#enableLevenshtein:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableJaroWinkler", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableJaroWinkler", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getEnableJaroWinkler:Boolean", "kind" : "def"}, {"label" : "setEnableJaroWinkler", "tail" : "(v: Boolean): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableJaroWinkler", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setEnableJaroWinkler(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableJaroWinkler", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableJaroWinkler", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#enableJaroWinkler:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableSorensenDice", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableSorensenDice", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getEnableSorensenDice:Boolean", "kind" : "def"}, {"label" : "setEnableSorensenDice", "tail" : "(v: Boolean): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableSorensenDice", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setEnableSorensenDice(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableSorensenDice", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableSorensenDice", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#enableSorensenDice:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableJaccard", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableJaccard", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getEnableJaccard:Boolean", "kind" : "def"}, {"label" : "setEnableJaccard", "tail" : "(v: Boolean): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableJaccard", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setEnableJaccard(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableJaccard", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableJaccard", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#enableJaccard:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableTfidf", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableTfidf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getEnableTfidf:Boolean", "kind" : "def"}, {"label" : "setEnableTfidf", "tail" : "(v: Boolean): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableTfidf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setEnableTfidf(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableTfidf", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableTfidf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#enableTfidf:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getEnableWmd", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getEnableWmd", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getEnableWmd:Boolean", "kind" : "def"}, {"label" : "setEnableWmd", "tail" : "(v: Boolean): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setEnableWmd", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setEnableWmd(v:Boolean):ResolverParams.this.type", "kind" : "def"}, {"label" : "enableWmd", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.enableWmd", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#enableWmd:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getExtramassPenalty", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getExtramassPenalty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getExtramassPenalty:Double", "kind" : "def"}, {"label" : "setExtramassPenalty", "tail" : "(emp: Double): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setExtramassPenalty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setExtramassPenalty(emp:Double):ResolverParams.this.type", "kind" : "def"}, {"label" : "extramassPenalty", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.extramassPenalty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#extramassPenalty:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "getThreshold", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getThreshold:Double", "kind" : "def"}, {"label" : "setThreshold", "tail" : "(dist: Double): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setThreshold(dist:Double):ResolverParams.this.type", "kind" : "def"}, {"label" : "threshold", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.threshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#threshold:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "getAlternatives", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getAlternatives", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getAlternatives:Int", "kind" : "def"}, {"label" : "setAlternatives", "tail" : "(a: Int): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setAlternatives", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setAlternatives(a:Int):ResolverParams.this.type", "kind" : "def"}, {"label" : "alternatives", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.alternatives", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#alternatives:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getNeighbours", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getNeighbours:Int", "kind" : "def"}, {"label" : "setNeighbours", "tail" : "(k: Int): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setNeighbours(k:Int):ResolverParams.this.type", "kind" : "def"}, {"label" : "neighbours", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.neighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#neighbours:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getDistanceFunction", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.getDistanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getDistanceFunction:String", "kind" : "def"}, {"label" : "setDistanceFunction", "tail" : "(value: String): ResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.setDistanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setDistanceFunction(value:String):ResolverParams.this.type", "kind" : "def"}, {"label" : "distanceFunction", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.ResolverParams.distanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#distanceFunction:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ResolverParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ResolverParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ResolverParams.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ResolverParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ResolverParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ResolverParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Params", "member" : "org.apache.spark.ml.param.Params.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.Params", "kind" : "abstract def"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.util.Identifiable.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html#uid:String", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/ResolverParams.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams", "members_trait" : [{"label" : "getMissAsEmpty", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#getMissAsEmpty:Boolean", "kind" : "def"}, {"label" : "setMissAsEmpty", "tail" : "(v: Boolean): SentenceResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setMissAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#setMissAsEmpty(v:Boolean):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "missAsEmpty", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.missAsEmpty", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#missAsEmpty:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "getConfidenceFunction", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getConfidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#getConfidenceFunction:String", "kind" : "def"}, {"label" : "setConfidenceFunction", "tail" : "(v: String): SentenceResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setConfidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#setConfidenceFunction(v:String):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "confidenceFunction", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.confidenceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#confidenceFunction:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getThreshold", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#getThreshold:Double", "kind" : "def"}, {"label" : "setThreshold", "tail" : "(dist: Double): SentenceResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#setThreshold(dist:Double):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "threshold", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.threshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#threshold:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "getNeighbours", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#getNeighbours:Int", "kind" : "def"}, {"label" : "setNeighbours", "tail" : "(k: Int): SentenceResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setNeighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#setNeighbours(k:Int):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "neighbours", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.neighbours", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#neighbours:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getDistanceFunction", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.getDistanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#getDistanceFunction:String", "kind" : "def"}, {"label" : "setDistanceFunction", "tail" : "(value: String): SentenceResolverParams.this.type", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.setDistanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#setDistanceFunction(value:String):SentenceResolverParams.this.type", "kind" : "def"}, {"label" : "distanceFunction", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.resolution.params.SentenceResolverParams.distanceFunction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#distanceFunction:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): SentenceResolverParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): SentenceResolverParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): SentenceResolverParams.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): SentenceResolverParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): SentenceResolverParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): SentenceResolverParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Params", "member" : "org.apache.spark.ml.param.Params.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.Params", "kind" : "abstract def"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.util.Identifiable.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html#uid:String", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/resolution\/params\/SentenceResolverParams.html", "kind" : "trait"}], "com.johnsnowlabs.nlp.annotators.deid.faker" : [{"name" : "com.johnsnowlabs.nlp.annotators.deid.faker.Age", "shortDescription" : "", "members_case class" : [{"label" : "getAge", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Age.getAge", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#getAge():Seq[String]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Age#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Age.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.faker.Company", "shortDescription" : "", "members_case class" : [{"label" : "healthPlan", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Company.healthPlan", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#healthPlan():Seq[String]", "kind" : "def"}, {"label" : "getCompany", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Company.getCompany", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#getCompany():Seq[String]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Company#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Company.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.faker.Contact", "shortDescription" : "", "members_case class" : [{"label" : "getUsername", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Contact.getUsername", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#getUsername():Seq[String]", "kind" : "def"}, {"label" : "getEMail", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Contact.getEMail", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#getEMail():Seq[String]", "kind" : "def"}, {"label" : "getPhoneNumber", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Contact.getPhoneNumber", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#getPhoneNumber():Seq[String]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Contact#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Contact.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html", "members_object" : [{"label" : "addresses", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.addresses", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#addresses:Seq[String]", "kind" : "val"}, {"label" : "zips", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.zips", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#zips:Seq[String]", "kind" : "val"}, {"label" : "usernames", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.usernames", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#usernames:Seq[String]", "kind" : "val"}, {"label" : "surnames", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.surnames", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#surnames:Seq[String]", "kind" : "val"}, {"label" : "names", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.names", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#names:Seq[String]", "kind" : "val"}, {"label" : "doctors", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.doctors", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#doctors:Seq[String]", "kind" : "val"}, {"label" : "getIDNUM", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.getIDNUM", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#getIDNUM:Seq[String]", "kind" : "val"}, {"label" : "ids", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.ids", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#ids:Seq[String]", "kind" : "val"}, {"label" : "dea", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.dea", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#dea:Seq[String]", "kind" : "val"}, {"label" : "iban", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.iban", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#iban:Seq[String]", "kind" : "val"}, {"label" : "npi", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.npi", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#npi:Seq[String]", "kind" : "val"}, {"label" : "c_card", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.c_card", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#c_card:Seq[String]", "kind" : "val"}, {"label" : "dln", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.dln", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#dln:Seq[String]", "kind" : "val"}, {"label" : "ssn", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.ssn", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#ssn:Seq[String]", "kind" : "val"}, {"label" : "passport", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.passport", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#passport:Seq[String]", "kind" : "val"}, {"label" : "medicalRecord", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.medicalRecord", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#medicalRecord:Seq[String]", "kind" : "val"}, {"label" : "emails", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.emails", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#emails:Seq[String]", "kind" : "val"}, {"label" : "ages", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.ages", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#ages:Seq[String]", "kind" : "val"}, {"label" : "healthPlans", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.healthPlans", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#healthPlans:Seq[String]", "kind" : "val"}, {"label" : "emailProviders", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.emailProviders", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#emailProviders:Seq[String]", "kind" : "val"}, {"label" : "urls", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.urls", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#urls:Seq[String]", "kind" : "val"}, {"label" : "companies", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.companies", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#companies:Seq[String]", "kind" : "val"}, {"label" : "professions", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.professions", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#professions:Seq[String]", "kind" : "val"}, {"label" : "phone_numbers", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.phone_numbers", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#phone_numbers:Seq[String]", "kind" : "val"}, {"label" : "countries", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.countries", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#countries:Seq[String]", "kind" : "val"}, {"label" : "hospitals", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.hospitals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#hospitals:Seq[String]", "kind" : "val"}, {"label" : "states", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.states", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#states:Seq[String]", "kind" : "val"}, {"label" : "streets", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.streets", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#streets:Seq[String]", "kind" : "val"}, {"label" : "cities", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.cities", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#cities:Seq[String]", "kind" : "val"}, {"label" : "lastNames", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.lastNames", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#lastNames:Seq[String]", "kind" : "val"}, {"label" : "firstNames", "tail" : ": Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.firstNames", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#firstNames:Seq[String]", "kind" : "val"}, {"label" : "random", "tail" : ": Random", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Faker.random", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#random:scala.util.Random", "kind" : "implicit val"}, {"label" : "getRandomDigit", "tail" : "(digits: Int)(random: Random): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.RandomsElements.getRandomDigit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#getRandomDigit(digits:Int)(implicitrandom:scala.util.Random):String", "kind" : "def"}, {"label" : "getRandomLetter", "tail" : "(random: Random): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.RandomsElements.getRandomLetter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#getRandomLetter(implicitrandom:scala.util.Random):String", "kind" : "def"}, {"label" : "getRandomElement", "tail" : "(values: Seq[String])(random: Random): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.RandomsElements.getRandomElement", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#getRandomElement(values:Seq[String])(implicitrandom:scala.util.Random):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Faker$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.faker.ID", "shortDescription" : "", "members_case class" : [{"label" : "getSSN", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.ID.getSSN", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#getSSN():Seq[String]", "kind" : "def"}, {"label" : "getDEA", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.ID.getDEA", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#getDEA():Seq[String]", "kind" : "def"}, {"label" : "getIBAN", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.ID.getIBAN", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#getIBAN():Seq[String]", "kind" : "def"}, {"label" : "getC_CARD", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.ID.getC_CARD", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#getC_CARD():Seq[String]", "kind" : "def"}, {"label" : "getNPI", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.ID.getNPI", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#getNPI():Seq[String]", "kind" : "def"}, {"label" : "getDLN", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.ID.getDLN", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#getDLN():Seq[String]", "kind" : "def"}, {"label" : "getPassport", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.ID.getPassport", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#getPassport():Seq[String]", "kind" : "def"}, {"label" : "getMedicalRecord", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.ID.getMedicalRecord", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#getMedicalRecord():Seq[String]", "kind" : "def"}, {"label" : "getIDNUM", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.ID.getIDNUM", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#getIDNUM():Seq[String]", "kind" : "def"}, {"label" : "getID", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.ID.getID", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#getID():Seq[String]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.faker.ID#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/ID.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.faker.Location", "shortDescription" : "", "members_case class" : [{"label" : "getZIP", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Location.getZIP", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#getZIP():Seq[String]", "kind" : "def"}, {"label" : "getHospital", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Location.getHospital", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#getHospital():Seq[String]", "kind" : "def"}, {"label" : "getCountry", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Location.getCountry", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#getCountry():Seq[String]", "kind" : "def"}, {"label" : "getState", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Location.getState", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#getState():Seq[String]", "kind" : "def"}, {"label" : "getCity", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Location.getCity", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#getCity():Seq[String]", "kind" : "def"}, {"label" : "getStreetAddress", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Location.getStreetAddress", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#getStreetAddress():Seq[String]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Location#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Location.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.faker.Person", "shortDescription" : "", "members_case class" : [{"label" : "getDoctor", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Person.getDoctor", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#getDoctor():Seq[String]", "kind" : "def"}, {"label" : "getLastName", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Person.getLastName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#getLastName():Seq[String]", "kind" : "def"}, {"label" : "getFirstName", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Person.getFirstName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#getFirstName():Seq[String]", "kind" : "def"}, {"label" : "getName", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Person.getName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#getName():Seq[String]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Person#<init>", "error" : "unsupported entity"}, {"label" : "getRandomDigit", "tail" : "(digits: Int)(random: Random): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.RandomsElements.getRandomDigit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#getRandomDigit(digits:Int)(implicitrandom:scala.util.Random):String", "kind" : "def"}, {"label" : "getRandomLetter", "tail" : "(random: Random): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.RandomsElements.getRandomLetter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#getRandomLetter(implicitrandom:scala.util.Random):String", "kind" : "def"}, {"label" : "getRandomElement", "tail" : "(values: Seq[String])(random: Random): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.RandomsElements.getRandomElement", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#getRandomElement(values:Seq[String])(implicitrandom:scala.util.Random):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Person.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.faker.Profession", "shortDescription" : "", "members_case class" : [{"label" : "getJob", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Profession.getJob", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#getJob():Seq[String]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.faker.Profession#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/Profession.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.faker.RandomsElements", "members_trait" : [{"label" : "getRandomDigit", "tail" : "(digits: Int)(random: Random): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.RandomsElements.getRandomDigit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#getRandomDigit(digits:Int)(implicitrandom:scala.util.Random):String", "kind" : "def"}, {"label" : "getRandomLetter", "tail" : "(random: Random): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.RandomsElements.getRandomLetter", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#getRandomLetter(implicitrandom:scala.util.Random):String", "kind" : "def"}, {"label" : "getRandomElement", "tail" : "(values: Seq[String])(random: Random): String", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.RandomsElements.getRandomElement", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#getRandomElement(values:Seq[String])(implicitrandom:scala.util.Random):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/RandomsElements.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.faker.SelectionUtil", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html", "members_object" : [{"label" : "SeqImprovements", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.SelectionUtil.SeqImprovements", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#SeqImprovementsextendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/SelectionUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.nlp.annotators.deid.faker.URL", "shortDescription" : "", "members_case class" : [{"label" : "getURL", "tail" : "(): Seq[String]", "member" : "com.johnsnowlabs.nlp.annotators.deid.faker.URL.getURL", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#getURL():Seq[String]", "kind" : "def"}, {"member" : "com.johnsnowlabs.nlp.annotators.deid.faker.URL#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/nlp\/annotators\/deid\/faker\/URL.html", "kind" : "case class"}], "com.johnsnowlabs.util.wmd4j" : [{"name" : "com.johnsnowlabs.util.wmd4j.FrequencyVector", "shortDescription" : "Created by Majer on 21.9.2016.", "members_class" : [{"label" : "getVector", "tail" : "(): Array[Float]", "member" : "com.johnsnowlabs.util.wmd4j.FrequencyVector.getVector", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#getVector():Array[Float]", "kind" : "def"}, {"label" : "getFrequency", "tail" : "(): Long", "member" : "com.johnsnowlabs.util.wmd4j.FrequencyVector.getFrequency", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#getFrequency():Long", "kind" : "def"}, {"label" : "incrementFrequency", "tail" : "(): Unit", "member" : "com.johnsnowlabs.util.wmd4j.FrequencyVector.incrementFrequency", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#incrementFrequency():Unit", "kind" : "def"}, {"member" : "com.johnsnowlabs.util.wmd4j.FrequencyVector#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.util.wmd4j.FrequencyVector#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/util\/wmd4j\/FrequencyVector.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.util.wmd4j.SparkNLPWordVectors", "shortDescription" : "", "members_class" : [{"label" : "getWordVectorMatrix", "tail" : "(w: String): Array[Float]", "member" : "com.johnsnowlabs.util.wmd4j.SparkNLPWordVectors.getWordVectorMatrix", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#getWordVectorMatrix(w:String):Array[Float]", "kind" : "def"}, {"label" : "hasWord", "tail" : "(w: String): Boolean", "member" : "com.johnsnowlabs.util.wmd4j.SparkNLPWordVectors.hasWord", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#hasWord(w:String):Boolean", "kind" : "def"}, {"member" : "com.johnsnowlabs.util.wmd4j.SparkNLPWordVectors#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/util\/wmd4j\/SparkNLPWordVectors.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.util.wmd4j.WordMovers", "shortDescription" : "Created by Majer on 21.9.2016.", "members_class" : [{"label" : "distance", "tail" : "(tokensA: Array[String], tokensB: Array[String]): Double", "member" : "com.johnsnowlabs.util.wmd4j.WordMovers.distance", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#distance(tokensA:Array[String],tokensB:Array[String]):Double", "kind" : "def"}, {"label" : "distance", "tail" : "(a: String, b: String): Double", "member" : "com.johnsnowlabs.util.wmd4j.WordMovers.distance", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#distance(a:String,b:String):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/util\/wmd4j\/WordMovers.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.util.wmd4j.WordVectors", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getWordVectorMatrix", "tail" : "(w: String): Array[Float]", "member" : "com.johnsnowlabs.util.wmd4j.WordVectors.getWordVectorMatrix", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#getWordVectorMatrix(w:String):Array[Float]", "kind" : "abstract def"}, {"label" : "hasWord", "tail" : "(w: String): Boolean", "member" : "com.johnsnowlabs.util.wmd4j.WordVectors.hasWord", "link" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html#hasWord(w:String):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/util\/wmd4j\/WordVectors.html", "kind" : "trait"}], "com.johnsnowlabs.license" : [{"name" : "com.johnsnowlabs.license.Keys", "shortDescription" : "", "object" : "com\/johnsnowlabs\/license\/Keys$.html", "members_object" : [{"label" : "getPublic", "tail" : "(filename: String): PublicKey", "member" : "com.johnsnowlabs.license.Keys.getPublic", "link" : "com\/johnsnowlabs\/license\/Keys$.html#getPublic(filename:String):java.security.PublicKey", "kind" : "def"}, {"label" : "getPrivate", "tail" : "(filename: String): PrivateKey", "member" : "com.johnsnowlabs.license.Keys.getPrivate", "link" : "com\/johnsnowlabs\/license\/Keys$.html#getPrivate(filename:String):java.security.PrivateKey", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/license\/Keys$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/license\/Keys$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/license\/Keys$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/license\/Keys$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/license\/Keys$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/license\/Keys$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/license\/Keys$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/license\/Keys$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/license\/Keys$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/license\/Keys$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/license\/Keys$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/license\/Keys$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/license\/Keys$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/license\/Keys$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/license\/Keys$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/license\/Keys$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/license\/Keys$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/license\/Keys$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/license\/Keys$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.license.Licensed", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/license\/Licensed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/license\/Licensed.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/license\/Licensed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/license\/Licensed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/license\/Licensed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/license\/Licensed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/license\/Licensed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/license\/Licensed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/license\/Licensed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/license\/Licensed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/license\/Licensed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/license\/Licensed.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/license\/Licensed.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/license\/Licensed.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/license\/Licensed.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/license\/Licensed.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/license\/Licensed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/license\/Licensed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/license\/Licensed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/license\/Licensed.html", "kind" : "trait"}, {"name" : "com.johnsnowlabs.license.LicenseValidationException", "shortDescription" : "", "members_case class" : [{"member" : "com.johnsnowlabs.license.LicenseValidationException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/license\/LicenseValidationException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/johnsnowlabs\/license\/LicenseValidationException.html", "kind" : "case class"}, {"name" : "com.johnsnowlabs.license.LicenseValidator", "shortDescription" : "", "object" : "com\/johnsnowlabs\/license\/LicenseValidator$.html", "members_object" : [{"label" : "getPublic", "tail" : "(filename: String): PublicKey", "member" : "com.johnsnowlabs.license.LicenseValidator.getPublic", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#getPublic(filename:String):java.security.PublicKey", "kind" : "def"}, {"label" : "isValidLicence", "tail" : ": Boolean", "member" : "com.johnsnowlabs.license.LicenseValidator.isValidLicence", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#isValidLicence:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/license\/LicenseValidator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com" : [], "com.johnsnowlabs.nlp.annotators.chunker" : [{"name" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer", "shortDescription" : "Filters entities coming from ASSERTION type annotations and returns the CHUNKS.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html", "members_class" : [{"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "setRegex", "tail" : "(list: String*): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer.setRegex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setRegex(list:String*):AssertionFilterer.this.type", "kind" : "def"}, {"label" : "regex", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer.regex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#regex:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "setCriteria", "tail" : "(s: String): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer.setCriteria", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setCriteria(s:String):AssertionFilterer.this.type", "kind" : "def"}, {"label" : "criteria", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer.criteria", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#criteria:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setWhiteList", "tail" : "(list: String*): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer.setWhiteList", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setWhiteList(list:String*):AssertionFilterer.this.type", "kind" : "def"}, {"label" : "whiteList", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer.whiteList", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#whiteList:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#inputAnnotatorTypes:Array[AssertionFilterer.this.AnnotatorType]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#outputAnnotatorType:AssertionFilterer.this.AnnotatorType", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.chunker.AssertionFilterer.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): AssertionFilterer", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): AssertionFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[AssertionFilterer]): AssertionFilterer", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[AssertionFilterer]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): AssertionFilterer.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): AssertionFilterer.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): AssertionFilterer.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): AssertionFilterer.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): AssertionFilterer.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): AssertionFilterer.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[AssertionFilterer]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (AssertionFilterer, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): AssertionFilterer", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/AssertionFilterer.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer", "shortDescription" : "Filters entities coming from CHUNK annotations.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html", "members_class" : [{"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "setRegex", "tail" : "(list: String*): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer.setRegex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setRegex(list:String*):ChunkFilterer.this.type", "kind" : "def"}, {"label" : "regex", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer.regex", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#regex:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "setCriteria", "tail" : "(s: String): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer.setCriteria", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setCriteria(s:String):ChunkFilterer.this.type", "kind" : "def"}, {"label" : "criteria", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer.criteria", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#criteria:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "setWhiteList", "tail" : "(list: String*): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer.setWhiteList", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setWhiteList(list:String*):ChunkFilterer.this.type", "kind" : "def"}, {"label" : "whiteList", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer.whiteList", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#whiteList:org.apache.spark.ml.param.StringArrayParam", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[AnnotatorType]", "member" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#inputAnnotatorTypes:Array[ChunkFilterer.this.AnnotatorType]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#outputAnnotatorType:ChunkFilterer.this.AnnotatorType", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.chunker.ChunkFilterer.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): AssertionFilterer", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): ChunkFilterer.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[AssertionFilterer]): AssertionFilterer", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[AssertionFilterer]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ChunkFilterer.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ChunkFilterer.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ChunkFilterer.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ChunkFilterer.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ChunkFilterer.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ChunkFilterer.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[ChunkFilterer]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (ChunkFilterer, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): ChunkFilterer", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/chunker\/ChunkFilterer.html", "kind" : "class"}], "com.johnsnowlabs.nlp.eval.resolution" : [{"name" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver", "members_trait" : [{"label" : "hitsAtK", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, k: Int, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.hitsAtK", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#hitsAtK(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,k:Int,numOfChars:Int):Double", "kind" : "def"}, {"label" : "accuracy", "tail" : "(dataset: DataFrame, trueCol: String, resolverCol: String, numOfChars: Int): Double", "member" : "com.johnsnowlabs.nlp.eval.resolution.EvalEntityResolver.accuracy", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#accuracy(dataset:org.apache.spark.sql.DataFrame,trueCol:String,resolverCol:String,numOfChars:Int):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/johnsnowlabs\/nlp\/eval\/resolution\/EvalEntityResolver.html", "kind" : "trait"}], "com.johnsnowlabs.util.external.wmd4j" : [{"name" : "com.johnsnowlabs.util.external.wmd4j.Cosine", "shortDescription" : "", "object" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html", "members_object" : [{"label" : "distance", "tail" : "(a: Array[Float], b: Array[Float]): Double", "member" : "com.johnsnowlabs.util.external.wmd4j.Cosine.distance", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#distance(a:Array[Float],b:Array[Float]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Cosine$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.johnsnowlabs.util.external.wmd4j.Euclidean", "shortDescription" : "", "object" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html", "members_object" : [{"label" : "distance", "tail" : "(a: Array[Float], b: Array[Float]): Double", "member" : "com.johnsnowlabs.util.external.wmd4j.Euclidean.distance", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#distance(a:Array[Float],b:Array[Float]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/util\/external\/wmd4j\/Euclidean$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.johnsnowlabs.util.external" : [], "com.johnsnowlabs.nlp.annotators.disambiguation" : [{"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator", "shortDescription" : "Links words of interest, such as names of persons, locations and companies, from an input text document toa corresponding unique entity in a target Knowledge Base (KB).", "object" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html", "members_class" : [{"label" : "train", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): NerDisambiguatorModel", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator.train", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#train(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel", "kind" : "def"}, {"label" : "rocksDbReader", "tail" : ": RocksDbReader", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator.rocksDbReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#rocksDbReader:com.johnsnowlabs.nlp.annotators.disambiguation.util.read.RocksDbReader", "kind" : "lazy val"}, {"member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator#<init>", "error" : "unsupported entity"}, {"label" : "setS3KnowledgeBaseName", "tail" : "(path: String): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator.setS3KnowledgeBaseName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setS3KnowledgeBaseName(path:String):NerDisambiguator.this.type", "kind" : "def"}, {"label" : "setKnowledgeBase", "tail" : "(path: String): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator.setKnowledgeBase", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setKnowledgeBase(path:String):NerDisambiguator.this.type", "kind" : "def"}, {"label" : "s3KnowledgeBaseName", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator.s3KnowledgeBaseName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#s3KnowledgeBaseName:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "knowledgeBase", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator.knowledgeBase", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#knowledgeBase:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#outputAnnotatorType:NerDisambiguator.this.AnnotatorType", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator.description", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#description:String", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguator.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#uid:String", "kind" : "val"}, {"label" : "getPredictionLimit", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getPredictionLimit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getPredictionLimit:Int", "kind" : "def"}, {"label" : "setPredictionLimit", "tail" : "(v: Int): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setPredictionLimit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setPredictionLimit(v:Int):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getNearMatchingGapParam", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getNearMatchingGapParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getNearMatchingGapParam:Int", "kind" : "def"}, {"label" : "setNearMatchingGapParam", "tail" : "(v: Int): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setNearMatchingGapParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setNearMatchingGapParam(v:Int):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getLevenshteinDistanceThresholdParam", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getLevenshteinDistanceThresholdParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getLevenshteinDistanceThresholdParam:Double", "kind" : "def"}, {"label" : "setLevenshteinDistanceThresholdParam", "tail" : "(v: Double): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setLevenshteinDistanceThresholdParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setLevenshteinDistanceThresholdParam(v:Double):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getNarrowWithApproximateMatching", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getNarrowWithApproximateMatching", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getNarrowWithApproximateMatching:Boolean", "kind" : "def"}, {"label" : "setNarrowWithApproximateMatching", "tail" : "(v: Boolean): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setNarrowWithApproximateMatching", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setNarrowWithApproximateMatching(v:Boolean):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "setEmbeddingType", "tail" : "(v: String): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setEmbeddingType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setEmbeddingType(v:String):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getEmbeddingType", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getEmbeddingType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getEmbeddingType:String", "kind" : "def"}, {"label" : "getTokenSearch", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getTokenSearch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getTokenSearch:Boolean", "kind" : "def"}, {"label" : "setTokenSearch", "tail" : "(v: Boolean): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setTokenSearch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setTokenSearch(v:Boolean):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getNumFirstChars", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getNumFirstChars", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getNumFirstChars:Int", "kind" : "def"}, {"label" : "setNumFirstChars", "tail" : "(v: Int): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setNumFirstChars", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setNumFirstChars(v:Int):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "setKnowledgeBaseStructure", "tail" : "(kb: Knowledge): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setKnowledgeBaseStructure", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setKnowledgeBaseStructure(kb:com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "predictionsLimit", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.predictionsLimit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#predictionsLimit:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "nearMatchingGapParam", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.nearMatchingGapParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#nearMatchingGapParam:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "levenshteinDistanceThresholdParam", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.levenshteinDistanceThresholdParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#levenshteinDistanceThresholdParam:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "narrowWithApproximateMatching", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.narrowWithApproximateMatching", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#narrowWithApproximateMatching:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "tokenSearch", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.tokenSearch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#tokenSearch:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "numFirstChars", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.numFirstChars", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#numFirstChars:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "embeddingTypeParam", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.embeddingTypeParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#embeddingTypeParam:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "knowledgeBaseStructure", "tail" : ": StructFeature[Knowledge]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.knowledgeBaseStructure", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#knowledgeBaseStructure:com.johnsnowlabs.nlp.serialization.StructFeature[com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge]", "kind" : "val"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "extractKnowledgeFromKv", "tail" : "(id2record: (DataId) ⇒ Option[Record], chunk2id: (Chunk) ⇒ Option[List[DataId]]): Knowledge", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.KvKnowledgeExtractor.extractKnowledgeFromKv", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#extractKnowledgeFromKv(id2record:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId=>Option[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.ContextMappingsSchema.Record],chunk2id:com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.Chunk=>Option[List[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.LinalgAliases.DataId]]):com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Estimator[NerDisambiguatorModel]", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.Estimator[M]", "kind" : "final def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): NerDisambiguatorModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "final def"}, {"label" : "_fit", "tail" : "(dataset: Dataset[_], recursiveStages: Option[PipelineModel]): NerDisambiguatorModel", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach._fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#_fit(dataset:org.apache.spark.sql.Dataset[_],recursiveStages:Option[org.apache.spark.ml.PipelineModel]):M", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "onTrained", "tail" : "(model: NerDisambiguatorModel, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.onTrained", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#onTrained(model:M,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "beforeTraining", "tail" : "(spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.AnnotatorApproach.beforeTraining", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#beforeTraining(spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#save(path:String):Unit", "kind" : "def"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#AnnotatorType=String", "kind" : "type"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): NerDisambiguator.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Array[ParamMap]): Seq[NerDisambiguatorModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Array[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): NerDisambiguatorModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): NerDisambiguatorModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): NerDisambiguator.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): NerDisambiguator.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): NerDisambiguator.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): NerDisambiguator.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): NerDisambiguator.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): NerDisambiguator.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[NerDisambiguator]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): NerDisambiguator", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguator.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel", "shortDescription" : "Instantiated \/ pretrained model of the NerDisambiguator.", "object" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html", "members_class" : [{"label" : "Prediction", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.Prediction", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/logic\/PredictionLogic.html#PredictionextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "embeddingType", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.embeddingType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#embeddingType:String", "kind" : "def"}, {"label" : "limit", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.limit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#limit:Int", "kind" : "def"}, {"label" : "enableApproximateMatching", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.enableApproximateMatching", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#enableApproximateMatching:Boolean", "kind" : "def"}, {"label" : "nearMatchingGap", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.nearMatchingGap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#nearMatchingGap:Int", "kind" : "def"}, {"label" : "levenshteinDistanceThreshold", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.levenshteinDistanceThreshold", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#levenshteinDistanceThreshold:Double", "kind" : "def"}, {"label" : "searchByToken", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.searchByToken", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#searchByToken:Boolean", "kind" : "def"}, {"label" : "id2categoryF", "tail" : ": (Int) ⇒ OptionAsSeq[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.id2categoryF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#id2categoryF:Int=>NerDisambiguatorModel.this.OptionAsSeq[String]", "kind" : "lazy val"}, {"label" : "id2titleF", "tail" : ": (Int) ⇒ OptionAsSeq[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.id2titleF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#id2titleF:Int=>NerDisambiguatorModel.this.OptionAsSeq[String]", "kind" : "lazy val"}, {"label" : "id2linkF", "tail" : ": (Int) ⇒ OptionAsSeq[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.id2linkF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#id2linkF:Int=>NerDisambiguatorModel.this.OptionAsSeq[String]", "kind" : "lazy val"}, {"label" : "id2embF", "tail" : ": (Int) ⇒ OptionAsSeq[Array[Double]]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.id2embF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#id2embF:Int=>NerDisambiguatorModel.this.OptionAsSeq[Array[Double]]", "kind" : "lazy val"}, {"label" : "chunk2idF", "tail" : ": (String) ⇒ Option[List[Int]]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.chunk2idF", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#chunk2idF:String=>Option[List[Int]]", "kind" : "lazy val"}, {"label" : "knowledge", "tail" : ": Knowledge", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.knowledge", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#knowledge:com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge", "kind" : "lazy val"}, {"label" : "outputAnnotatorType", "tail" : ": AnnotatorType", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.outputAnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#outputAnnotatorType:NerDisambiguatorModel.this.AnnotatorType", "kind" : "val"}, {"label" : "inputAnnotatorTypes", "tail" : ": Array[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.inputAnnotatorTypes", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#inputAnnotatorTypes:Array[String]", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel#<init>", "error" : "unsupported entity"}, {"member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.NerDisambiguatorModel.uid", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#uid:String", "kind" : "val"}, {"label" : "dfAnnotate", "tail" : "(): UserDefinedFunction", "member" : "com.johnsnowlabs.nlp.HasSimpleAnnotate.dfAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#dfAnnotate:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "getSentenceEmbedding", "tail" : "(annotations: Seq[Annotation]): SentenceEmbeddingWithType", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.SwitchableEmbeddingsExtractor.getSentenceEmbedding", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getSentenceEmbedding(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.SentenceEmbeddingWithType", "kind" : "def"}, {"label" : "getPredictionLimit", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getPredictionLimit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getPredictionLimit:Int", "kind" : "def"}, {"label" : "setPredictionLimit", "tail" : "(v: Int): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setPredictionLimit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setPredictionLimit(v:Int):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getNearMatchingGapParam", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getNearMatchingGapParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getNearMatchingGapParam:Int", "kind" : "def"}, {"label" : "setNearMatchingGapParam", "tail" : "(v: Int): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setNearMatchingGapParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setNearMatchingGapParam(v:Int):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getLevenshteinDistanceThresholdParam", "tail" : "(): Double", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getLevenshteinDistanceThresholdParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getLevenshteinDistanceThresholdParam:Double", "kind" : "def"}, {"label" : "setLevenshteinDistanceThresholdParam", "tail" : "(v: Double): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setLevenshteinDistanceThresholdParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setLevenshteinDistanceThresholdParam(v:Double):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getNarrowWithApproximateMatching", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getNarrowWithApproximateMatching", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getNarrowWithApproximateMatching:Boolean", "kind" : "def"}, {"label" : "setNarrowWithApproximateMatching", "tail" : "(v: Boolean): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setNarrowWithApproximateMatching", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setNarrowWithApproximateMatching(v:Boolean):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "setEmbeddingType", "tail" : "(v: String): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setEmbeddingType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setEmbeddingType(v:String):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getEmbeddingType", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getEmbeddingType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getEmbeddingType:String", "kind" : "def"}, {"label" : "getTokenSearch", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getTokenSearch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getTokenSearch:Boolean", "kind" : "def"}, {"label" : "setTokenSearch", "tail" : "(v: Boolean): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setTokenSearch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setTokenSearch(v:Boolean):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "getNumFirstChars", "tail" : "(): Int", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.getNumFirstChars", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getNumFirstChars:Int", "kind" : "def"}, {"label" : "setNumFirstChars", "tail" : "(v: Int): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setNumFirstChars", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setNumFirstChars(v:Int):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "setKnowledgeBaseStructure", "tail" : "(kb: Knowledge): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.setKnowledgeBaseStructure", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setKnowledgeBaseStructure(kb:com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge):DisambiguatorModelParams.this.type", "kind" : "def"}, {"label" : "predictionsLimit", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.predictionsLimit", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#predictionsLimit:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "nearMatchingGapParam", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.nearMatchingGapParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#nearMatchingGapParam:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "levenshteinDistanceThresholdParam", "tail" : ": DoubleParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.levenshteinDistanceThresholdParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#levenshteinDistanceThresholdParam:org.apache.spark.ml.param.DoubleParam", "kind" : "val"}, {"label" : "narrowWithApproximateMatching", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.narrowWithApproximateMatching", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#narrowWithApproximateMatching:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "tokenSearch", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.tokenSearch", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#tokenSearch:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "numFirstChars", "tail" : ": IntParam", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.numFirstChars", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#numFirstChars:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "embeddingTypeParam", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.embeddingTypeParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#embeddingTypeParam:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "knowledgeBaseStructure", "tail" : ": StructFeature[Knowledge]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.util.DisambiguatorModelParams.knowledgeBaseStructure", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#knowledgeBaseStructure:com.johnsnowlabs.nlp.serialization.StructFeature[com.johnsnowlabs.nlp.annotators.disambiguation.logic.Knowledge]", "kind" : "val"}, {"label" : "poolEmbeddings", "tail" : "(embeddings: Array[Array[Float]]): Array[Double]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.impl.PoolingLogicBase.poolEmbeddings", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#poolEmbeddings(embeddings:Array[Array[Float]]):Array[Double]", "kind" : "def"}, {"label" : "annotate", "tail" : "(annotations: Seq[Annotation]): Seq[Annotation]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.AnnotationLogic.annotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#annotate(annotations:Seq[com.johnsnowlabs.nlp.Annotation]):Seq[com.johnsnowlabs.nlp.Annotation]", "kind" : "def"}, {"label" : "predictByChunk", "tail" : "(annotations: Seq[Annotation], numFirstChars: Int): Seq[Prediction]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.PredictionLogic.predictByChunk", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#predictByChunk(annotations:Seq[com.johnsnowlabs.nlp.Annotation],numFirstChars:Int):Seq[PredictionLogic.this.Prediction]", "kind" : "def"}, {"label" : "EmbeddingsRef", "tail" : ": String", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.embeddings.EmbeddingsExtractor.EmbeddingsRef", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#EmbeddingsRef:String", "kind" : "val"}, {"label" : "OptionAsSeq", "tail" : "", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.logic.Mappings.OptionAsSeq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#OptionAsSeq[T]=Seq[T]", "kind" : "type"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "_transform", "tail" : "(dataset: Dataset[_], recursivePipeline: Option[PipelineModel]): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel._transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#_transform(dataset:org.apache.spark.sql.Dataset[_],recursivePipeline:Option[org.apache.spark.ml.PipelineModel]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterAnnotate", "tail" : "(dataset: DataFrame): DataFrame", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.afterAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#afterAnnotate(dataset:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeAnnotate", "tail" : "(dataset: Dataset[_]): Dataset[_]", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.beforeAnnotate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#beforeAnnotate(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.Dataset[_]", "kind" : "def"}, {"label" : "AnnotationContent", "tail" : "", "member" : "com.johnsnowlabs.nlp.AnnotatorModel.AnnotationContent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#AnnotationContent=Seq[org.apache.spark.sql.Row]", "kind" : "type"}, {"label" : "getLazyAnnotator", "tail" : "(): Boolean", "member" : "com.johnsnowlabs.nlp.CanBeLazy.getLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getLazyAnnotator:Boolean", "kind" : "def"}, {"label" : "setLazyAnnotator", "tail" : "(value: Boolean): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.CanBeLazy.setLazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setLazyAnnotator(value:Boolean):com.johnsnowlabs.nlp.CanBeLazy.<refinement>.type", "kind" : "def"}, {"label" : "lazyAnnotator", "tail" : ": BooleanParam", "member" : "com.johnsnowlabs.nlp.CanBeLazy.lazyAnnotator", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#lazyAnnotator:org.apache.spark.ml.param.BooleanParam", "kind" : "val"}, {"label" : "copy", "tail" : "(extra: ParamMap): NerDisambiguatorModel", "member" : "com.johnsnowlabs.nlp.RawAnnotator.copy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.johnsnowlabs.nlp.RawAnnotator.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "final def"}, {"label" : "extraValidate", "tail" : "(structType: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#extraValidate(structType:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "extraValidateMsg", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.RawAnnotator.extraValidateMsg", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#extraValidateMsg:String", "kind" : "def"}, {"label" : "validate", "tail" : "(schema: StructType): Boolean", "member" : "com.johnsnowlabs.nlp.RawAnnotator.validate", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#validate(schema:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "wrapColumnMetadata", "tail" : "(col: Column): Column", "member" : "com.johnsnowlabs.nlp.RawAnnotator.wrapColumnMetadata", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#wrapColumnMetadata(col:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getOutputCol", "tail" : "(): String", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.getOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getOutputCol:String", "kind" : "final def"}, {"label" : "setOutputCol", "tail" : "(value: String): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.setOutputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setOutputCol(value:String):HasOutputAnnotationCol.this.type", "kind" : "final def"}, {"label" : "outputCol", "tail" : ": Param[String]", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotationCol.outputCol", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#outputCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInputCols", "tail" : "(): Array[String]", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.getInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getInputCols:Array[String]", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: String*): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setInputCols(value:String*):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "checkSchema", "tail" : "(schema: StructType, inputAnnotatorType: String): Boolean", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.checkSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#checkSchema(schema:org.apache.spark.sql.types.StructType,inputAnnotatorType:String):Boolean", "kind" : "final def"}, {"label" : "msgHelper", "tail" : "(schema: StructType): String", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.msgHelper", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#msgHelper(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "setInputCols", "tail" : "(value: Array[String]): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.setInputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setInputCols(value:Array[String]):HasInputAnnotationCols.this.type", "kind" : "final def"}, {"label" : "inputCols", "tail" : ": StringArrayParam", "member" : "com.johnsnowlabs.nlp.HasInputAnnotationCols.inputCols", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#inputCols:org.apache.spark.ml.param.StringArrayParam", "kind" : "final val"}, {"label" : "AnnotatorType", "tail" : "", "member" : "com.johnsnowlabs.nlp.HasOutputAnnotatorType.AnnotatorType", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#AnnotatorType=String", "kind" : "type"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.write", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "onWrite", "tail" : "(path: String, spark: SparkSession): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesWritable.onWrite", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#onWrite(path:String,spark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: StructFeature[T]): T", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):T", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: MapFeature[K, V]): Map[K, V]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#$$[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Map[K,V]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: SetFeature[T]): Set[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Set[T]", "kind" : "def"}, {"label" : "$$", "tail" : "(feature: ArrayFeature[T]): Array[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.$$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#$$[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Array[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: StructFeature[T]): Option[T]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: MapFeature[K, V]): Option[Map[K, V]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#get[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V]):Option[Map[K,V]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: SetFeature[T]): Option[Set[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T]):Option[Set[T]]", "kind" : "def"}, {"label" : "get", "tail" : "(feature: ArrayFeature[T]): Option[Array[T]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#get[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T]):Option[Array[T]]", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: StructFeature[T], value: () ⇒ T): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:()=>T):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: MapFeature[K, V], value: () ⇒ Map[K, V]): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setDefault[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:()=>Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: SetFeature[T], value: () ⇒ Set[T]): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:()=>Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "setDefault", "tail" : "(feature: ArrayFeature[T], value: () ⇒ Array[T]): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setDefault[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:()=>Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: StructFeature[T], value: T): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.StructFeature[T],value:T):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: MapFeature[K, V], value: Map[K, V]): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#set[K,V](feature:com.johnsnowlabs.nlp.serialization.MapFeature[K,V],value:Map[K,V]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: SetFeature[T], value: Set[T]): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.SetFeature[T],value:Set[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "set", "tail" : "(feature: ArrayFeature[T], value: Array[T]): NerDisambiguatorModel.this.type", "member" : "com.johnsnowlabs.nlp.HasFeatures.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#set[T](feature:com.johnsnowlabs.nlp.serialization.ArrayFeature[T],value:Array[T]):HasFeatures.this.type", "kind" : "def"}, {"label" : "features", "tail" : ": ArrayBuffer[Feature[_, _, _]]", "member" : "com.johnsnowlabs.nlp.HasFeatures.features", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#features:scala.collection.mutable.ArrayBuffer[com.johnsnowlabs.nlp.serialization.Feature[_,_,_]]", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[NerDisambiguatorModel]): NerDisambiguatorModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[NerDisambiguatorModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): NerDisambiguatorModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): NerDisambiguatorModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): NerDisambiguatorModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): NerDisambiguatorModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): NerDisambiguatorModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): NerDisambiguatorModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[NerDisambiguatorModel]", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.read", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "addReader", "tail" : "(reader: (NerDisambiguatorModel, String, SparkSession) ⇒ Unit): Unit", "member" : "com.johnsnowlabs.nlp.ParamsAndFeaturesReadable.addReader", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#addReader(reader:(T,String,org.apache.spark.sql.SparkSession)=>Unit):Unit", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): NerDisambiguatorModel", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/NerDisambiguatorModel.html", "kind" : "class"}, {"name" : "com.johnsnowlabs.nlp.annotators.disambiguation.SimpleDisambiguationPipeline", "shortDescription" : "", "members_class" : [{"label" : "infer", "tail" : "(input: Dataset[Sentence]): Dataset[DisambiguatedSentence]", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.SimpleDisambiguationPipeline.infer", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#infer(input:org.apache.spark.sql.Dataset[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.Sentence]):org.apache.spark.sql.Dataset[com.johnsnowlabs.nlp.annotators.disambiguation.datatypes.DisambiguationDataTypes.DisambiguatedSentence]", "kind" : "def"}, {"label" : "pipeline", "tail" : ": Pipeline", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.SimpleDisambiguationPipeline.pipeline", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#pipeline:org.apache.spark.ml.Pipeline", "kind" : "val"}, {"member" : "com.johnsnowlabs.nlp.annotators.disambiguation.SimpleDisambiguationPipeline#<init>", "error" : "unsupported entity"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "com.johnsnowlabs.nlp.annotators.disambiguation.SimpleDisambiguationPipeline.spark", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/johnsnowlabs\/nlp\/annotators\/disambiguation\/SimpleDisambiguationPipeline.html", "kind" : "class"}], "com.johnsnowlabs.nlp.pretrained" : [{"name" : "com.johnsnowlabs.nlp.pretrained.InternalsPythonResourceDownloader", "shortDescription" : "", "object" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html", "members_object" : [{"label" : "downloadModel", "tail" : "(readerStr: String, name: String, language: String, remoteLoc: String): PipelineStage", "member" : "com.johnsnowlabs.nlp.pretrained.InternalsPythonResourceDownloader.downloadModel", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#downloadModel(readerStr:String,name:String,language:String,remoteLoc:String):org.apache.spark.ml.PipelineStage", "kind" : "def"}, {"label" : "keyToReader", "tail" : ": Map[String, DefaultParamsReadable[_]]", "member" : "com.johnsnowlabs.nlp.pretrained.InternalsPythonResourceDownloader.keyToReader", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#keyToReader:Map[String,org.apache.spark.ml.util.DefaultParamsReadable[_]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/johnsnowlabs\/nlp\/pretrained\/InternalsPythonResourceDownloader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.johnsnowlabs" : []};